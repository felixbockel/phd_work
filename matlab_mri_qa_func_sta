 %% segmentate image out of image box and analysis
function [sta_test,slice_thickness]=STA(dicom,t_path,T_image)

          if T_image == 1
              
            dicom_image=dicom(240:275,90:410); % Box für T1, 512 matrix
          
          elseif T_image == 2
              
            dicom_image=dicom(120:138,45:205); % Box für T2, 256 Matrix
          
          end

          %figure;imshow(dicom_image,[]);  
     
          %find max and binary matrix
          max_intensity=400;% 1. threshold
          dicom_image(dicom_image> max_intensity)=0;
          %1.possibility //                                                                         %%http://de.mathworks.com/help/images/examples/correcting-nonuniform-illumination.html%%
          image_adj = imadjust(dicom_image);%Increase the Image Contrast
          level = graythresh(image_adj);% 2. threshold
          image_bw = im2bw(image_adj,level);
          image_bw = bwareaopen(image_bw, 50);% Remove background noise with bwareaopen
          %2.possibility
          %middle_intensity=max_intensity./2;
          %dicom_image(dicom_image< middle_intensity)=0;% mittlere intensität von 400
          %dicom_image(dicom_image>=middle_intensity)=1;        
          %figure;imshow(I3,[]);
          %figure;imshow(bw,[]); 
          %figure;imshow(dicom_image,[]);  
          [row,col]=size(image_bw);
            
          for i=1:col
              numb_ones_y(1,i)=length(find(image_bw(:,i) == 1));
          end
          
          pos_ones_y= numb_ones_y>=3; % Schwellwert manuell ermittelt 
          
          for i=1:row
              numb_ones_x(1,i)=length(find(image_bw(i,:) == 1));
          end
          
          pos_ones_x=find(numb_ones_x>1);
          %pos_ones_x_cor=pos_ones_x;%T2
          pos_ones_x_cor=pos_ones_x(3:end-2);%T1 % Schwellwert manuell ermittelt 
          image_segment=image_bw(pos_ones_x_cor,pos_ones_y);
          %figure;imshow(image_segment,[]);
          [row,~]=size(image_segment);
            
          for i=1:row
              image_find_seg=find(image_segment(i,:) == 1);
              image_seg_row(i,:) = image_find_seg([1 end]);     
          end
          
          %figure;plot(image_seg_row(:,1));
          %figure;plot(image_seg_row(:,2));
          row_half=round(row/2);
          
          for i=1:2 % image_seg_row has 2 results that needs to be check which value is called to be the center/ the center for upper and lower image is not exactly the same
              
              mean_image_row=mean(image_seg_row(:,i));
              
              if i == 2
                  
                  if  mean_image_row<image_seg_row(row_half,i) % find center value of given two binary images
                      new_half(:,i)=row_half+1;

                      if mean_image_row<image_seg_row(row_half,i)
                          new_half(:,i)=row_half+1;

                          if mean_image_row<image_seg_row(row_half,i)
                                new_half(:,i)=row_half+1;
                          end  

                      end

                  elseif mean_image_row>image_seg_row(row_half,i)
                            new_half(:,i)=row_half-1;

                            if mean_image_row<image_seg_row(row_half,i)
                                new_half(:,i)=row_half-1; 

                                if mean_image_row<image_seg_row(row_half,i)
                                    new_half(:,i)=row_half-1;                  
                                end

                            end
                            
                  else
                      
                      new_half(:,i)=row_half; 
                     
                  end
                  
              else    
                  
                  if  mean_image_row<image_seg_row(row_half,i) % find center value of given two binary images
                      new_half(:,i)=row_half-1;

                      if mean_image_row<image_seg_row(row_half,i)
                          new_half(:,i)=row_half-1;

                          if mean_image_row<image_seg_row(row_half,i)
                                new_half(:,i)=row_half-1;
                          end  

                      end

                  elseif mean_image_row>image_seg_row(row_half,i)
                            new_half(:,i)=row_half+1;

                            if mean_image_row<image_seg_row(row_half,i)
                                new_half(:,i)=row_half+1; 

                                if mean_image_row<image_seg_row(row_half,i)
                                    new_half(:,i)=row_half+1;                  
                                end

                            end

                  else
                      
                    new_half(:,i)=row_half;  
                            
                  end          
                            
                 
                  
              end
              
          end
          
          upper_image_1=mean(image_seg_row(1:new_half(1,1)-1,1)); % 1. length upper image
          lower_image_1=mean(image_seg_row(new_half(1,1):end,1)); % 1. length lower image
          upper_image_2=mean(image_seg_row(1:new_half(1,2),2)); % 2. length upper image
          lower_image_2=mean(image_seg_row((new_half+1):end,2)); % 2. length lower image
          upper_image_dist=abs(upper_image_1-upper_image_2);
          lower_image_dist=abs(lower_image_1-lower_image_2);
          
          dicom_info=dicominfo(t_path); % DICOM image will be read out      
          FOV=char(dicom_info.Private_0051_100c);
          FOV=FOV(9:end);
          FOV_num=double(str2double(FOV)); 
          image_size=double(dicom_info.Rows);
          resolution=image_size./FOV_num; % resolution: pixel per mm 
          
          upper_image_mm=upper_image_dist/resolution;
          lower_image_mm=lower_image_dist/resolution;
          slice_thickness=0.2*(upper_image_mm*lower_image_mm)/(upper_image_mm+lower_image_mm);% accepted range 5mm +/- 0.7 mm
          % slice_thickness & sta auslesen
          
          if slice_thickness<5.7 && slice_thickness>4.3
              sta_test='sta test passed';
          else
              sta_test='sta test failed';
          end
