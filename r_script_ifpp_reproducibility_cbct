## AUfRUF: Rscript /home/boeckefx/Documents/Prostate_SOP/scripte/ifpp_reproducibility_cbct.R

## get centroid marker + balloon ##
#
marker17a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd/mDistances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon17a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd/mBallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr17a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker17a = marker17a[,1:9]
submarker17a<-submarker17a[-c( 2,4,6), ]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
centroid_balloon17a= balloon17a[,7:9]
centroid_balloon17a<-centroid_balloon17a[-c( 2,4,6),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble17a<-cbct_corr17a[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker17b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd2/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon17b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd2/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr17b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Albig^Bernd2/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker17b = marker17b[,1:9]
centroid_balloon17b= balloon17b[,7:9]
cbct_corr_odouble17b<-cbct_corr17b[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker1= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ammon_Klaus/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon1= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ammon_Klaus/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr1= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ammon_Klaus/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker1 = marker1[,1:9]
submarker1<-submarker1[-c(5), ]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
centroid_balloon1= balloon1[,7:9]
centroid_balloon1<-centroid_balloon1[-c(5),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble1<-cbct_corr1[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker13= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Beck^Michael/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon13= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Beck^Michael/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr13= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Beck^Michael/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker13 = marker13[,1:9] 
submarker13<-submarker13[-c( 4,14), ]# 2.CBCT -> erklärt in excel sop_patienten
centroid_balloon13= balloon13[,7:9]   
centroid_balloon13<-centroid_balloon13[-c( 4,14),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble13<-cbct_corr13[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#

marker2= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brauer_Reinhard/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon2= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brauer_Reinhard/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr2= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brauer_Reinhard/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker2 = marker2[,1:9]
submarker2<-submarker2[-c( 1, 3, 6), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon2= balloon2[,7:9]
centroid_balloon2<-centroid_balloon2[-c( 1,3,6),]# 2. cbct in einer fraktion entfernt  -> erklärt in excel sop_patienten
cbct_corr_odouble2<-cbct_corr2[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker30= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Fehn^Guenther/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon30= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Fehn^Guenther/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr30= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Fehn^Guenther/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker30c=marker30[,1:3]
submarker30c<-submarker30c[-c( 4), ]# 2. cbct in einer fraktion entfernt  -> erklärt in excel sop_patienten
centroid_balloon30= balloon30[,7:9] 
centroid_balloon30<-centroid_balloon30[-c( 4),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble30<-cbct_corr30[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker20= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Hackel^Hans/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon20= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Hackel^Hans/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr20= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Hackel^Hans/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker20 = marker20[,1:9]
submarker20<-submarker20[-c( 4), ]# 2. cbct in einer fraktion entfernt  -> erklärt in excel sop_patienten --> 27 fraktionen mit cbct und xray 15.03. techn. probleme
centroid_balloon20= balloon20[,7:9]
centroid_balloon20<-centroid_balloon20[-c( 4),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble20<-cbct_corr20[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble20<-cbct_corr_odouble20[-c( 23),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 15.03. techn. probleme

#
marker14= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Heidenreich/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon14= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Heidenreich/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr14= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Heidenreich/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker14 = marker14[,1:9]
submarker14<-submarker14[-c( 4,17,18,23), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon14= balloon14[,7:9]
centroid_balloon14<-centroid_balloon14[-c( 4,17,18,23),]# 2. cbct in einer fraktion entfernt  -> erklärt in excel sop_patienten
cbct_corr_odouble14<-cbct_corr14[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble14<-cbct_corr_odouble14[-c( 16,27),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 15.03. techn. probleme

#
marker29= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ivanov^Aleksandr/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon29= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ivanov^Aleksandr/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr29= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ivanov^Aleksandr/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker29 = marker29[,1:9]
submarker29<-submarker29[-c( 6,17), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon29= balloon29[,7:9]
centroid_balloon29<-centroid_balloon29[-c( 6,17),]# 2. cbct in einer fraktion entfernt und -> erklärt in excel sop_patienten
cbct_corr_odouble29<-cbct_corr29[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble29<-cbct_corr_odouble29[-c( 18,24),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 15.03. techn. probleme

#
marker12= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Jacobi^Wilfried/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon12= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Jacobi^Wilfried/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr12= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Jacobi^Wilfried/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker12 = marker12[,1:9]
submarker12<-submarker12[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon12= balloon12[,7:9]
centroid_balloon12<-centroid_balloon12[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble12<-cbct_corr12[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker18= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Kulke^Bernd/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon18= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Kulke^Bernd/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr18= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Kulke^Bernd/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker18 = marker18[,1:9]
submarker18<-submarker18[-c( 4,15), ]# 2. cbct in einer fraktion entfernt  -> erklärt in excel sop_patienten
centroid_balloon18= balloon18[,7:9]
centroid_balloon18<-centroid_balloon18[-c( 4,15),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten
cbct_corr_odouble18<-cbct_corr18[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble18<-cbct_corr_odouble18[-c( 24),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker26= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/liandrakis^sprios/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon26= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/liandrakis^sprios/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr26= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/liandrakis^sprios/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker26 = marker26[,1:9]
submarker26<-submarker26[-c( 2,5,6), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon26= balloon26[,7:9]
centroid_balloon26<-centroid_balloon26[-c( 2,5,6),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble26<-cbct_corr26[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble26<-cbct_corr_odouble26[-c( 2,5),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker53= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brendel^Reinhard/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon53= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brendel^Reinhard/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr53= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Brendel^Reinhard/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker53 = marker53[,1:9]
submarker53<-submarker53[-c( 5,28,29), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon53= balloon53[,7:9]
centroid_balloon53<-centroid_balloon53[-c( 5,28,29),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble53<-cbct_corr53[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble53<-cbct_corr_odouble53[-c( 27),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme
## 53 ist bereits ganz aus studie genommen, daten liegen noch berechnet vor ##
#

marker9a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ernst^Reinhard/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon9a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ernst^Reinhard/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr9= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ernst^Reinhard/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker9a= marker9a[,1:9]
submarker9a<-submarker9a[-c( 1,2,3,6,7,10,14,15,16), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon9a= balloon9a[,7:9]
centroid_balloon9a<-centroid_balloon9a[-c( 1,2,3,6,7,10,14,15,16),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble9<-cbct_corr9[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble9<-cbct_corr_odouble9[-c( 1,2,5,11,12,13,26),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#

marker9b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ernst^Reinhard2/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon9b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Ernst^Reinhard2/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
submarker9b= marker9b[,1:9]
submarker9b<-submarker9b[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon9b= balloon9b[,7:9]
centroid_balloon9b<-centroid_balloon9b[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten

#
marker15a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Woznik^Georg/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon15a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Woznik^Georg/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr15= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Woznik^Georg/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker15a= marker15a[,1:9]
submarker15a<-submarker15a[-c( 4,7), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon15a= balloon15a[,7:9]
centroid_balloon15a<-centroid_balloon15a[-c( 4,7),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble15<-cbct_corr15[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble15<-cbct_corr_odouble15[-c( 7,13,28),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker15b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Woznik^Georg2/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon15b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Woznik^Georg2/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
submarker15b = marker15b[,1:9]
submarker15b<-submarker15b[-c( 1,20,22), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon15b= balloon15b[,7:9]
centroid_balloon15b<-centroid_balloon15b[-c( 1,20,22),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten

#
marker32a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Koopmann^Klaus/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon32a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Koopmann^Klaus/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr32= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Koopmann^Klaus/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker32a= marker32a[,1:9]
submarker32a<-submarker32a[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon32a= balloon32a[,7:9]
centroid_balloon32a<-centroid_balloon32a[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble32<-cbct_corr32[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble32<-cbct_corr_odouble32[-c( 12,13,14,16,17,18,22,25,26,28),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker32b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Koopmann^Klaus2/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon32b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Koopmann^Klaus2/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
submarker32b = marker32b[,1:9]
submarker32b<-submarker32b[-c( 5,6,7,9,10,11,15,18,19,21), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon32b= balloon32b[,7:9]
centroid_balloon32b<-centroid_balloon32b[-c( 5,6,7,9,10,11,15,18,19,21),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten

#
marker31a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kaiser^hermann/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon31a= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kaiser^hermann/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr31= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kaiser^hermann/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker31a = marker31a[,1:9]
submarker31a<-submarker31a[-c(7,12,17), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon31a= balloon31a[,7:9]
centroid_balloon31a<-centroid_balloon31a[-c( 7,12,17),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble31<-cbct_corr31[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble31<-cbct_corr_odouble31[-c( 15,20),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker31b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kaiser^hermann2/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon31b= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kaiser^hermann2/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
submarker31b = marker31b[,1:9]
submarker31b<-submarker31b[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon31b= balloon31b[,7:9]
centroid_balloon31b<-centroid_balloon31b[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten

#
marker54= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Offenmueller^Werner/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon54= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Offenmueller^Werner/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr54= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Offenmueller^Werner/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker54 = marker54[,1:9]
submarker54<-submarker54[-c( 2,4,26), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon54= balloon54[,7:9]
centroid_balloon54<-centroid_balloon54[-c( 2,4,26),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble54<-cbct_corr54[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble54<-cbct_corr_odouble54[-c( 2,25),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker47= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Schrauder^Oliver/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon47= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Schrauder^Oliver/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr47= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Schrauder^Oliver/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker47 = marker47[,1:9]
centroid_balloon47= balloon47[,7:9]
cbct_corr_odouble47<-cbct_corr47[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker45= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/gropp_dieter/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon45= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/gropp_dieter/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr45= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/gropp_dieter/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker45 = marker45[,1:9]
submarker45<-submarker45[-c( 1,4,17), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon45= balloon45[,7:9]
centroid_balloon45<-centroid_balloon45[-c( 1,4,17),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble45<-cbct_corr45[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble45<-cbct_corr_odouble45[-c( 1,16),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker37= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/klenk_hermann/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon37= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/klenk_hermann/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr37= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/klenk_hermann/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker37 = marker37[,1:9]
submarker37<-submarker37[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon37= balloon37[,7:9]
centroid_balloon37<-centroid_balloon37[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble37<-cbct_corr37[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker35= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kraemer_elmar/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon35= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kraemer_elmar/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr35= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/kraemer_elmar/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker35 = marker35[,1:9]
submarker35<-submarker35[-c( 4,8,11), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon35= balloon35[,7:9]
centroid_balloon35<-centroid_balloon35[-c( 4,8,11),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble35<-cbct_corr35[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble35<-cbct_corr_odouble35[-c( 7,10),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker27= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Mueck^Rainer/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon27= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Mueck^Rainer/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr27= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Mueck^Rainer/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker27 = marker27[,1:9]
submarker27<-submarker27[-c( 4,19), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon27= balloon27[,7:9]
centroid_balloon27<-centroid_balloon27[-c( 4,19),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble27<-cbct_corr27[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble27<-cbct_corr_odouble27[-c( 3,19),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker19= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Paul^Burkhard/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon19= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Paul^Burkhard/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr19= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Paul^Burkhard/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker19 = marker19[,1:9]
submarker19<-submarker19[-c( 1,4,7,10,11,28), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon19= balloon19[,7:9]
centroid_balloon19<-centroid_balloon19[-c( 1,4,7,10,11,28),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble19<-cbct_corr19[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble19<-cbct_corr_odouble19[-c( 7,8,25),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker44= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/babic/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon44= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/babic/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr44= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/babic/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker44 = marker44[,1:9]
submarker44<-submarker44[-c( 4), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon44= balloon44[,7:9]
centroid_balloon44<-centroid_balloon44[-c( 4),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble44<-cbct_corr44[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker42= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/schmidt^rolf_rainer/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon42= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/schmidt^rolf_rainer/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr42= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/schmidt^rolf_rainer/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker42 = marker42[,1:9]
submarker42<-submarker42[-c( 4,5), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon42= balloon42[,7:9]
centroid_balloon42<-centroid_balloon42[-c( 4,5),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble42<-cbct_corr42[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble42<-cbct_corr_odouble42[-c( 4),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker24= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wagner^Franz/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon24= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wagner^Franz/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr24= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wagner^Franz/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker24 = marker24[,1:9]
submarker24<-submarker24[-c( 4,10,12), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon24= balloon24[,7:9]
centroid_balloon24<-centroid_balloon24[-c( 4,10,12),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble24<-cbct_corr24[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble24<-cbct_corr_odouble24[-c( 10,11,12,26),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker5= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/moenius/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon5= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/moenius/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr5= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/moenius/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker5 = marker5[,1:9]
submarker5<-submarker5[-c( 5), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon5= balloon5[,7:9]
centroid_balloon5<-centroid_balloon5[-c( 5),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble5<-cbct_corr5[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten

#
marker7= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wolfrum^Gerd/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon7= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wolfrum^Gerd/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr7= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Wolfrum^Gerd/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker7 = marker7[,1:9]
submarker7<-submarker7[-c( 5,9,26), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon7= balloon7[,7:9]
centroid_balloon7<-centroid_balloon7[-c( 5,9,26),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble7<-cbct_corr7[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble7<-cbct_corr_odouble7[-c( 8),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker8= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Zausch^Andreas/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon8= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Zausch^Andreas/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr8= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Zausch^Andreas/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker8 = marker8[,1:9]
submarker8<-submarker8[-c( 5,7,26), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon8= balloon8[,7:9]
centroid_balloon8<-centroid_balloon8[-c( 5,7,26),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble8<-cbct_corr8[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble8<-cbct_corr_odouble8[-c( 6,7,26,27),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker10= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/potschatke/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon10= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/potschatke/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr10= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/potschatke/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker10 = marker10[,1:9]
submarker10<-submarker10[-c( 4,12,26,27,28), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon10= balloon10[,7:9]
centroid_balloon10<-centroid_balloon10[-c( 4,12,26,27,28),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble10<-cbct_corr10[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble10<-cbct_corr_odouble10[-c( 4,12,13,27,28,29),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker16= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Meusel^Juergen/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon16= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Meusel^Juergen/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr16= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/Meusel^Juergen/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker16 = marker16[,1:9]
submarker16<-submarker16[-c( 2,5,24,25,27,29,31), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon16= balloon16[,7:9]
centroid_balloon16<-centroid_balloon16[-c( 2,5,24,25,27,29,31),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble16<-cbct_corr16[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble16<-cbct_corr_odouble16[-c( 22),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#
marker28= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/vazoukis^georgis/Distances.txt", sep="") , header=TRUE, sep="\t",dec=".")
balloon28= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/vazoukis^georgis/BallonParameter.txt", sep=""), header=TRUE, sep="\t",dec=".")
cbct_corr28= read.table(paste("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct/vazoukis^georgis/cbct_korrektur.txt", sep="") , header=TRUE, sep="\t",dec=".")
submarker28 = marker28[,1:9]
submarker28<-submarker28[-c( 3,5,29), ]# 2. cbct in einer fraktion entfernt und doppelte -> erklärt in excel sop_patienten
centroid_balloon28= balloon28[,7:9]
centroid_balloon28<-centroid_balloon28[-c( 3,5,29),]# 2. cbct in einer fraktion entfernt und ein fehlerbehaftetes -> erklärt in excel sop_patienten
cbct_corr_odouble28<-cbct_corr28[,c( 1,3,2)]# 2. cbct in einer fraktion -> erklärt in excel sop_patienten
cbct_corr_odouble28<-cbct_corr_odouble28[-c( 27,28),]# 2. cbct in einer fraktion entfernt -> erklärt in excel sop_patienten--> 27 fraktionen mit cbct und xray 16.03. techn. probleme

#



#################
## calculation ##
#################

## calculate center of gravity of markers ##

remove <- c (NA)

# 

center_matrix=submarker1

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
 a=center[i,]
 b=a [! a %in% remove]
 LM= (sum(b))/3
 List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
 a=center[i,]
 b=a [! a %in% remove]
 LM= (sum(b))/3
 List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center1=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker2

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center2=cbind(x_marker_center,y_marker_center,z_marker_center)


#
center_matrix=submarker5

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center5=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker7

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center7=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker8

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center8=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker9a

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center9a=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker9b

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center9b=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker10

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center10=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker12

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center12=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker13

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center13=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker14

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center14=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker15a

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center15a=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker15b

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center15b=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker16

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center16=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker17a

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center17a=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker17b

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center17b=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker18

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center18=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker19

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center19=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker20

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center20=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker24

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center24=cbind(x_marker_center,y_marker_center,z_marker_center)


#
center_matrix=submarker26

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center26=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker27

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center27=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker28

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center28=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker29

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center29=cbind(x_marker_center,y_marker_center,z_marker_center)

#

marker_center30c=submarker30c # 1 marker cbct

#

center_matrix=submarker31a

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center31a=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker31b

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center31b=cbind(x_marker_center,y_marker_center,z_marker_center)

#


center_matrix=submarker32a

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center32a=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker32b

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center32b=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker35

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center35=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker37

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center37=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker42

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center42=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker44

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center44=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker45

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center45=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker47

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center47=cbind(x_marker_center,y_marker_center,z_marker_center)

#

center_matrix=submarker53

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center53=cbind(x_marker_center,y_marker_center,z_marker_center)

#
center_matrix=submarker54

center=center_matrix[,c( 1, 4, 7)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
x_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 2, 5, 8)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
y_marker_center <- as.numeric(unlist(List))

center=center_matrix[,c( 3, 6, 9)]
List=list()
for(i in 1:nrow(center)){
  a=center[i,]
  b=a [! a %in% remove]
  LM= (sum(b))/3
  List[[length(List)+1]] = LM
}
z_marker_center <- as.numeric(unlist(List))

marker_center54=cbind(x_marker_center,y_marker_center,z_marker_center)

#


## distance in mm ## 					


#
dist_marker=marker_center1
dist_balloon=centroid_balloon1

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon1 <- as.numeric(unlist(List))

# 
dist_marker=marker_center2
dist_balloon=centroid_balloon2

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon2 <- as.numeric(unlist(List))

# 
dist_marker=marker_center5
dist_balloon=centroid_balloon5

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon5 <- as.numeric(unlist(List))

# 
dist_marker=marker_center7
dist_balloon=centroid_balloon7

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon7 <- as.numeric(unlist(List))

#
dist_marker=marker_center8
dist_balloon=centroid_balloon8

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon8 <- as.numeric(unlist(List))

#

dist_marker=marker_center9a
dist_balloon=centroid_balloon9a

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon9a <- as.numeric(unlist(List))

# 
dist_marker=marker_center9b
dist_balloon=centroid_balloon9b

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon9b <- as.numeric(unlist(List))

# 
dist_marker=marker_center10
dist_balloon=centroid_balloon10

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon10 <- as.numeric(unlist(List))

# 

dist_marker=marker_center12
dist_balloon=centroid_balloon12

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon12 <- as.numeric(unlist(List))

#
dist_marker=marker_center13
dist_balloon=centroid_balloon13

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon13 <- as.numeric(unlist(List))

# 
 
dist_marker=marker_center14
dist_balloon=centroid_balloon14

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon14 <- as.numeric(unlist(List))

#

dist_marker=marker_center15a
dist_balloon=centroid_balloon15a

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon15a <- as.numeric(unlist(List))

# 
dist_marker=marker_center15b
dist_balloon=centroid_balloon15b

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon15b <- as.numeric(unlist(List))

# 
dist_marker=marker_center16
dist_balloon=centroid_balloon16

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon16 <- as.numeric(unlist(List))

# 

dist_marker=marker_center17a
dist_balloon=centroid_balloon17a

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon17a <- as.numeric(unlist(List))

# 
dist_marker=marker_center17b
dist_balloon=centroid_balloon17b

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon17b <- as.numeric(unlist(List))

# 
 
dist_marker=marker_center18
dist_balloon=centroid_balloon18

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon18 <- as.numeric(unlist(List))

# 
dist_marker=marker_center19
dist_balloon=centroid_balloon19

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon19 <- as.numeric(unlist(List))

#
 
dist_marker=marker_center20
dist_balloon=centroid_balloon20

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon20 <- as.numeric(unlist(List))

# 
dist_marker=marker_center24
dist_balloon=centroid_balloon24

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon24 <- as.numeric(unlist(List))

# 
 
dist_marker=marker_center26
dist_balloon=centroid_balloon26

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon26 <- as.numeric(unlist(List))

# 
dist_marker=marker_center27
dist_balloon=centroid_balloon27

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon27 <- as.numeric(unlist(List))

# 
dist_marker=marker_center28
dist_balloon=centroid_balloon28

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon28 <- as.numeric(unlist(List))

#

 
dist_marker=marker_center29
dist_balloon=centroid_balloon29

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon29 <- as.numeric(unlist(List))

# 

dist_marker=marker_center30c
dist_balloon=centroid_balloon30

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon30 <- as.numeric(unlist(List))

#

dist_marker=marker_center31a
dist_balloon=centroid_balloon31a

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon31a <- as.numeric(unlist(List))

# 
dist_marker=marker_center31b
dist_balloon=centroid_balloon31b

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon31b <- as.numeric(unlist(List))

#

dist_marker=marker_center32a
dist_balloon=centroid_balloon32a

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon32a <- as.numeric(unlist(List))

# 
dist_marker=marker_center32b
dist_balloon=centroid_balloon32b

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon32b <- as.numeric(unlist(List))

# 
dist_marker=marker_center35
dist_balloon=centroid_balloon35

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon35<- as.numeric(unlist(List))

#
dist_marker=marker_center37
dist_balloon=centroid_balloon37

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon37 <- as.numeric(unlist(List))

#
dist_marker=marker_center42
dist_balloon=centroid_balloon42

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon42 <- as.numeric(unlist(List))

# 
dist_marker=marker_center44
dist_balloon=centroid_balloon44

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon44 <- as.numeric(unlist(List))

# 
dist_marker=marker_center45
dist_balloon=centroid_balloon45

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon45 <- as.numeric(unlist(List))

#
dist_marker=marker_center47
dist_balloon=centroid_balloon47

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon47 <- as.numeric(unlist(List))

#  

dist_marker=marker_center53
dist_balloon=centroid_balloon53

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))    # satz des pythagoras
  List[[length(List)+1]] = LM
}
dist_marker_balloon53 <- as.numeric(unlist(List))

# 
dist_marker=marker_center54
dist_balloon=centroid_balloon54

List=list()
for(i in 1:nrow(dist_marker)){
  a=dist_marker[i,]
  aa=dist_balloon[i,]
  b=a [! a %in% remove]
  bb=aa [! aa %in% remove]
  LM= sqrt(((bb[c(1)]-b[c(1)])^2)+((bb[c(2)]-b[c(2)])^2)+((bb[c(3)]-b[c(3)])^2))
  List[[length(List)+1]] = LM
}
dist_marker_balloon54 <- as.numeric(unlist(List))

#

## ct as reference distance +/- ##


# 
ct_calc=dist_marker_balloon1

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var1 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon2

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var2 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon5

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var5 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon7

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var7 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon8

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var8 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon9a

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var9a <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon9b


length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var9b <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon10

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var10 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon12

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var12 <- as.numeric(unlist(List))

# 
ct_calc=dist_marker_balloon13

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var13 <- as.numeric(unlist(List))

# 
ct_calc=dist_marker_balloon14

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var14 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon15a

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var15a <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon15b

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var15b <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon16

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var16 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon17a

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var17a <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon17b

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var17b <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon18

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var18 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon19

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var19 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon20

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var20 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon24

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var24 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon26

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var26 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon27

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var27 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon28

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var28 <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon29

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var29 <- as.numeric(unlist(List))

# 
ct_calc=dist_marker_balloon30

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var30 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon31a

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var31a <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon31b

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var31b <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon32a

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var32a <- as.numeric(unlist(List))

#
ct_calc=dist_marker_balloon32b

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var32b <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon35

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var35 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon37

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var37 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon42

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var42 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon44

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var44 <- as.numeric(unlist(List))

#

ct_calc=dist_marker_balloon45

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var45 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon47

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var47 <- as.numeric(unlist(List))

#
 
ct_calc=dist_marker_balloon53

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var53 <- as.numeric(unlist(List))

# 

ct_calc=dist_marker_balloon54

length_ct_calc=length(ct_calc)
List=list()
for(i in 1:(length(ct_calc)-1)){
  a=ct_calc[i]
  b=a [! a %in% remove]
  LM= b-ct_calc[length_ct_calc] 
  List[[length(List)+1]] = LM
}
ct_var54 <- as.numeric(unlist(List))

#


## ct as zero distance in absolute ##

#

ct_calc_abs1=abs(ct_var1)
#

ct_calc_abs2=abs(ct_var2)
#

ct_calc_abs5=abs(ct_var5)
#

ct_calc_abs7=abs(ct_var7)

#

ct_calc_abs8=abs(ct_var8)
#
ct_calc_abs9a=abs(ct_var9a)

#
ct_calc_abs9b=abs(ct_var9b)

#

ct_calc_abs10=abs(ct_var10)
#

ct_calc_abs12=abs(ct_var12)
#

ct_calc_abs13=abs(ct_var13)
#

ct_calc_abs14=abs(ct_var14)

#
ct_calc_abs15a=abs(ct_var15a)

#
ct_calc_abs15b=abs(ct_var15b)

#

ct_calc_abs16=abs(ct_var16)
#
ct_calc_abs17a=abs(ct_var17a)

#
ct_calc_abs17b=abs(ct_var17b)

#
ct_calc_abs18=abs(ct_var18)

#

ct_calc_abs19=abs(ct_var19)
#
ct_calc_abs20=abs(ct_var20)

#

ct_calc_abs24=abs(ct_var24)
#
ct_calc_abs26=abs(ct_var26)

#

ct_calc_abs27=abs(ct_var27)
#

ct_calc_abs28=abs(ct_var28)
#
ct_calc_abs29=abs(ct_var29)

#

ct_calc_abs30=abs(ct_var30)

#
ct_calc_abs31a=abs(ct_var31a)

#
ct_calc_abs31b=abs(ct_var31b)

#
ct_calc_abs32a=abs(ct_var32a)

#
ct_calc_abs32b=abs(ct_var32b)

#

ct_calc_abs35=abs(ct_var35)
#

ct_calc_abs37=abs(ct_var37)
#

ct_calc_abs42=abs(ct_var42)
#

ct_calc_abs44=abs(ct_var44)


ct_calc_abs45=abs(ct_var45)
#

ct_calc_abs47=abs(ct_var47)
#

ct_calc_abs53=abs(ct_var53)

#

ct_calc_abs54=abs(ct_var54)
#


## Balloon only analysis: motion CBCT vs CBCT && reference CBCT calculation ##

#
cbcb_calc=ct_calc_abs1
cbct_matrix=centroid_balloon1
ct_distance=dist_marker_balloon1


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm1=min(cbcb_calc)
reference_cbct1=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_1=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs2
cbct_matrix=centroid_balloon2
ct_distance=dist_marker_balloon2


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm2=min(cbcb_calc)
reference_cbct2=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_2=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs5
cbct_matrix=centroid_balloon5
ct_distance=dist_marker_balloon5


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm5=min(cbcb_calc)
reference_cbct5=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_5=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs7
cbct_matrix=centroid_balloon7
ct_distance=dist_marker_balloon7


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm7=min(cbcb_calc)
reference_cbct7=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_7=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs8
cbct_matrix=centroid_balloon8
ct_distance=dist_marker_balloon8


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm8=min(cbcb_calc)
reference_cbct8=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_8=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))


#
cbcb_calc=ct_calc_abs9a
cbct_matrix=centroid_balloon9a
ct_distance=dist_marker_balloon9a


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm9a=min(cbcb_calc)
reference_cbct9a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_9a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs9b
cbct_matrix=centroid_balloon9b
ct_distance=dist_marker_balloon9b


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm9b=min(cbcb_calc)
reference_cbct9b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_9b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs10
cbct_matrix=centroid_balloon10
ct_distance=dist_marker_balloon10


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm10=min(cbcb_calc)
reference_cbct10=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_10=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs12
cbct_matrix=centroid_balloon12
ct_distance=dist_marker_balloon12


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm12=min(cbcb_calc)
reference_cbct12=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_12=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs13
cbct_matrix=centroid_balloon13
ct_distance=dist_marker_balloon13


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm13=min(cbcb_calc)
reference_cbct13=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_13=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs14
cbct_matrix=centroid_balloon14
ct_distance=dist_marker_balloon14


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm14=min(cbcb_calc)
reference_cbct14=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_14=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#
cbcb_calc=ct_calc_abs15a
cbct_matrix=centroid_balloon15a
ct_distance=dist_marker_balloon15a


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm15a=min(cbcb_calc)
reference_cbct15a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_15a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs15b
cbct_matrix=centroid_balloon15b
ct_distance=dist_marker_balloon15b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
reference_cbct_mm15b=min(cbcb_calc)
reference_cbct15b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_15b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs16
cbct_matrix=centroid_balloon16
ct_distance=dist_marker_balloon16


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm16=min(cbcb_calc)
reference_cbct16=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_16=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#
cbcb_calc=ct_calc_abs17a
cbct_matrix=centroid_balloon17a
ct_distance=dist_marker_balloon17a


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm17a=min(cbcb_calc)
reference_cbct17a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_17a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs17b
cbct_matrix=centroid_balloon17b
ct_distance=dist_marker_balloon17b


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm17b=min(cbcb_calc)
reference_cbct17b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_17b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs18
cbct_matrix=centroid_balloon18
ct_distance=dist_marker_balloon18


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm18=min(cbcb_calc)
reference_cbct18=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_18=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs19
cbct_matrix=centroid_balloon19
ct_distance=dist_marker_balloon19


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm19=min(cbcb_calc)
reference_cbct19=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_19=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs20
cbct_matrix=centroid_balloon20
ct_distance=dist_marker_balloon20


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm20=min(cbcb_calc)
reference_cbct20=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_20=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs24
cbct_matrix=centroid_balloon24
ct_distance=dist_marker_balloon24


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm24=min(cbcb_calc)
reference_cbct24=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_24=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs26
cbct_matrix=centroid_balloon26
ct_distance=dist_marker_balloon26


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm26=min(cbcb_calc)
reference_cbct26=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_26=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs27
cbct_matrix=centroid_balloon27
ct_distance=dist_marker_balloon27


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm27=min(cbcb_calc)
reference_cbct27=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_27=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs28
cbct_matrix=centroid_balloon28
ct_distance=dist_marker_balloon28


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm28=min(cbcb_calc)
reference_cbct28=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_28=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs29
cbct_matrix=centroid_balloon29
ct_distance=dist_marker_balloon29


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm29=min(cbcb_calc)
reference_cbct29=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_29=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs30
cbct_matrix=centroid_balloon30
ct_distance=dist_marker_balloon30
cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm30=min(cbcb_calc)
reference_cbct30=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_30=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#
cbcb_calc=ct_calc_abs31a
cbct_matrix=centroid_balloon31a
ct_distance=dist_marker_balloon31a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm31a=min(cbcb_calc)
reference_cbct31a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_31a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs31b
cbct_matrix=centroid_balloon31b
ct_distance=dist_marker_balloon31b


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm31b=min(cbcb_calc)
reference_cbct31b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_31b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#
cbcb_calc=ct_calc_abs32a
cbct_matrix=centroid_balloon32a
ct_distance=dist_marker_balloon32a


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm32a=min(cbcb_calc)
reference_cbct32a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_32a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs32b
cbct_matrix=centroid_balloon32b
ct_distance=dist_marker_balloon32b


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm32b=min(cbcb_calc)
reference_cbct32b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_32b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs35
cbct_matrix=centroid_balloon35
ct_distance=dist_marker_balloon35


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm35=min(cbcb_calc)
reference_cbct35=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_35=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs37
cbct_matrix=centroid_balloon37
ct_distance=dist_marker_balloon37


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm37=min(cbcb_calc)
reference_cbct37=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_37=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs42
cbct_matrix=centroid_balloon42
ct_distance=dist_marker_balloon42


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm42=min(cbcb_calc)
reference_cbct42=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_42=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs44
cbct_matrix=centroid_balloon44
ct_distance=dist_marker_balloon44


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm44=min(cbcb_calc)
reference_cbct44=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_44=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs45
cbct_matrix=centroid_balloon45
ct_distance=dist_marker_balloon45


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm45=min(cbcb_calc)
reference_cbct45=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_45=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs47
cbct_matrix=centroid_balloon47
ct_distance=dist_marker_balloon47


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm47=min(cbcb_calc)
reference_cbct47=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_47=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs53
cbct_matrix=centroid_balloon53
ct_distance=dist_marker_balloon53
cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm53=min(cbcb_calc)
reference_cbct53=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_53=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

cbcb_calc=ct_calc_abs54
cbct_matrix=centroid_balloon54
ct_distance=dist_marker_balloon54


cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix)-1)){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))

reference_cbct_mm54=min(cbcb_calc)
reference_cbct54=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_matrix_54=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)-1))

#

## marker only analysis: motion CBCT vs CBCT && reference CBCT calculation ##

#

cbcb_calc=ct_calc_abs1
marker_matrix=marker_center1
ct_distance=dist_marker_balloon1

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm1=min(cbcb_calc)
reference_marker1=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_1=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs2
marker_matrix=marker_center2
ct_distance=dist_marker_balloon2

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm2=min(cbcb_calc)
reference_marker2=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_2=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs5
marker_matrix=marker_center5
ct_distance=dist_marker_balloon5

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm5=min(cbcb_calc)
reference_marker5=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_5=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs7
marker_matrix=marker_center7
ct_distance=dist_marker_balloon7

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm7=min(cbcb_calc)
reference_marker7=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_7=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs8
marker_matrix=marker_center8
ct_distance=dist_marker_balloon8

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm8=min(cbcb_calc)
reference_marker8=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_8=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs9a
marker_matrix=marker_center9a
ct_distance=dist_marker_balloon9a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm9a=min(cbcb_calc)
reference_marker9a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_9a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs9b
marker_matrix=marker_center9b
ct_distance=dist_marker_balloon9b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm9b=min(cbcb_calc)
reference_marker9b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_9b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs10
marker_matrix=marker_center10
ct_distance=dist_marker_balloon10

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm10=min(cbcb_calc)
reference_marker10=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_10=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#
cbcb_calc=ct_calc_abs12
marker_matrix=marker_center12
ct_distance=dist_marker_balloon12

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm12=min(cbcb_calc)
reference_marker12=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_12=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))
#

cbcb_calc=ct_calc_abs13
marker_matrix=marker_center13
ct_distance=dist_marker_balloon13

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm13=min(cbcb_calc)
reference_marker13=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_13=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs14
marker_matrix=marker_center14
ct_distance=dist_marker_balloon14

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm14=min(cbcb_calc)
reference_marker14=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_14=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs15a
marker_matrix=marker_center15a
ct_distance=dist_marker_balloon15a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm15a=min(cbcb_calc)
reference_marker15a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_15a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs15b
marker_matrix=marker_center15b
ct_distance=dist_marker_balloon15b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm15b=min(cbcb_calc)
reference_marker15b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_15b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs16
marker_matrix=marker_center16
ct_distance=dist_marker_balloon16

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm16=min(cbcb_calc)
reference_marker16=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_16=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs17a
marker_matrix=marker_center17a
ct_distance=dist_marker_balloon17a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm17a=min(cbcb_calc)
reference_marker17a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_17a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs17b
marker_matrix=marker_center17b
ct_distance=dist_marker_balloon17b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm17b=min(cbcb_calc)
reference_marker17b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_17b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs18
marker_matrix=marker_center18
ct_distance=dist_marker_balloon18

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm18=min(cbcb_calc)
reference_marker18=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_18=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs19
marker_matrix=marker_center19
ct_distance=dist_marker_balloon19

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm19=min(cbcb_calc)
reference_marker19=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_19=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs20
marker_matrix=marker_center20
ct_distance=dist_marker_balloon20

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm20=min(cbcb_calc)
reference_marker20=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_20=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs24
marker_matrix=marker_center24
ct_distance=dist_marker_balloon24

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm24=min(cbcb_calc)
reference_marker24=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_24=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs26
marker_matrix=marker_center26
ct_distance=dist_marker_balloon26

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm26=min(cbcb_calc)
reference_marker26=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_26=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs27
marker_matrix=marker_center27
ct_distance=dist_marker_balloon27

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm27=min(cbcb_calc)
reference_marker27=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_27=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs28
marker_matrix=marker_center28
ct_distance=dist_marker_balloon28

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm28=min(cbcb_calc)
reference_marker28=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_28=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs29
marker_matrix=marker_center29
ct_distance=dist_marker_balloon29

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm29=min(cbcb_calc)
reference_marker29=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_29=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs30
marker_matrix=marker_center30c
ct_distance=dist_marker_balloon12

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm30=min(cbcb_calc)
reference_marker30=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_30=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs31a
marker_matrix=marker_center31a
ct_distance=dist_marker_balloon31a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm31a=min(cbcb_calc)
reference_marker31a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_31a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs31b
marker_matrix=marker_center31b
ct_distance=dist_marker_balloon31b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm31b=min(cbcb_calc)
reference_marker31b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_31b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs32a
marker_matrix=marker_center32a
ct_distance=dist_marker_balloon32a

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm32a=min(cbcb_calc)
reference_marker32a=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_32a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs32b
marker_matrix=marker_center32b
ct_distance=dist_marker_balloon32b

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm32b=min(cbcb_calc)
reference_marker32b=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_32b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs35
marker_matrix=marker_center35
ct_distance=dist_marker_balloon35

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm35=min(cbcb_calc)
reference_marker35=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_35=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs37
marker_matrix=marker_center37
ct_distance=dist_marker_balloon37

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm37=min(cbcb_calc)
reference_marker37=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_37=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs42
marker_matrix=marker_center42
ct_distance=dist_marker_balloon42

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm42=min(cbcb_calc)
reference_marker42=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_42=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs44
marker_matrix=marker_center44
ct_distance=dist_marker_balloon44

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm44=min(cbcb_calc)
reference_marker44=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_44=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs45
marker_matrix=marker_center45
ct_distance=dist_marker_balloon45

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm45=min(cbcb_calc)
reference_marker45=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_45=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs47
marker_matrix=marker_center47
ct_distance=dist_marker_balloon47

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm47=min(cbcb_calc)
reference_marker47=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_47=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

cbcb_calc=ct_calc_abs53
marker_matrix=marker_center53
ct_distance=dist_marker_balloon53

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm53=min(cbcb_calc)
reference_marker53=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_53=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))
#

cbcb_calc=ct_calc_abs54
marker_matrix=marker_center54
ct_distance=dist_marker_balloon54

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix)-1)){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

reference_marker_mm54=min(cbcb_calc)
reference_marker54=((min(cbcb_calc))/(ct_distance[length(ct_distance)]))*100 # get % of reference cbct distance compare to ct 
hist_marker_54=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)-1))

#

## Datenzusammensetzung von Patienten, die eine Umplanung erhielten ##


#
ct_var9=c(ct_var9a,ct_var9b)
ct_calc_abs9=c(ct_calc_abs9a,ct_calc_abs9b)
#hist_matrix_9=c(hist_matrix_9a,hist_matrix_9b) # patient 17a has too large variation
hist_matrix_9=c(hist_matrix_9a) # patient 17a has too large variation
#hist_marker_9=c(hist_marker_9a,hist_marker_9b) # patient 17a has too large variation
hist_marker_9=c(hist_marker_9a) # patient 17a has too large variation

cbct_ball_ocorr_9=rbind(centroid_balloon9a[c((1:(nrow(centroid_balloon9a)))-1),],centroid_balloon9b[c((1:(nrow(centroid_balloon9b)))-1),])
cbct_marker_ocorr_9=rbind(marker_center9a[c((1:(nrow(marker_center9a)))-1),],marker_center9b[c((1:(nrow(marker_center9b)))-1),])

#
ct_var15=c(ct_var15a,ct_var15b)
ct_calc_abs15=c(ct_calc_abs15a,ct_calc_abs15b)
hist_matrix_15=c(hist_matrix_15a,hist_matrix_15b) # patient 17a has too large variation
#hist_matrix_17=c(hist_matrix_17b) # patient 17a has too large variation
hist_marker_15=c(hist_marker_15a,hist_marker_15b) # patient 17a has too large variation
#hist_marker_17=c(hist_marker_17b) # patient 17a has too large variation

cbct_ball_ocorr_15=rbind(centroid_balloon15a[c((1:(nrow(centroid_balloon15a)))-1),],centroid_balloon15b[c((1:(nrow(centroid_balloon15b)))-1),])
cbct_marker_ocorr_15=rbind(marker_center15a[c((1:(nrow(marker_center15a)))-1),],marker_center15b[c((1:(nrow(marker_center15b)))-1),])

#

ct_var17=c(ct_var17a,ct_var17b)
ct_calc_abs17=c(ct_calc_abs17a,ct_calc_abs17b)
#hist_matrix_17=c(hist_matrix_17a,hist_matrix_17b) # patient 17a has too large variation
hist_matrix_17=c(hist_matrix_17b) # patient 17a has too large variation
#hist_marker_17=c(hist_marker_17a,hist_marker_17b) # patient 17a has too large variation
hist_marker_17=c(hist_marker_17b) # patient 17a has too large variation
cbct_corr_odouble17=rbind(cbct_corr_odouble17a,cbct_corr_odouble17b)
cbct_ball_ocorr_17=rbind(centroid_balloon17a[c((1:(nrow(centroid_balloon17a)))-1),],centroid_balloon17b[c((1:(nrow(centroid_balloon17b)))-1),])
cbct_marker_ocorr_17=rbind(marker_center17a[c((1:(nrow(marker_center17a)))-1),],marker_center17b[c((1:(nrow(marker_center17b)))-1),])

#

ct_var31=c(ct_var31a,ct_var31b)
ct_calc_abs31=c(ct_calc_abs31a,ct_calc_abs31b)
#hist_matrix_31=c(hist_matrix_31a,hist_matrix_31b) # patient 17a has too large variation
hist_matrix_31=c(hist_matrix_31b) # patient 17a has too large variation
#hist_marker_31=c(hist_marker_31a,hist_marker_31b) # patient 17a has too large variation
hist_marker_31=c(hist_marker_31b) # patient 17a has too large variation

cbct_ball_ocorr_31=rbind(centroid_balloon31a[c((1:(nrow(centroid_balloon31a)))-1),],centroid_balloon31b[c((1:(nrow(centroid_balloon31b)))-1),])
cbct_marker_ocorr_31=rbind(marker_center31a[c((1:(nrow(marker_center31a)))-1),],marker_center31b[c((1:(nrow(marker_center31b)))-1),])

#

ct_var32=c(ct_var32a,ct_var32b)
ct_calc_abs32=c(ct_calc_abs32a,ct_calc_abs32b)
hist_matrix_32=c(hist_matrix_32a,hist_matrix_32b) # patient 17a has too large variation
#hist_matrix_17=c(hist_matrix_17b) # patient 17a has too large variation
hist_marker_32=c(hist_marker_32a,hist_marker_32b) # patient 17a has too large variation
#hist_marker_17=c(hist_marker_17b) # patient 17a has too large variation

cbct_ball_ocorr_32=rbind(centroid_balloon32a[c((1:(nrow(centroid_balloon32a)))-1),],centroid_balloon32b[c((1:(nrow(centroid_balloon32b)))-1),])
cbct_marker_ocorr_32=rbind(marker_center32a[c((1:(nrow(marker_center32a)))-1),],marker_center32b[c((1:(nrow(marker_center32b)))-1),])

#


## balloon mean and std of distance variation xyz ## -- nicht durch exactrac korrigiert

sumallhists_vector=c(hist_matrix_1,hist_matrix_2,hist_matrix_5,hist_matrix_7,hist_matrix_8,hist_matrix_9,hist_matrix_10,
hist_matrix_12,hist_matrix_13,hist_matrix_14,hist_matrix_15,hist_matrix_16,hist_matrix_17,hist_matrix_18,hist_matrix_19,
hist_matrix_20,hist_matrix_24,hist_matrix_26,hist_matrix_27,hist_matrix_28,hist_matrix_29,hist_matrix_30,hist_matrix_31,
hist_matrix_32,hist_matrix_35,hist_matrix_37,hist_matrix_42,hist_matrix_44,hist_matrix_45,hist_matrix_47,hist_matrix_54) 
col_matrix=(length(sumallhists_vector)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_balloon=matrix(sumallhists_vector,row_matrix,col_matrix)

mean_sum_balx=mean(sumallhists_balloon[c(1),]) # mean of x values
mean_sum_baly=mean(sumallhists_balloon[c(2),]) # mean of y values
mean_sum_balz=mean(sumallhists_balloon[c(3),]) # mean of z values
std_sum_balx=sd(sumallhists_balloon[c(1),]) # std of x values
std_sum_baly=sd(sumallhists_balloon[c(2),]) # std of y values
std_sum_balz=sd(sumallhists_balloon[c(3),]) # std of z values

balmeanstdballoon=cbind(mean_sum_balx,std_sum_balx,mean_sum_baly,std_sum_baly,mean_sum_balz,std_sum_balz)
#

## marker mean and std of distance variation xyz ## -- nicht durch exactrac korrigiert

#
sumallhists_vector=c(hist_marker_1,hist_marker_2,hist_marker_5,hist_marker_7,hist_marker_8,hist_marker_9,hist_marker_10,
hist_marker_12,hist_marker_13,hist_marker_14,hist_marker_15,hist_marker_16,hist_marker_17,hist_marker_18,hist_marker_19,
hist_marker_20,hist_marker_24,hist_marker_26,hist_marker_27,hist_marker_28,hist_marker_29,hist_marker_30,hist_marker_31,
hist_marker_32,hist_marker_35,hist_marker_37,hist_marker_42,hist_marker_44,hist_marker_45,hist_marker_47,hist_marker_54) # patient 9 excluded due to fiducial markers arent visible in cbct
col_matrix=(length(sumallhists_vector)/3)
row_matrix=nrow(hist_marker_1)
sumallhists_marker=matrix(sumallhists_vector,row_matrix,col_matrix)

mean_sum_marker_balx=mean(sumallhists_marker[c(1),]) # mean of x values
mean_sum_marker_baly=mean(sumallhists_marker[c(2),]) # mean of y values
mean_sum_marker_balz=mean(sumallhists_marker[c(3),]) # mean of z values
std_sum_marker_balx=sd(sumallhists_marker[c(1),]) # std of x values
std_sum_marker_baly=sd(sumallhists_marker[c(2),]) # std of y values
std_sum_marker_balz=sd(sumallhists_marker[c(3),]) # std of z values

balmeanstdmarker=cbind(mean_sum_marker_balx,std_sum_marker_balx,mean_sum_marker_baly,std_sum_marker_baly,mean_sum_marker_balz,std_sum_marker_balz)


## balloon motion including Exactrac shift ##

#
matrix_balloon=centroid_balloon1[c(1:((nrow(centroid_balloon1))-1)),]
matrix_corr_value=cbct_corr_odouble1

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc) 
  dd=cbind(-bb[1],bb[2],-cc) ############# x shift kontrollieren, anderen beiden sind ok
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_1=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon2[c(1:((nrow(centroid_balloon2))-1)),]
matrix_corr_value=cbct_corr_odouble2

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_2=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon5[c(1:((nrow(centroid_balloon5))-1)),]
matrix_corr_value=cbct_corr_odouble5

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_5=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon7[c(1:((nrow(centroid_balloon7))-1)),]
matrix_corr_value=cbct_corr_odouble7

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_7=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon8[c(1:((nrow(centroid_balloon8))-1)),]
matrix_corr_value=cbct_corr_odouble8

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_8=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=cbct_ball_ocorr_9
matrix_corr_value=cbct_corr_odouble9

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_9=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon10[c(1:((nrow(centroid_balloon10))-1)),]
matrix_corr_value=cbct_corr_odouble10

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_10=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon12[c(1:((nrow(centroid_balloon12))-1)),]
matrix_corr_value=cbct_corr_odouble12

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_12=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#


matrix_balloon=centroid_balloon13[c(1:((nrow(centroid_balloon13))-1)),]
matrix_corr_value=cbct_corr_odouble13

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_13=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon14[c(1:((nrow(centroid_balloon14))-1)),]
matrix_corr_value=cbct_corr_odouble14

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_14=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=cbct_ball_ocorr_15
matrix_corr_value=cbct_corr_odouble15

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_15=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon16[c(1:((nrow(centroid_balloon16))-1)),]
matrix_corr_value=cbct_corr_odouble16

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_16=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=cbct_ball_ocorr_17
matrix_corr_value=cbct_corr_odouble17

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_17=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon18[c(1:((nrow(centroid_balloon18))-1)),]
matrix_corr_value=cbct_corr_odouble18

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_18=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon19[c(1:((nrow(centroid_balloon19))-1)),]
matrix_corr_value=cbct_corr_odouble19

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_19=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon20[c(1:((nrow(centroid_balloon20))-1)),]
matrix_corr_value=cbct_corr_odouble20

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_20=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon24[c(1:((nrow(centroid_balloon24))-1)),]
matrix_corr_value=cbct_corr_odouble24

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_24=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#



matrix_balloon=centroid_balloon26[c(1:((nrow(centroid_balloon26))-1)),]
matrix_corr_value=cbct_corr_odouble26

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_26=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon27[c(1:((nrow(centroid_balloon27))-1)),]
matrix_corr_value=cbct_corr_odouble27

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_27=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon28[c(1:((nrow(centroid_balloon28))-1)),]
matrix_corr_value=cbct_corr_odouble28

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_28=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon29[c(1:((nrow(centroid_balloon29))-1)),]
matrix_corr_value=cbct_corr_odouble29

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_29=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon30[c(1:((nrow(centroid_balloon30))-1)),]
matrix_corr_value=cbct_corr_odouble30

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_30=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=cbct_ball_ocorr_31
matrix_corr_value=cbct_corr_odouble31

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_31=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=cbct_ball_ocorr_32
matrix_corr_value=cbct_corr_odouble32

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_32=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon35[c(1:((nrow(centroid_balloon35))-1)),]
matrix_corr_value=cbct_corr_odouble35

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_35=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon37[c(1:((nrow(centroid_balloon37))-1)),]
matrix_corr_value=cbct_corr_odouble37

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_37=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon42[c(1:((nrow(centroid_balloon42))-1)),]
matrix_corr_value=cbct_corr_odouble42

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_42=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon44[c(1:((nrow(centroid_balloon44))-1)),]
matrix_corr_value=cbct_corr_odouble44

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_44=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon45[c(1:((nrow(centroid_balloon45))-1)),]
matrix_corr_value=cbct_corr_odouble45

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_45=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon47[c(1:((nrow(centroid_balloon47))-1)),]
matrix_corr_value=cbct_corr_odouble47

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_47=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#

matrix_balloon=centroid_balloon53[c(1:((nrow(centroid_balloon53))-1)),]
matrix_corr_value=cbct_corr_odouble53

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_53=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#
matrix_balloon=centroid_balloon54[c(1:((nrow(centroid_balloon54))-1)),]
matrix_corr_value=cbct_corr_odouble54

List=list()
for(i in 1:(nrow(matrix_balloon))){
  a=matrix_balloon[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_ball <- as.numeric(unlist(List))

corr_ball_54=t(matrix(vec_corr_ball,ncol(matrix_balloon),(nrow(matrix_balloon))))

#


## marker motion including Exactrac shift ##

#
matrix_marker=marker_center1[c(1:((nrow(marker_center1))-1)),]
matrix_corr_value=cbct_corr_odouble1

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_1=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center2[c(1:((nrow(marker_center2))-1)),]
matrix_corr_value=cbct_corr_odouble2

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_2=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center5[c(1:((nrow(marker_center5))-1)),]
matrix_corr_value=cbct_corr_odouble5

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_5=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center7[c(1:((nrow(marker_center7))-1)),]
matrix_corr_value=cbct_corr_odouble7

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_7=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center8[c(1:((nrow(marker_center8))-1)),]
matrix_corr_value=cbct_corr_odouble8

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_8=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=cbct_marker_ocorr_9
matrix_corr_value=cbct_corr_odouble9

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_9=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))

#
matrix_marker=marker_center10[c(1:((nrow(marker_center10))-1)),]
matrix_corr_value=cbct_corr_odouble10

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_10=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

matrix_marker=marker_center12[c(1:((nrow(marker_center12))-1)),]
matrix_corr_value=cbct_corr_odouble12

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_12=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#


matrix_marker=marker_center13[c(1:((nrow(marker_center13))-1)),]
matrix_corr_value=cbct_corr_odouble13

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_13=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center14[c(1:((nrow(marker_center14))-1)),]
matrix_corr_value=cbct_corr_odouble14

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_14=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))

#
matrix_marker=cbct_marker_ocorr_15
matrix_corr_value=cbct_corr_odouble15

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_15=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))


#
matrix_marker=marker_center16[c(1:((nrow(marker_center16))-1)),]
matrix_corr_value=cbct_corr_odouble2

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_16=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=cbct_marker_ocorr_17
matrix_corr_value=cbct_corr_odouble17

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_17=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))


#
matrix_marker=marker_center18[c(1:((nrow(marker_center18))-1)),]
matrix_corr_value=cbct_corr_odouble18

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_18=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))

#
matrix_marker=marker_center19[c(1:((nrow(marker_center19))-1)),]
matrix_corr_value=cbct_corr_odouble2

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_19=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center20[c(1:((nrow(marker_center20))-1)),]
matrix_corr_value=cbct_corr_odouble20

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_20=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center24[c(1:((nrow(marker_center24))-1)),]
matrix_corr_value=cbct_corr_odouble24

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_24=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

matrix_marker=marker_center26[c(1:((nrow(marker_center26))-1)),]
matrix_corr_value=cbct_corr_odouble26

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_26=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center27[c(1:((nrow(marker_center27))-1)),]
matrix_corr_value=cbct_corr_odouble27

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_27=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center28[c(1:((nrow(marker_center28))-1)),]
matrix_corr_value=cbct_corr_odouble28

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_28=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

matrix_marker=marker_center29[c(1:((nrow(marker_center29))-1)),]
matrix_corr_value=cbct_corr_odouble29

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_29=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

matrix_marker=marker_center30c[c(1:((nrow(marker_center30c))-1)),]
matrix_corr_value=cbct_corr_odouble30

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_30=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=cbct_marker_ocorr_31
matrix_corr_value=cbct_corr_odouble31

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_31=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))


#
matrix_marker=cbct_marker_ocorr_32
matrix_corr_value=cbct_corr_odouble32

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_32=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))


#
matrix_marker=marker_center35[c(1:((nrow(marker_center35))-1)),]
matrix_corr_value=cbct_corr_odouble35

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_35=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center37[c(1:((nrow(marker_center37))-1)),]
matrix_corr_value=cbct_corr_odouble37

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_37=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center42[c(1:((nrow(marker_center42))-1)),]
matrix_corr_value=cbct_corr_odouble42

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_42=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center44[c(1:((nrow(marker_center44))-1)),]
matrix_corr_value=cbct_corr_odouble44

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_44=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center45[c(1:((nrow(marker_center45))-1)),]
matrix_corr_value=cbct_corr_odouble45

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_45=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center47[c(1:((nrow(marker_center47))-1)),]
matrix_corr_value=cbct_corr_odouble47

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_47=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

matrix_marker=marker_center53[c(1:((nrow(marker_center53))-1)),]
matrix_corr_value=cbct_corr_odouble53

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_53=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#
matrix_marker=marker_center54[c(1:((nrow(marker_center54))-1)),]
matrix_corr_value=cbct_corr_odouble54

List=list()
for(i in 1:(nrow(matrix_marker))){
  a=matrix_marker[i,]
  aa=matrix_corr_value[i,]
  b=a [! a %in% remove]
  bb=aa [! a %in% remove]
  cc=bb[3]
  #dd=cbind(-bb[1],bb[2],-cc)
  dd=cbind(-bb[1],bb[2],-cc)
  LM=b-dd 
  List[[length(List)+1]] = LM
}
vec_corr_marker <- as.numeric(unlist(List))

corr_marker_54=t(matrix(vec_corr_marker,ncol(matrix_marker),(nrow(matrix_marker))))
#

## balloon motion xyz including Exactrac correction ##

#
cbcb_calc=ct_calc_abs1
cbct_matrix=corr_ball_1

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_1=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs2
cbct_matrix=corr_ball_2

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_2=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs5
cbct_matrix=corr_ball_5

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_5=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs7
cbct_matrix=corr_ball_7

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_7=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs8
cbct_matrix=corr_ball_8

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_8=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs9a
cbct_matrix=corr_ball_9[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_9a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs9b
cbct_matrix=corr_ball_9[c(((length(ct_calc_abs9a)+1)):((length(ct_calc_abs9a))+(length(ct_calc_abs9b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_9b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#hist_corr_ball_9=c(hist_corr_ball_9a,hist_corr_ball_9b)
hist_corr_ball_9=c(hist_corr_ball_9a) # patient 9b reference has to large variation

#

cbcb_calc=ct_calc_abs10
cbct_matrix=corr_ball_10

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_10=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#


cbcb_calc=ct_calc_abs12
cbct_matrix=corr_ball_12

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_12=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))
#
cbcb_calc=ct_calc_abs13
cbct_matrix=corr_ball_13

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_13=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))
#
#

cbcb_calc=ct_calc_abs14
cbct_matrix=corr_ball_14

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_14=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs15a
cbct_matrix=corr_ball_15[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_15a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs15b
cbct_matrix=corr_ball_15[c((length(ct_calc_abs15a)):((length(ct_calc_abs15a))+(length(ct_calc_abs15b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_15b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

hist_corr_ball_15=c(hist_corr_ball_15a,hist_corr_ball_15b)
#hist_corr_ball_17=c(hist_corr_ball_17b) # patient 17a reference has to large variation

#

cbcb_calc=ct_calc_abs16
cbct_matrix=corr_ball_16

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_16=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs17a
cbct_matrix=corr_ball_17[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_17a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs17b
cbct_matrix=corr_ball_17[c((length(ct_calc_abs17a)):((length(ct_calc_abs17a))+(length(ct_calc_abs17b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_17b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#hist_corr_ball_17=c(hist_corr_ball_17a,hist_corr_ball_17b)
hist_corr_ball_17=c(hist_corr_ball_17b) # patient 17a reference has to large variation
#


cbcb_calc=ct_calc_abs18
cbct_matrix=corr_ball_18

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_18=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs19
cbct_matrix=corr_ball_19

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_19=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs20
cbct_matrix=corr_ball_20

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_20=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs24
cbct_matrix=corr_ball_24

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_24=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs26
cbct_matrix=corr_ball_26

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_26=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs27
cbct_matrix=corr_ball_27

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_27=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs28
cbct_matrix=corr_ball_28

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_28=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs29
cbct_matrix=corr_ball_29

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_29=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs30
cbct_matrix=corr_ball_30

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_30=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs31a
cbct_matrix=corr_ball_31[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_31a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs31b
cbct_matrix=corr_ball_31[c((length(ct_calc_abs31a)):((length(ct_calc_abs31a))+(length(ct_calc_abs31b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_31b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#hist_corr_ball_31=c(hist_corr_ball_31a,hist_corr_ball_31b)
hist_corr_ball_31=c(hist_corr_ball_31b) # patient 31a reference has to large variation

#
cbcb_calc=ct_calc_abs32a
cbct_matrix=corr_ball_32[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_32a=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#
cbcb_calc=ct_calc_abs32b
cbct_matrix=corr_ball_32[c((length(ct_calc_abs32a)):((length(ct_calc_abs32a))+(length(ct_calc_abs32b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_32b=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

hist_corr_ball_32=c(hist_corr_ball_32a,hist_corr_ball_32b)
#hist_corr_ball_17=c(hist_corr_ball_17b) # patient 17a reference has to large variation


#

cbcb_calc=ct_calc_abs35
cbct_matrix=corr_ball_35

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_35=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs37
cbct_matrix=corr_ball_37

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_37=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs42
cbct_matrix=corr_ball_42

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_42=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs44
cbct_matrix=corr_ball_44

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_44=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs45
cbct_matrix=corr_ball_45

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_45=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs47
cbct_matrix=corr_ball_47

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_47=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs53
cbct_matrix=corr_ball_53

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_53=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

cbcb_calc=ct_calc_abs54
cbct_matrix=corr_ball_54

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
cbct_ref=cbct_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(cbct_matrix))){
  a=cbct_matrix[i,]
  b=a [! a %in% remove]
  LM= b-cbct_ref
  List[[length(List)+1]] = LM
}
cbct_ref_div <- as.numeric(unlist(List))
hist_corr_ball_54=matrix(cbct_ref_div,ncol(cbct_matrix),(nrow(cbct_matrix)))

#

## marker motion xyz including Exactrac correction ##

#

cbcb_calc=ct_calc_abs1
marker_matrix=corr_marker_1

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_1=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs2
marker_matrix=corr_marker_2

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_2=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs5
marker_matrix=corr_marker_5

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_5=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs7
marker_matrix=corr_marker_7

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_7=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs8
marker_matrix=corr_marker_8

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_8=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs9a
marker_matrix=corr_marker_9[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_9a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs9b
marker_matrix=corr_marker_9[c((length(ct_calc_abs9a)):((length(ct_calc_abs9a))+(length(ct_calc_abs9b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_9b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#hist_corr_marker_9=c(hist_corr_marker_9a,hist_corr_marker_9b)
hist_corr_marker_9=c(hist_corr_marker_9a) # reference 9b has too large variation

#

cbcb_calc=ct_calc_abs10
marker_matrix=corr_marker_10

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_10=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#


cbcb_calc=ct_calc_abs12
marker_matrix=corr_marker_12

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_12=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#
cbcb_calc=ct_calc_abs13
marker_matrix=corr_marker_13

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_13=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs14
marker_matrix=corr_marker_14

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_14=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs15a
marker_matrix=corr_marker_15[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_15a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs15b
marker_matrix=corr_marker_15[c((length(ct_calc_abs15a)):((length(ct_calc_abs15a))+(length(ct_calc_abs15b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_15b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

hist_corr_marker_15=c(hist_corr_marker_15a,hist_corr_marker_15b)
#hist_corr_marker_15=c(hist_corr_marker_15b) # reference 17a has too large variation

#

cbcb_calc=ct_calc_abs16
marker_matrix=corr_marker_16

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_16=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs17a
marker_matrix=corr_marker_17[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_17a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs17b
marker_matrix=corr_marker_17[c((length(ct_calc_abs17a)):((length(ct_calc_abs17a))+(length(ct_calc_abs17b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_17b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#hist_corr_marker_17=c(hist_corr_marker_17a,hist_corr_marker_17b)
hist_corr_marker_17=c(hist_corr_marker_17b) # reference 17a has too large variation

#

cbcb_calc=ct_calc_abs18
marker_matrix=corr_marker_18

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_18=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs19
marker_matrix=corr_marker_19

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_19=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs20
marker_matrix=corr_marker_20

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_20=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs24
marker_matrix=corr_marker_24

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_24=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs26
marker_matrix=corr_marker_26

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_26=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs27
marker_matrix=corr_marker_27

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_27=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs28
marker_matrix=corr_marker_28

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_28=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs29
marker_matrix=corr_marker_29

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_29=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs30
marker_matrix=corr_marker_30

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_30=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs31a
marker_matrix=corr_marker_31[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_31a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs31b
marker_matrix=corr_marker_31[c((length(ct_calc_abs31a)):((length(ct_calc_abs31a))+(length(ct_calc_abs31b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_31b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#hist_corr_marker_31=c(hist_corr_marker_31a,hist_corr_marker_31b)
hist_corr_marker_31=c(hist_corr_marker_31b) # reference 31a has too large variation

#

cbcb_calc=ct_calc_abs32a
marker_matrix=corr_marker_32[c(1:((length(cbcb_calc)))),]			

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_32a=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs32b
marker_matrix=corr_marker_32[c((length(ct_calc_abs15a)):((length(ct_calc_abs32a))+(length(ct_calc_abs32b)))),]

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_32b=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

hist_corr_marker_32=c(hist_corr_marker_32a,hist_corr_marker_32b)
#hist_corr_marker_15=c(hist_corr_marker_15b) # reference 17a has too large variation

#

cbcb_calc=ct_calc_abs35
marker_matrix=corr_marker_35

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_35=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs37
marker_matrix=corr_marker_37

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_37=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs42
marker_matrix=corr_marker_42

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_42=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs44
marker_matrix=corr_marker_44

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_44=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs45
marker_matrix=corr_marker_45

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_45=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs47
marker_matrix=corr_marker_47

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_47=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs53
marker_matrix=corr_marker_53

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_53=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#

cbcb_calc=ct_calc_abs54
marker_matrix=corr_marker_54

cbcb_calc_div=(cbcb_calc-min(cbcb_calc)) # CBCT has closest distance to CT, which means the position of cbct and ct are likely the same -> min_cbct... is reference CBCT of all others
index_zero=which(cbcb_calc_div == 0)
marker_ref=marker_matrix[c(index_zero),]

List=list()
for(i in 1:(nrow(marker_matrix))){
  a=marker_matrix[i,]
  b=a [! a %in% remove]
  LM= b-marker_ref
  List[[length(List)+1]] = LM
}
marker_ref_div <- as.numeric(unlist(List))

hist_corr_marker_54=matrix(marker_ref_div,ncol(marker_matrix),(nrow(marker_matrix)))

#


## balloon mean and std of distance variation xyz with Exactrac correction ## 

sumallhists_vector=c(hist_corr_ball_1,hist_corr_ball_2,hist_corr_ball_5,hist_corr_ball_7,hist_corr_ball_8,hist_corr_ball_9,
hist_corr_ball_10,hist_corr_ball_12,hist_corr_ball_13,hist_corr_ball_14,hist_corr_ball_15,hist_corr_ball_16,hist_corr_ball_17,
hist_corr_ball_18,hist_corr_ball_19,hist_corr_ball_20,hist_corr_ball_24,hist_corr_ball_26,hist_corr_ball_27,hist_corr_ball_28,
hist_corr_ball_29,hist_corr_ball_30,hist_corr_ball_31,hist_corr_ball_32,hist_corr_ball_35,hist_corr_ball_37,hist_corr_ball_42,
hist_corr_ball_44,hist_corr_ball_45,hist_corr_ball_47,hist_corr_ball_54) #hist_corr_ball_53- falsche position detektiert- vllt. cbct zu unscharf und entspricht nicht dem exactrac setup, daher aus histo ausgeschlossen
col_matrix=(length(sumallhists_vector)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_corr_balloon=matrix(sumallhists_vector,row_matrix,col_matrix)

mean_sum_balx=mean(sumallhists_corr_balloon[c(1),]) # mean of x values
mean_sum_baly=mean(sumallhists_corr_balloon[c(2),]) # mean of y values
mean_sum_balz=mean(sumallhists_corr_balloon[c(3),]) # mean of z values
std_sum_balx=sd(sumallhists_corr_balloon[c(1),]) # std of x values
std_sum_baly=sd(sumallhists_corr_balloon[c(2),]) # std of y values
std_sum_balz=sd(sumallhists_corr_balloon[c(3),]) # std of z values

balmeanstdballoon_corr=cbind(mean_sum_balx,std_sum_balx,mean_sum_baly,std_sum_baly,mean_sum_balz,std_sum_balz)

## prepare previous data for boxplot plotting - each dataset must be equal to 84 ##

maxseq<-c(length(hist_corr_ball_1),length(hist_corr_ball_2),length(hist_corr_ball_5),length(hist_corr_ball_7),length(hist_corr_ball_8),length(hist_corr_ball_9),
length(hist_corr_ball_10),length(hist_corr_ball_12),length(hist_corr_ball_13),length(hist_corr_ball_14),length(hist_corr_ball_15),length(hist_corr_ball_16),
length(hist_corr_ball_17),length(hist_corr_ball_18),length(hist_corr_ball_19),length(hist_corr_ball_20),length(hist_corr_ball_24),length(hist_corr_ball_26),
length(hist_corr_ball_27),length(hist_corr_ball_28),length(hist_corr_ball_29),length(hist_corr_ball_30),length(hist_corr_ball_31),length(hist_corr_ball_32),
length(hist_corr_ball_35),length(hist_corr_ball_37),length(hist_corr_ball_42),length(hist_corr_ball_44),length(hist_corr_ball_45),length(hist_corr_ball_47),
length(hist_corr_ball_54))
add_empty_row=rep(NA,80) # empty values

hist_corr_ball_box=c(hist_corr_ball_1,add_empty_row[1:3]) #81 
hist_corr_ball_box_1=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_2) #84 
hist_corr_ball_box_2=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_5) #84 
hist_corr_ball_box_5=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_7,add_empty_row[1:3]) #81 
hist_corr_ball_box_7=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_8,add_empty_row[1:9]) #75 
hist_corr_ball_box_8=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_9,add_empty_row[1:36]) #48 
hist_corr_ball_box_9=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_10,add_empty_row[1:15]) #69 
hist_corr_ball_box_10=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_12) #84 
hist_corr_ball_box_12=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_13) #84 
hist_corr_ball_box_13=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_14,add_empty_row[1:6]) #78 
hist_corr_ball_box_14=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_15,add_empty_row[1:6]) #78 
hist_corr_ball_box_15=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_16,add_empty_row[1:3]) #81 
hist_corr_ball_box_16=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_17,add_empty_row[1:15]) #69 
hist_corr_ball_box_17=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_18,add_empty_row[1:3]) #81 
hist_corr_ball_box_18=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_19,add_empty_row[1:9]) #75 
hist_corr_ball_box_19=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_20,add_empty_row[1:3]) #81 
hist_corr_ball_box_20=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_24,add_empty_row[1:9]) #75 
hist_corr_ball_box_24=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_26,add_empty_row[1:6]) #78 
hist_corr_ball_box_26=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_27,add_empty_row[1:3]) #81 
hist_corr_ball_box_27=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_28,add_empty_row[1:6]) #78 
hist_corr_ball_box_28=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_29,add_empty_row[1:6]) #78 
hist_corr_ball_box_29=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_30) #84 
hist_corr_ball_box_30=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_31,add_empty_row[1:48]) #36 
hist_corr_ball_box_31=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_32,add_empty_row[1:27]) #57 
hist_corr_ball_box_32=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_35,add_empty_row[1:6]) #78 
hist_corr_ball_box_35=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_37) #84 
hist_corr_ball_box_37=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_42,add_empty_row[1:3]) #81 
hist_corr_ball_box_42=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_44) #84 
hist_corr_ball_box_44=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_45,add_empty_row[1:6]) #78 
hist_corr_ball_box_45=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_47) #84 
hist_corr_ball_box_47=t(matrix(hist_corr_ball_box,3,28))
hist_corr_ball_box=c(hist_corr_ball_54,add_empty_row[1:6]) #78 
hist_corr_ball_box_54=t(matrix(hist_corr_ball_box,3,28))

hist_corr_ball_box_x=cbind(hist_corr_ball_box_1[,1],hist_corr_ball_box_2[,1],hist_corr_ball_box_5[,1],hist_corr_ball_box_7[,1],hist_corr_ball_box_8[,1],
hist_corr_ball_box_9[,1],hist_corr_ball_box_10[,1],hist_corr_ball_box_12[,1],hist_corr_ball_box_13[,1],hist_corr_ball_box_14[,1],hist_corr_ball_box_15[,1],
hist_corr_ball_box_16[,1],hist_corr_ball_box_17[,1],hist_corr_ball_box_18[,1],hist_corr_ball_box_19[,1],hist_corr_ball_box_20[,1],hist_corr_ball_box_24[,1],
hist_corr_ball_box_26[,1],hist_corr_ball_box_27[,1],hist_corr_ball_box_28[,1],hist_corr_ball_box_29[,1],hist_corr_ball_box_30[,1],hist_corr_ball_box_31[,1],
hist_corr_ball_box_32[,1],hist_corr_ball_box_35[,1],hist_corr_ball_box_37[,1],hist_corr_ball_box_42[,1],hist_corr_ball_box_44[,1],hist_corr_ball_box_45[,1],
hist_corr_ball_box_47[,1],hist_corr_ball_box_54[,1])

hist_corr_ball_box_y=cbind(hist_corr_ball_box_1[,2],hist_corr_ball_box_2[,2],hist_corr_ball_box_5[,2],hist_corr_ball_box_7[,2],hist_corr_ball_box_8[,2],
hist_corr_ball_box_9[,2],hist_corr_ball_box_10[,2],hist_corr_ball_box_12[,2],hist_corr_ball_box_13[,2],hist_corr_ball_box_14[,2],hist_corr_ball_box_15[,2],
hist_corr_ball_box_16[,2],hist_corr_ball_box_17[,2],hist_corr_ball_box_18[,2],hist_corr_ball_box_19[,2],hist_corr_ball_box_20[,2],hist_corr_ball_box_24[,2],
hist_corr_ball_box_26[,2],hist_corr_ball_box_27[,2],hist_corr_ball_box_28[,2],hist_corr_ball_box_29[,2],hist_corr_ball_box_30[,2],hist_corr_ball_box_31[,2],
hist_corr_ball_box_32[,2],hist_corr_ball_box_35[,2],hist_corr_ball_box_37[,2],hist_corr_ball_box_42[,2],hist_corr_ball_box_44[,2],hist_corr_ball_box_45[,2],
hist_corr_ball_box_47[,2],hist_corr_ball_box_54[,2])

hist_corr_ball_box_z=cbind(hist_corr_ball_box_1[,3],hist_corr_ball_box_2[,3],hist_corr_ball_box_5[,3],hist_corr_ball_box_7[,3],hist_corr_ball_box_8[,3],
hist_corr_ball_box_9[,3],hist_corr_ball_box_10[,3],hist_corr_ball_box_12[,3],hist_corr_ball_box_13[,3],hist_corr_ball_box_14[,3],hist_corr_ball_box_15[,3],
hist_corr_ball_box_16[,3],hist_corr_ball_box_17[,3],hist_corr_ball_box_18[,3],hist_corr_ball_box_19[,3],hist_corr_ball_box_20[,3],hist_corr_ball_box_24[,3],
hist_corr_ball_box_26[,3],hist_corr_ball_box_27[,3],hist_corr_ball_box_28[,3],hist_corr_ball_box_29[,3],hist_corr_ball_box_30[,3],hist_corr_ball_box_31[,3],
hist_corr_ball_box_32[,3],hist_corr_ball_box_35[,3],hist_corr_ball_box_37[,3],hist_corr_ball_box_42[,3],hist_corr_ball_box_44[,3],hist_corr_ball_box_45[,3],
hist_corr_ball_box_47[,3],hist_corr_ball_box_54[,3])

#

## marker mean and std of distance variation xyz with Exactrac correction ## 

#
sumallhists_vector=c(hist_corr_marker_1,hist_corr_marker_2,hist_corr_marker_5,hist_corr_marker_7,hist_corr_marker_8,
hist_corr_marker_9,hist_corr_marker_10,hist_corr_marker_12,hist_corr_marker_13,hist_corr_marker_14,hist_corr_marker_15,
hist_corr_marker_16,hist_corr_marker_17,hist_corr_marker_18,hist_corr_marker_19,hist_corr_marker_20,hist_corr_marker_24,
hist_corr_marker_26,hist_corr_marker_27,hist_corr_marker_28,hist_corr_marker_29,hist_corr_marker_30,hist_corr_marker_31,
hist_corr_marker_32,hist_corr_marker_35,hist_corr_marker_37,hist_corr_marker_42,hist_corr_marker_44,hist_corr_marker_45,
hist_corr_marker_47,hist_corr_marker_54) # hist_corr_marker_53- falsche position detektiert- vllt. cbct zu unscharf und entspricht nicht dem exactrac setup, daher aus histo ausgeschlossen #patient 9 is excluded, because I used implanted seeds for marker location. real fiducial markers arent visuable in cbct 
col_matrix=(length(sumallhists_vector)/3)
row_matrix=nrow(hist_marker_1)
sumallhists_corr_marker=matrix(sumallhists_vector,row_matrix,col_matrix)

mean_sum_marker_balx=mean(sumallhists_corr_marker[c(1),]) # mean of x values
mean_sum_marker_baly=mean(sumallhists_corr_marker[c(2),]) # mean of y values
mean_sum_marker_balz=mean(sumallhists_corr_marker[c(3),]) # mean of z values
std_sum_marker_balx=sd(sumallhists_corr_marker[c(1),]) # std of x values
std_sum_marker_baly=sd(sumallhists_corr_marker[c(2),]) # std of y values
std_sum_marker_balz=sd(sumallhists_corr_marker[c(3),]) # std of z values

balmeanstdmarker_corr=cbind(mean_sum_marker_balx,std_sum_marker_balx,mean_sum_marker_baly,std_sum_marker_baly,mean_sum_marker_balz,std_sum_marker_balz)

## patient 1 std, mean balloon and marker for contour movie #  good patient within first std (68,2 %) of the data 

# balloon ##

mean_bal1x=mean(hist_corr_ball_1[c(1),]) # mean of x values
mean_bal1y=mean(hist_corr_ball_1[c(2),]) # mean of y values
mean_bal1z=mean(hist_corr_ball_1[c(3),]) # mean of z values
std_bal1x=sd(hist_corr_ball_1[c(1),]) # std of x values
std_bal1y=sd(hist_corr_ball_1[c(2),]) # std of y values
std_bal1z=sd(hist_corr_ball_1[c(3),]) # std of z values

bal1_mean_std=cbind(mean_bal1x,std_bal1x,mean_bal1z,std_bal1z,mean_bal1y,std_bal1y)

# marker ##

mean_marker1_balx=mean(hist_corr_marker_1[c(1),]) # mean of x values
mean_marker1_baly=mean(hist_corr_marker_1[c(2),]) # mean of y values
mean_marker1_balz=mean(hist_corr_marker_1[c(3),]) # mean of z values
std_marker1_balx=sd(hist_corr_marker_1[c(1),]) # std of x values
std_marker1_baly=sd(hist_corr_marker_1[c(2),]) # std of y values
std_marker1_balz=sd(hist_corr_marker_1[c(3),]) # std of z values

marker1_mean_std=cbind(mean_marker1_balx,std_marker1_balx,mean_marker1_balz,std_marker1_balz,mean_marker1_baly,std_marker1_baly)
print("patient 1 balloon mean std: ")
print(round(bal1_mean_std,2))
print("patient 1 marker mean std: ")
print(round(marker1_mean_std,2))


## patient xxx std, mean balloon and marker for contour movie #  worse patient within second std (27,2 %) of the data 

# balloon ##

mean_bal10x=mean(hist_corr_ball_10[c(1),]) # mean of x values
mean_bal10y=mean(hist_corr_ball_10[c(2),]) # mean of y values
mean_bal10z=mean(hist_corr_ball_10[c(3),]) # mean of z values
std_bal10x=sd(hist_corr_ball_10[c(1),]) # std of x values
std_bal10y=sd(hist_corr_ball_10[c(2),]) # std of y values
std_bal10z=sd(hist_corr_ball_10[c(3),]) # std of z values

bal10_mean_std=cbind(mean_bal10x,std_bal10x,mean_bal10z,std_bal10z,mean_bal10y,std_bal10y)

# marker ##

mean_marker10_balx=mean(hist_corr_marker_10[c(1),]) # mean of x values
mean_marker10_baly=mean(hist_corr_marker_10[c(2),]) # mean of y values
mean_marker10_balz=mean(hist_corr_marker_10[c(3),]) # mean of z values
std_marker10_balx=sd(hist_corr_marker_10[c(1),]) # std of x values
std_marker10_baly=sd(hist_corr_marker_10[c(2),]) # std of y values
std_marker10_balz=sd(hist_corr_marker_10[c(3),]) # std of z values

marker10_mean_std=cbind(mean_marker10_balx,std_marker10_balx,mean_marker10_balz,std_marker10_balz,mean_marker10_baly,std_marker10_baly)
print("patient 10 balloon mean std: ")
print(round(bal10_mean_std,2))
print("patient 10 marker mean std: ")
print(round(marker10_mean_std,2))

#

# balloon ##

mean_bal12x=mean(hist_corr_ball_12[c(1),]) # mean of x values
mean_bal12y=mean(hist_corr_ball_12[c(2),]) # mean of y values
mean_bal12z=mean(hist_corr_ball_12[c(3),]) # mean of z values
std_bal12x=sd(hist_corr_ball_12[c(1),]) # std of x values
std_bal12y=sd(hist_corr_ball_12[c(2),]) # std of y values
std_bal12z=sd(hist_corr_ball_12[c(3),]) # std of z values

bal12_mean_std=cbind(mean_bal12x,std_bal12x,mean_bal12z,std_bal12z,mean_bal12y,std_bal12y)

# marker ##

mean_marker12_balx=mean(hist_corr_marker_12[c(1),]) # mean of x values
mean_marker12_baly=mean(hist_corr_marker_12[c(2),]) # mean of y values
mean_marker12_balz=mean(hist_corr_marker_12[c(3),]) # mean of z values
std_marker12_balx=sd(hist_corr_marker_12[c(1),]) # std of x values
std_marker12_baly=sd(hist_corr_marker_12[c(2),]) # std of y values
std_marker12_balz=sd(hist_corr_marker_12[c(3),]) # std of z values

marker12_mean_std=cbind(mean_marker12_balx,std_marker12_balx,mean_marker12_balz,std_marker12_balz,mean_marker12_baly,std_marker12_baly)
print("patient 12 balloon mean std: ")
print(round(bal12_mean_std,2))
print("patient 12 marker mean std: ")
print(round(marker12_mean_std,2))

#

# balloon ##

mean_bal14x=mean(hist_corr_ball_14[c(1),]) # mean of x values
mean_bal14y=mean(hist_corr_ball_14[c(2),]) # mean of y values
mean_bal14z=mean(hist_corr_ball_14[c(3),]) # mean of z values
std_bal14x=sd(hist_corr_ball_14[c(1),]) # std of x values
std_bal14y=sd(hist_corr_ball_14[c(2),]) # std of y values
std_bal14z=sd(hist_corr_ball_14[c(3),]) # std of z values

bal14_mean_std=cbind(mean_bal14x,std_bal14x,mean_bal14z,std_bal14z,mean_bal14y,std_bal14y)

# marker ##

mean_marker14_balx=mean(hist_corr_marker_14[c(1),]) # mean of x values
mean_marker14_baly=mean(hist_corr_marker_14[c(2),]) # mean of y values
mean_marker14_balz=mean(hist_corr_marker_14[c(3),]) # mean of z values
std_marker14_balx=sd(hist_corr_marker_14[c(1),]) # std of x values
std_marker14_baly=sd(hist_corr_marker_14[c(2),]) # std of y values
std_marker14_balz=sd(hist_corr_marker_14[c(3),]) # std of z values

marker14_mean_std=cbind(mean_marker14_balx,std_marker14_balx,mean_marker14_balz,std_marker14_balz,mean_marker14_baly,std_marker14_baly)
print("patient 14 balloon mean std: ")
print(round(bal14_mean_std,2))
print("patient 14 marker mean std: ")
print(round(marker14_mean_std,2))

#

# balloon ##

mean_bal45x=mean(hist_corr_ball_45[c(1),]) # mean of x values
mean_bal45y=mean(hist_corr_ball_45[c(2),]) # mean of y values
mean_bal45z=mean(hist_corr_ball_45[c(3),]) # mean of z values
std_bal45x=sd(hist_corr_ball_45[c(1),]) # std of x values
std_bal45y=sd(hist_corr_ball_45[c(2),]) # std of y values
std_bal45z=sd(hist_corr_ball_45[c(3),]) # std of z values

bal45_mean_std=cbind(mean_bal45x,std_bal45x,mean_bal45z,std_bal45z,mean_bal45y,std_bal45y)

# marker ##

mean_marker45_balx=mean(hist_corr_marker_45[c(1),]) # mean of x values
mean_marker45_baly=mean(hist_corr_marker_45[c(2),]) # mean of y values
mean_marker45_balz=mean(hist_corr_marker_45[c(3),]) # mean of z values
std_marker45_balx=sd(hist_corr_marker_45[c(1),]) # std of x values
std_marker45_baly=sd(hist_corr_marker_45[c(2),]) # std of y values
std_marker45_balz=sd(hist_corr_marker_45[c(3),]) # std of z values

marker45_mean_std=cbind(mean_marker45_balx,std_marker45_balx,mean_marker45_balz,std_marker45_balz,mean_marker45_baly,std_marker45_baly)
print("patient 45 balloon mean std: ")
print(round(bal45_mean_std,2))
print("patient 45 marker mean std: ")
print(round(marker45_mean_std,2))
#

## prepare data for van herk formel ## 

# marker aquivalent to prostate motion ###

mean_lat=round(mean_sum_marker_balx,2)
std_lat=round(std_sum_marker_balx,2)

systematic_median_error_lat=sd(c(median(hist_corr_marker_1[1,]-mean_lat),
median(hist_corr_marker_2[1,]-mean_lat),
median(hist_corr_marker_5[1,]-mean_lat),
median(hist_corr_marker_7[1,]-mean_lat),
median(hist_corr_marker_8[1,]-mean_lat),
median(hist_corr_marker_9[1:16]-mean_lat),
median(hist_corr_marker_10[1,]-mean_lat),
median(hist_corr_marker_12[1,]-mean_lat),
median(hist_corr_marker_13[1,]-mean_lat),
median(hist_corr_marker_14[1,]-mean_lat),
median(hist_corr_marker_15[1:26]-mean_lat),
median(hist_corr_marker_16[1,]-mean_lat),
median(hist_corr_marker_17[1:23]-mean_lat),
median(hist_corr_marker_18[1,]-mean_lat),
median(hist_corr_marker_19[1,]-mean_lat),
median(hist_corr_marker_20[1,]-mean_lat),
median(hist_corr_marker_24[1,]-mean_lat),
median(hist_corr_marker_26[1,]-mean_lat),
median(hist_corr_marker_27[1,]-mean_lat),
median(hist_corr_marker_28[1,]-mean_lat),
median(hist_corr_marker_29[1,]-mean_lat),
median(hist_corr_marker_30[1,]-mean_lat),
median(hist_corr_marker_31[1:12]-mean_lat),
median(hist_corr_marker_32[1:20]-mean_lat),
median(hist_corr_marker_35[1,]-mean_lat),
median(hist_corr_marker_37[1,]-mean_lat),
median(hist_corr_marker_42[1,]-mean_lat),
median(hist_corr_marker_44[1,]-mean_lat),
median(hist_corr_marker_45[1,]-mean_lat),
median(hist_corr_marker_47[1,]-mean_lat),
median(hist_corr_marker_54[1,]-mean_lat)))# systematischer Fehler - großes sigma

random_median_error_lat=sd(c((hist_corr_marker_1[1,]-mean_lat)-(median(hist_corr_marker_1[1,]-mean_lat)),
(hist_corr_marker_2[1,]-mean_lat)-(median(hist_corr_marker_2[1,]-mean_lat)),
(hist_corr_marker_5[1,]-mean_lat)-(median(hist_corr_marker_5[1,]-mean_lat)),
(hist_corr_marker_7[1,]-mean_lat)-(median(hist_corr_marker_7[1,]-mean_lat)),
(hist_corr_marker_8[1,]-mean_lat)-(median(hist_corr_marker_8[1,]-mean_lat)),
(hist_corr_marker_9[1:16]-mean_lat)-(median(hist_corr_marker_9[1:16]-mean_lat)),
(hist_corr_marker_10[1,]-mean_lat)-(median(hist_corr_marker_10[1,]-mean_lat)),
(hist_corr_marker_12[1,]-mean_lat)-(median(hist_corr_marker_12[1,]-mean_lat)),
(hist_corr_marker_13[1,]-mean_lat)-(median(hist_corr_marker_13[1,]-mean_lat)),
(hist_corr_marker_14[1,]-mean_lat)-(median(hist_corr_marker_14[1,]-mean_lat)),
(hist_corr_marker_15[1:26]-mean_lat)-(median(hist_corr_marker_15[1:26]-mean_lat)),
(hist_corr_marker_16[1,]-mean_lat)-(median(hist_corr_marker_16[1,]-mean_lat)),
(hist_corr_marker_17[1:23]-mean_lat)-(median(hist_corr_marker_17[1:23]-mean_lat)),
(hist_corr_marker_18[1,]-mean_lat)-(median(hist_corr_marker_18[1,]-mean_lat)),
(hist_corr_marker_19[1,]-mean_lat)-(median(hist_corr_marker_19[1,]-mean_lat)),
(hist_corr_marker_20[1,]-mean_lat)-(median(hist_corr_marker_20[1,]-mean_lat)),
(hist_corr_marker_24[1,]-mean_lat)-(median(hist_corr_marker_24[1,]-mean_lat)),
(hist_corr_marker_26[1,]-mean_lat)-(median(hist_corr_marker_26[1,]-mean_lat)),
(hist_corr_marker_27[1,]-mean_lat)-(median(hist_corr_marker_27[1,]-mean_lat)),
(hist_corr_marker_28[1,]-mean_lat)-(median(hist_corr_marker_28[1,]-mean_lat)),
(hist_corr_marker_29[1,]-mean_lat)-(median(hist_corr_marker_29[1,]-mean_lat)),
(hist_corr_marker_30[1,]-mean_lat)-(median(hist_corr_marker_30[1,]-mean_lat)),
(hist_corr_marker_31[1:12]-mean_lat)-(median(hist_corr_marker_31[1:12]-mean_lat)),
(hist_corr_marker_32[1:20]-mean_lat)-(median(hist_corr_marker_32[1:20]-mean_lat)),
(hist_corr_marker_35[1,]-mean_lat)-(median(hist_corr_marker_35[1,]-mean_lat)),
(hist_corr_marker_37[1,]-mean_lat)-(median(hist_corr_marker_37[1,]-mean_lat)),
(hist_corr_marker_42[1,]-mean_lat)-(median(hist_corr_marker_42[1,]-mean_lat)),
(hist_corr_marker_44[1,]-mean_lat)-(median(hist_corr_marker_44[1,]-mean_lat)),
(hist_corr_marker_45[1,]-mean_lat)-(median(hist_corr_marker_45[1,]-mean_lat)),
(hist_corr_marker_47[1,]-mean_lat)-(median(hist_corr_marker_47[1,]-mean_lat)),
(hist_corr_marker_54[1,]-mean_lat)-(median(hist_corr_marker_54[1,]-mean_lat))))# zufälliger Fehler- kleines sigma

print(paste("marker global mean lat",mean_lat))
print(paste("marker std of global mean lat",std_lat))
print(paste("marker systematic_median_error_lat",round(systematic_median_error_lat,2)))
print(paste("marker random_median_error_lat",round(random_median_error_lat,2)))

#


mean_vert=round(mean_sum_marker_baly,2)
std_vert=round(std_sum_marker_baly,2)

systematic_median_error_vert=sd(c(median(hist_corr_marker_1[2,]-mean_vert),
median(hist_corr_marker_2[2,]-mean_vert),
median(hist_corr_marker_5[2,]-mean_vert),
median(hist_corr_marker_7[2,]-mean_vert),
median(hist_corr_marker_8[2,]-mean_vert),
median(hist_corr_marker_9[17:32]-mean_vert),
median(hist_corr_marker_10[2,]-mean_vert),
median(hist_corr_marker_12[2,]-mean_vert),
median(hist_corr_marker_13[2,]-mean_vert),
median(hist_corr_marker_14[2,]-mean_vert),
median(hist_corr_marker_15[27:52]-mean_vert),
median(hist_corr_marker_16[2,]-mean_vert),
median(hist_corr_marker_17[24:46]-mean_vert),
median(hist_corr_marker_18[2,]-mean_vert),
median(hist_corr_marker_19[2,]-mean_vert),
median(hist_corr_marker_20[2,]-mean_vert),
median(hist_corr_marker_24[2,]-mean_vert),
median(hist_corr_marker_26[2,]-mean_vert),
median(hist_corr_marker_27[2,]-mean_vert),
median(hist_corr_marker_28[2,]-mean_vert),
median(hist_corr_marker_29[2,]-mean_vert),
median(hist_corr_marker_30[2,]-mean_vert),
median(hist_corr_marker_31[13:24]-mean_vert),
median(hist_corr_marker_32[21:40]-mean_vert),
median(hist_corr_marker_35[2,]-mean_vert),
median(hist_corr_marker_37[2,]-mean_vert),
median(hist_corr_marker_42[2,]-mean_vert),
median(hist_corr_marker_44[2,]-mean_vert),
median(hist_corr_marker_45[2,]-mean_vert),
median(hist_corr_marker_47[2,]-mean_vert),
median(hist_corr_marker_54[2,]-mean_vert)))# systematischer Fehler - großes sigma

random_median_error_vert=sd(c((hist_corr_marker_1[2,]-mean_vert)-(median(hist_corr_marker_1[,1]-mean_vert)),
(hist_corr_marker_2[2,]-mean_vert)-(median(hist_corr_marker_2[2,]-mean_vert)),
(hist_corr_marker_5[2,]-mean_vert)-(median(hist_corr_marker_5[2,]-mean_vert)),
(hist_corr_marker_7[2,]-mean_vert)-(median(hist_corr_marker_7[2,]-mean_vert)),
(hist_corr_marker_8[2,]-mean_vert)-(median(hist_corr_marker_8[2,]-mean_vert)),
(hist_corr_marker_9[17:32]-mean_vert)-(median(hist_corr_marker_9[17:32]-mean_vert)),
(hist_corr_marker_10[2,]-mean_vert)-(median(hist_corr_marker_10[2,]-mean_vert)),
(hist_corr_marker_12[2,]-mean_vert)-(median(hist_corr_marker_12[2,]-mean_vert)),
(hist_corr_marker_13[2,]-mean_vert)-(median(hist_corr_marker_13[2,]-mean_vert)),
(hist_corr_marker_14[2,]-mean_vert)-(median(hist_corr_marker_14[2,]-mean_vert)),
(hist_corr_marker_15[27:52]-mean_vert)-(median(hist_corr_marker_15[27:52]-mean_vert)),
(hist_corr_marker_16[2,]-mean_vert)-(median(hist_corr_marker_16[2,]-mean_vert)),
(hist_corr_marker_17[24:46]-mean_vert)-(median(hist_corr_marker_17[24:46]-mean_vert)),
(hist_corr_marker_18[2,]-mean_vert)-(median(hist_corr_marker_18[2,]-mean_vert)),
(hist_corr_marker_19[2,]-mean_vert)-(median(hist_corr_marker_19[2,]-mean_vert)),
(hist_corr_marker_20[2,]-mean_vert)-(median(hist_corr_marker_20[2,]-mean_vert)),
(hist_corr_marker_24[2,]-mean_vert)-(median(hist_corr_marker_24[2,]-mean_vert)),
(hist_corr_marker_26[2,]-mean_vert)-(median(hist_corr_marker_26[2,]-mean_vert)),
(hist_corr_marker_27[2,]-mean_vert)-(median(hist_corr_marker_27[2,]-mean_vert)),
(hist_corr_marker_28[2,]-mean_vert)-(median(hist_corr_marker_28[2,]-mean_vert)),
(hist_corr_marker_29[2,]-mean_vert)-(median(hist_corr_marker_29[2,]-mean_vert)),
(hist_corr_marker_30[2,]-mean_vert)-(median(hist_corr_marker_30[2,]-mean_vert)),
(hist_corr_marker_31[13:24]-mean_vert)-(median(hist_corr_marker_31[13:24]-mean_vert)),
(hist_corr_marker_32[21:40]-mean_vert)-(median(hist_corr_marker_32[21:40]-mean_vert)),
(hist_corr_marker_35[2,]-mean_vert)-(median(hist_corr_marker_35[2,]-mean_vert)),
(hist_corr_marker_37[2,]-mean_vert)-(median(hist_corr_marker_37[2,]-mean_vert)),
(hist_corr_marker_42[2,]-mean_vert)-(median(hist_corr_marker_42[2,]-mean_vert)),
(hist_corr_marker_44[2,]-mean_vert)-(median(hist_corr_marker_44[2,]-mean_vert)),
(hist_corr_marker_45[2,]-mean_vert)-(median(hist_corr_marker_45[2,]-mean_vert)),
(hist_corr_marker_47[2,]-mean_vert)-(median(hist_corr_marker_47[2,]-mean_vert)),
(hist_corr_marker_54[2,]-mean_vert)-(median(hist_corr_marker_54[2,]-mean_vert))))# zufälliger Fehler- kleines sigma

print(paste("marker global mean vert",mean_vert))
print(paste("marker std of global mean vert",std_vert))
print(paste("marker systematic_median_error_vert",round(systematic_median_error_vert,2)))
print(paste("marker random_median_error_vert",round(random_median_error_vert,2)))

#

mean_long=round(mean_sum_marker_balz,2)
std_long=round(std_sum_marker_balz,2)

systematic_median_error_long=sd(c(median(hist_corr_marker_1[3,]-mean_long),
median(hist_corr_marker_2[3,]-mean_long),
median(hist_corr_marker_5[3,]-mean_long),
median(hist_corr_marker_7[3,]-mean_long),
median(hist_corr_marker_8[3,]-mean_long),
median(hist_corr_marker_9[33:48]-mean_long),
median(hist_corr_marker_10[3,]-mean_long),
median(hist_corr_marker_12[3,]-mean_long),
median(hist_corr_marker_13[3,]-mean_long),
median(hist_corr_marker_14[3,]-mean_long),
median(hist_corr_marker_15[53:78]-mean_long),
median(hist_corr_marker_16[3,]-mean_long),
median(hist_corr_marker_17[47:69]-mean_long),
median(hist_corr_marker_18[3,]-mean_long),
median(hist_corr_marker_19[3,]-mean_long),
median(hist_corr_marker_20[3,]-mean_long),
median(hist_corr_marker_24[3,]-mean_long),
median(hist_corr_marker_26[3,]-mean_long),
median(hist_corr_marker_27[53:78]-mean_long),
median(hist_corr_marker_28[3,]-mean_long),
median(hist_corr_marker_29[3,]-mean_long),
median(hist_corr_marker_30[3,]-mean_long),
median(hist_corr_marker_31[25:36]-mean_long),
median(hist_corr_marker_32[41:60]-mean_long),
median(hist_corr_marker_35[3,]-mean_long),
median(hist_corr_marker_37[3,]-mean_long),
median(hist_corr_marker_42[3,]-mean_long),
median(hist_corr_marker_44[3,]-mean_long),
median(hist_corr_marker_45[3,]-mean_long),
median(hist_corr_marker_47[3,]-mean_long),
median(hist_corr_marker_54[3,]-mean_long)))# systematischer Fehler - großes sigma

random_median_error_long=sd(c((hist_corr_marker_1[3,]-mean_long)-(median(hist_corr_marker_1[,1]-mean_long)),
(hist_corr_marker_2[3,]-mean_long)-(median(hist_corr_marker_2[3,]-mean_long)),
(hist_corr_marker_5[3,]-mean_long)-(median(hist_corr_marker_5[3,]-mean_long)),
(hist_corr_marker_7[3,]-mean_long)-(median(hist_corr_marker_7[3,]-mean_long)),
(hist_corr_marker_8[3,]-mean_long)-(median(hist_corr_marker_8[3,]-mean_long)),
(hist_corr_marker_9[33:48]-mean_long)-(median(hist_corr_marker_9[33:48]-mean_long)),
(hist_corr_marker_10[3,]-mean_long)-(median(hist_corr_marker_10[3,]-mean_long)),
(hist_corr_marker_12[3,]-mean_long)-(median(hist_corr_marker_12[3,]-mean_long)),
(hist_corr_marker_13[3,]-mean_long)-(median(hist_corr_marker_13[3,]-mean_long)),
(hist_corr_marker_14[3,]-mean_long)-(median(hist_corr_marker_14[3,]-mean_long)),
(hist_corr_marker_15[53:78]-mean_long)-(median(hist_corr_marker_15[53:78]-mean_long)),
(hist_corr_marker_16[3,]-mean_long)-(median(hist_corr_marker_16[3,]-mean_long)),
(hist_corr_marker_17[47:69]-mean_long)-(median(hist_corr_marker_17[47:69]-mean_long)),
(hist_corr_marker_18[3,]-mean_long)-(median(hist_corr_marker_18[3,]-mean_long)),
(hist_corr_marker_19[3,]-mean_long)-(median(hist_corr_marker_19[3,]-mean_long)),
(hist_corr_marker_20[3,]-mean_long)-(median(hist_corr_marker_20[3,]-mean_long)),
(hist_corr_marker_24[3,]-mean_long)-(median(hist_corr_marker_24[3,]-mean_long)),
(hist_corr_marker_26[3,]-mean_long)-(median(hist_corr_marker_26[3,]-mean_long)),
(hist_corr_marker_27[3,]-mean_long)-(median(hist_corr_marker_27[3,]-mean_long)),
(hist_corr_marker_28[3,]-mean_long)-(median(hist_corr_marker_28[3,]-mean_long)),
(hist_corr_marker_29[3,]-mean_long)-(median(hist_corr_marker_29[3,]-mean_long)),
(hist_corr_marker_30[3,]-mean_long)-(median(hist_corr_marker_30[3,]-mean_long)),
(hist_corr_marker_31[25:36]-mean_long)-(median(hist_corr_marker_31[25:36]-mean_long)),
(hist_corr_marker_32[41:60]-mean_long)-(median(hist_corr_marker_32[41:60]-mean_long)),
(hist_corr_marker_35[3,]-mean_long)-(median(hist_corr_marker_35[3,]-mean_long)),
(hist_corr_marker_37[3,]-mean_long)-(median(hist_corr_marker_37[3,]-mean_long)),
(hist_corr_marker_42[3,]-mean_long)-(median(hist_corr_marker_42[3,]-mean_long)),
(hist_corr_marker_44[3,]-mean_long)-(median(hist_corr_marker_44[3,]-mean_long)),
(hist_corr_marker_45[3,]-mean_long)-(median(hist_corr_marker_45[3,]-mean_long)),
(hist_corr_marker_47[3,]-mean_long)-(median(hist_corr_marker_47[3,]-mean_long)),
(hist_corr_marker_54[3,]-mean_long)-(median(hist_corr_marker_54[3,]-mean_long))))# zufälliger Fehler- kleines sigma

print(paste("marker global mean long",mean_long))
print(paste("marker std of global mean long",std_long))
print(paste("marker systematic_median_error_long",round(systematic_median_error_long,2)))
print(paste("marker random_median_error_long",round(random_median_error_long,2)))


# balloon ####

mean_lat=round(mean_sum_balx,2)
std_lat=round(std_sum_balx,2)

systematic_median_error_lat=sd(c(median(hist_corr_ball_1[1,]-mean_lat),
median(hist_corr_ball_2[1,]-mean_lat),
median(hist_corr_ball_5[1,]-mean_lat),
median(hist_corr_ball_7[1,]-mean_lat),
median(hist_corr_ball_8[1,]-mean_lat),
median(hist_corr_ball_9[1:16]-mean_lat),
median(hist_corr_ball_10[1,]-mean_lat),
median(hist_corr_ball_12[1,]-mean_lat),
median(hist_corr_ball_13[1,]-mean_lat),
median(hist_corr_ball_14[1,]-mean_lat),
median(hist_corr_ball_15[1:26]-mean_lat),
median(hist_corr_ball_16[1,]-mean_lat),
median(hist_corr_ball_17[1:23]-mean_lat),
median(hist_corr_ball_18[1,]-mean_lat),
median(hist_corr_ball_19[1,]-mean_lat),
median(hist_corr_ball_20[1,]-mean_lat),
median(hist_corr_ball_24[1,]-mean_lat),
median(hist_corr_ball_26[1,]-mean_lat),
median(hist_corr_ball_27[1,]-mean_lat),
median(hist_corr_ball_28[1,]-mean_lat),
median(hist_corr_ball_29[1,]-mean_lat),
median(hist_corr_ball_30[1,]-mean_lat),
median(hist_corr_ball_31[1:12]-mean_lat),
median(hist_corr_ball_32[1:19]-mean_lat),
median(hist_corr_ball_35[1,]-mean_lat),
median(hist_corr_ball_37[1,]-mean_lat),
median(hist_corr_ball_42[1,]-mean_lat),
median(hist_corr_ball_44[1,]-mean_lat),
median(hist_corr_ball_45[1,]-mean_lat),
median(hist_corr_ball_47[1,]-mean_lat),
median(hist_corr_ball_54[1,]-mean_lat)))# systematischer Fehler - großes sigma

random_median_error_lat=sd(c((hist_corr_ball_1[1,]-mean_lat)-(median(hist_corr_ball_1[1,]-mean_lat)),
(hist_corr_ball_2[1,]-mean_lat)-(median(hist_corr_ball_2[1,]-mean_lat)),
(hist_corr_ball_5[1,]-mean_lat)-(median(hist_corr_ball_5[1,]-mean_lat)),
(hist_corr_ball_7[1,]-mean_lat)-(median(hist_corr_ball_7[1,]-mean_lat)),
(hist_corr_ball_8[1,]-mean_lat)-(median(hist_corr_ball_8[1,]-mean_lat)),
(hist_corr_ball_9[1:16]-mean_lat)-(median(hist_corr_ball_9[1:16]-mean_lat)),
(hist_corr_ball_10[1,]-mean_lat)-(median(hist_corr_ball_10[1,]-mean_lat)),
(hist_corr_ball_12[1,]-mean_lat)-(median(hist_corr_ball_12[1,]-mean_lat)),
(hist_corr_ball_13[1,]-mean_lat)-(median(hist_corr_ball_13[1,]-mean_lat)),
(hist_corr_ball_14[1,]-mean_lat)-(median(hist_corr_ball_14[1,]-mean_lat)),
(hist_corr_ball_15[1:26]-mean_lat)-(median(hist_corr_ball_15[1:26]-mean_lat)),
(hist_corr_ball_16[1,]-mean_lat)-(median(hist_corr_ball_16[1,]-mean_lat)),
(hist_corr_ball_17[1:23]-mean_lat)-(median(hist_corr_ball_17[1:23]-mean_lat)),
(hist_corr_ball_18[1,]-mean_lat)-(median(hist_corr_ball_18[1,]-mean_lat)),
(hist_corr_ball_19[1,]-mean_lat)-(median(hist_corr_ball_19[1,]-mean_lat)),
(hist_corr_ball_20[1,]-mean_lat)-(median(hist_corr_ball_20[1,]-mean_lat)),
(hist_corr_ball_24[1,]-mean_lat)-(median(hist_corr_ball_24[1,]-mean_lat)),
(hist_corr_ball_26[1,]-mean_lat)-(median(hist_corr_ball_26[1,]-mean_lat)),
(hist_corr_ball_27[1,]-mean_lat)-(median(hist_corr_ball_27[1,]-mean_lat)),
(hist_corr_ball_28[1,]-mean_lat)-(median(hist_corr_ball_28[1,]-mean_lat)),
(hist_corr_ball_29[1,]-mean_lat)-(median(hist_corr_ball_29[1,]-mean_lat)),
(hist_corr_ball_30[1,]-mean_lat)-(median(hist_corr_ball_30[1,]-mean_lat)),
(hist_corr_ball_31[1:12]-mean_lat)-(median(hist_corr_ball_31[1:12]-mean_lat)),
(hist_corr_ball_32[1:19]-mean_lat)-(median(hist_corr_ball_32[1:19]-mean_lat)),
(hist_corr_ball_35[1,]-mean_lat)-(median(hist_corr_ball_35[1,]-mean_lat)),
(hist_corr_ball_37[1,]-mean_lat)-(median(hist_corr_ball_37[1,]-mean_lat)),
(hist_corr_ball_42[1,]-mean_lat)-(median(hist_corr_ball_42[1,]-mean_lat)),
(hist_corr_ball_44[1,]-mean_lat)-(median(hist_corr_ball_44[1,]-mean_lat)),
(hist_corr_ball_45[1,]-mean_lat)-(median(hist_corr_ball_45[1,]-mean_lat)),
(hist_corr_ball_47[1,]-mean_lat)-(median(hist_corr_ball_47[1,]-mean_lat)),
(hist_corr_ball_54[1,]-mean_lat)-(median(hist_corr_ball_54[1,]-mean_lat))))# zufälliger Fehler- kleines sigma

print(paste("balloon global mean lat",mean_lat))
print(paste("balloon std of global mean lat",std_lat))
print(paste("balloon systematic_median_error_lat",round(systematic_median_error_lat,2)))
print(paste("balloon random_median_error_lat",round(random_median_error_lat,2)))

#


mean_vert=round(mean_sum_baly,2)
std_vert=round(std_sum_baly,2)

systematic_median_error_vert=sd(c(median(hist_corr_ball_1[2,]-mean_vert),
median(hist_corr_ball_2[2,]-mean_vert),
median(hist_corr_ball_5[2,]-mean_vert),
median(hist_corr_ball_7[2,]-mean_vert),
median(hist_corr_ball_8[2,]-mean_vert),
median(hist_corr_ball_9[17:32]-mean_vert),
median(hist_corr_ball_10[2,]-mean_vert),
median(hist_corr_ball_12[2,]-mean_vert),
median(hist_corr_ball_13[2,]-mean_vert),
median(hist_corr_ball_14[2,]-mean_vert),
median(hist_corr_ball_15[27:52]-mean_vert),
median(hist_corr_ball_16[2,]-mean_vert),
median(hist_corr_ball_17[24:46]-mean_vert),
median(hist_corr_ball_18[2,]-mean_vert),
median(hist_corr_ball_19[2,]-mean_vert),
median(hist_corr_ball_20[2,]-mean_vert),
median(hist_corr_ball_24[2,]-mean_vert),
median(hist_corr_ball_26[2,]-mean_vert),
median(hist_corr_ball_27[2,]-mean_vert),
median(hist_corr_ball_28[2,]-mean_vert),
median(hist_corr_ball_29[2,]-mean_vert),
median(hist_corr_ball_30[2,]-mean_vert),
median(hist_corr_ball_31[13:24]-mean_vert),
median(hist_corr_ball_32[20:38]-mean_vert),
median(hist_corr_ball_35[2,]-mean_vert),
median(hist_corr_ball_37[2,]-mean_vert),
median(hist_corr_ball_42[2,]-mean_vert),
median(hist_corr_ball_44[2,]-mean_vert),
median(hist_corr_ball_45[2,]-mean_vert),
median(hist_corr_ball_47[2,]-mean_vert),
median(hist_corr_ball_54[2,]-mean_vert)))# systematischer Fehler - großes sigma

random_median_error_vert=sd(c((hist_corr_ball_1[2,]-mean_vert)-(median(hist_corr_ball_1[,1]-mean_vert)),
(hist_corr_ball_2[2,]-mean_vert)-(median(hist_corr_ball_2[2,]-mean_vert)),
(hist_corr_ball_5[2,]-mean_vert)-(median(hist_corr_ball_5[2,]-mean_vert)),
(hist_corr_ball_7[2,]-mean_vert)-(median(hist_corr_ball_7[2,]-mean_vert)),
(hist_corr_ball_8[2,]-mean_vert)-(median(hist_corr_ball_8[2,]-mean_vert)),
(hist_corr_ball_9[17:32]-mean_vert)-(median(hist_corr_ball_9[17:32]-mean_vert)),
(hist_corr_ball_10[2,]-mean_vert)-(median(hist_corr_ball_10[2,]-mean_vert)),
(hist_corr_ball_12[2,]-mean_vert)-(median(hist_corr_ball_12[2,]-mean_vert)),
(hist_corr_ball_13[2,]-mean_vert)-(median(hist_corr_ball_13[2,]-mean_vert)),
(hist_corr_ball_14[2,]-mean_vert)-(median(hist_corr_ball_14[2,]-mean_vert)),
(hist_corr_ball_15[27:52]-mean_vert)-(median(hist_corr_ball_15[27:52]-mean_vert)),
(hist_corr_ball_16[2,]-mean_vert)-(median(hist_corr_ball_16[2,]-mean_vert)),
(hist_corr_ball_17[24:46]-mean_vert)-(median(hist_corr_ball_17[24:46]-mean_vert)),
(hist_corr_ball_18[2,]-mean_vert)-(median(hist_corr_ball_18[2,]-mean_vert)),
(hist_corr_ball_19[2,]-mean_vert)-(median(hist_corr_ball_19[2,]-mean_vert)),
(hist_corr_ball_20[2,]-mean_vert)-(median(hist_corr_ball_20[2,]-mean_vert)),
(hist_corr_ball_24[2,]-mean_vert)-(median(hist_corr_ball_24[2,]-mean_vert)),
(hist_corr_ball_26[2,]-mean_vert)-(median(hist_corr_ball_26[2,]-mean_vert)),
(hist_corr_ball_27[2,]-mean_vert)-(median(hist_corr_ball_27[2,]-mean_vert)),
(hist_corr_ball_28[2,]-mean_vert)-(median(hist_corr_ball_28[2,]-mean_vert)),
(hist_corr_ball_29[2,]-mean_vert)-(median(hist_corr_ball_29[2,]-mean_vert)),
(hist_corr_ball_30[2,]-mean_vert)-(median(hist_corr_ball_30[2,]-mean_vert)),
(hist_corr_ball_31[13:24]-mean_vert)-(median(hist_corr_ball_31[13:24]-mean_vert)),
(hist_corr_ball_32[20:38]-mean_vert)-(median(hist_corr_ball_32[20:38]-mean_vert)),
(hist_corr_ball_35[2,]-mean_vert)-(median(hist_corr_ball_35[2,]-mean_vert)),
(hist_corr_ball_37[2,]-mean_vert)-(median(hist_corr_ball_37[2,]-mean_vert)),
(hist_corr_ball_42[2,]-mean_vert)-(median(hist_corr_ball_42[2,]-mean_vert)),
(hist_corr_ball_44[2,]-mean_vert)-(median(hist_corr_ball_44[2,]-mean_vert)),
(hist_corr_ball_45[2,]-mean_vert)-(median(hist_corr_ball_45[2,]-mean_vert)),
(hist_corr_ball_47[2,]-mean_vert)-(median(hist_corr_ball_47[2,]-mean_vert)),
(hist_corr_ball_54[2,]-mean_vert)-(median(hist_corr_ball_54[2,]-mean_vert))))# zufälliger Fehler- kleines sigma

print(paste("balloon global mean vert",mean_vert))
print(paste("balloon std of global mean vert",std_vert))
print(paste("balloon systematic_median_error_vert",round(systematic_median_error_vert,2)))
print(paste("balloon random_median_error_vert",round(random_median_error_vert,2)))

#

mean_long=round(mean_sum_balz,2)
std_long=round(std_sum_balz,2)

systematic_median_error_long=sd(c(median(hist_corr_ball_1[3,]-mean_long),
median(hist_corr_ball_2[3,]-mean_long),
median(hist_corr_ball_5[3,]-mean_long),
median(hist_corr_ball_7[3,]-mean_long),
median(hist_corr_ball_8[3,]-mean_long),
median(hist_corr_ball_9[33:48]-mean_long),
median(hist_corr_ball_10[3,]-mean_long),
median(hist_corr_ball_12[3,]-mean_long),
median(hist_corr_ball_13[3,]-mean_long),
median(hist_corr_ball_14[3,]-mean_long),
median(hist_corr_ball_15[53:78]-mean_long),
median(hist_corr_ball_16[3,]-mean_long),
median(hist_corr_ball_17[47:69]-mean_long),
median(hist_corr_ball_18[3,]-mean_long),
median(hist_corr_ball_19[3,]-mean_long),
median(hist_corr_ball_20[3,]-mean_long),
median(hist_corr_ball_24[3,]-mean_long),
median(hist_corr_ball_26[3,]-mean_long),
median(hist_corr_ball_27[53:78]-mean_long),
median(hist_corr_ball_28[3,]-mean_long),
median(hist_corr_ball_29[3,]-mean_long),
median(hist_corr_ball_30[3,]-mean_long),
median(hist_corr_ball_31[25:36]-mean_long),
median(hist_corr_ball_32[39:57]-mean_long),
median(hist_corr_ball_35[3,]-mean_long),
median(hist_corr_ball_37[3,]-mean_long),
median(hist_corr_ball_42[3,]-mean_long),
median(hist_corr_ball_44[3,]-mean_long),
median(hist_corr_ball_45[3,]-mean_long),
median(hist_corr_ball_47[3,]-mean_long),
median(hist_corr_ball_54[3,]-mean_long)))# systematischer Fehler - großes sigma

random_median_error_long=sd(c((hist_corr_ball_1[3,]-mean_long)-(median(hist_corr_ball_1[,1]-mean_long)),
(hist_corr_ball_2[3,]-mean_long)-(median(hist_corr_ball_2[3,]-mean_long)),
(hist_corr_ball_5[3,]-mean_long)-(median(hist_corr_ball_5[3,]-mean_long)),
(hist_corr_ball_7[3,]-mean_long)-(median(hist_corr_ball_7[3,]-mean_long)),
(hist_corr_ball_8[3,]-mean_long)-(median(hist_corr_ball_8[3,]-mean_long)),
(hist_corr_ball_9[33:48]-mean_long)-(median(hist_corr_ball_9[33:48]-mean_long)),
(hist_corr_ball_10[3,]-mean_long)-(median(hist_corr_ball_10[3,]-mean_long)),
(hist_corr_ball_12[3,]-mean_long)-(median(hist_corr_ball_12[3,]-mean_long)),
(hist_corr_ball_13[3,]-mean_long)-(median(hist_corr_ball_13[3,]-mean_long)),
(hist_corr_ball_14[3,]-mean_long)-(median(hist_corr_ball_14[3,]-mean_long)),
(hist_corr_ball_15[53:78]-mean_long)-(median(hist_corr_ball_15[53:78]-mean_long)),
(hist_corr_ball_16[3,]-mean_long)-(median(hist_corr_ball_16[3,]-mean_long)),
(hist_corr_ball_17[47:69]-mean_long)-(median(hist_corr_ball_17[47:69]-mean_long)),
(hist_corr_ball_18[3,]-mean_long)-(median(hist_corr_ball_18[3,]-mean_long)),
(hist_corr_ball_19[3,]-mean_long)-(median(hist_corr_ball_19[3,]-mean_long)),
(hist_corr_ball_20[3,]-mean_long)-(median(hist_corr_ball_20[3,]-mean_long)),
(hist_corr_ball_24[3,]-mean_long)-(median(hist_corr_ball_24[3,]-mean_long)),
(hist_corr_ball_26[3,]-mean_long)-(median(hist_corr_ball_26[3,]-mean_long)),
(hist_corr_ball_27[3,]-mean_long)-(median(hist_corr_ball_27[3,]-mean_long)),
(hist_corr_ball_28[3,]-mean_long)-(median(hist_corr_ball_28[3,]-mean_long)),
(hist_corr_ball_29[3,]-mean_long)-(median(hist_corr_ball_29[3,]-mean_long)),
(hist_corr_ball_30[3,]-mean_long)-(median(hist_corr_ball_30[3,]-mean_long)),
(hist_corr_ball_31[25:36]-mean_long)-(median(hist_corr_ball_31[25:36]-mean_long)),
(hist_corr_ball_32[39:57]-mean_long)-(median(hist_corr_ball_32[39:57]-mean_long)),
(hist_corr_ball_35[3,]-mean_long)-(median(hist_corr_ball_35[3,]-mean_long)),
(hist_corr_ball_37[3,]-mean_long)-(median(hist_corr_ball_37[3,]-mean_long)),
(hist_corr_ball_42[3,]-mean_long)-(median(hist_corr_ball_42[3,]-mean_long)),
(hist_corr_ball_44[3,]-mean_long)-(median(hist_corr_ball_44[3,]-mean_long)),
(hist_corr_ball_45[3,]-mean_long)-(median(hist_corr_ball_45[3,]-mean_long)),
(hist_corr_ball_47[3,]-mean_long)-(median(hist_corr_ball_47[3,]-mean_long)),
(hist_corr_ball_54[3,]-mean_long)-(median(hist_corr_ball_54[3,]-mean_long))))# zufälliger Fehler- kleines sigma

print(paste("balloon global mean long",mean_long))
print(paste("balloon std of global mean long",std_long))
print(paste("balloon systematic_median_error_long",round(systematic_median_error_long,2)))
print(paste("balloon random_median_error_long",round(random_median_error_long,2)))



## prepare previous data for boxplot plotting - each dataset must be equal to 84 ####

maxseq<-c(length(hist_corr_marker_1),length(hist_corr_marker_2),length(hist_corr_marker_5),length(hist_corr_marker_7),length(hist_corr_marker_8),length(hist_corr_marker_9),
length(hist_corr_marker_10),length(hist_corr_marker_12),length(hist_corr_marker_13),length(hist_corr_marker_14),length(hist_corr_marker_15),length(hist_corr_marker_16),
length(hist_corr_marker_17),length(hist_corr_marker_18),length(hist_corr_marker_19),length(hist_corr_marker_20),length(hist_corr_marker_24),length(hist_corr_marker_26),
length(hist_corr_marker_27),length(hist_corr_marker_28),length(hist_corr_marker_29),length(hist_corr_marker_30),length(hist_corr_marker_31),length(hist_corr_marker_32),
length(hist_corr_marker_35),length(hist_corr_marker_37),length(hist_corr_marker_42),length(hist_corr_marker_44),length(hist_corr_marker_45),length(hist_corr_marker_47),
length(hist_corr_marker_54))

hist_corr_marker_box=c(hist_corr_marker_1,add_empty_row[1:3]) #81 
hist_corr_marker_box_1=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_2) #84 
hist_corr_marker_box_2=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_5) #84 
hist_corr_marker_box_5=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_7,add_empty_row[1:3]) #81 
hist_corr_marker_box_7=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_8,add_empty_row[1:9]) #75 
hist_corr_marker_box_8=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_9,add_empty_row[1:36]) #48 
hist_corr_marker_box_9=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_10,add_empty_row[1:15]) #69 
hist_corr_marker_box_10=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_12) #84 
hist_corr_marker_box_12=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_13) #84 
hist_corr_marker_box_13=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_14,add_empty_row[1:6]) #78 
hist_corr_marker_box_14=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_15,add_empty_row[1:6]) #78 
hist_corr_marker_box_15=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_16,add_empty_row[1:3]) #81 
hist_corr_marker_box_16=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_17,add_empty_row[1:15]) #69 
hist_corr_marker_box_17=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_18,add_empty_row[1:3]) #81 
hist_corr_marker_box_18=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_19,add_empty_row[1:9]) #75 
hist_corr_marker_box_19=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_20,add_empty_row[1:3]) #81 
hist_corr_marker_box_20=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_24,add_empty_row[1:9]) #75 
hist_corr_marker_box_24=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_26,add_empty_row[1:6]) #78 
hist_corr_marker_box_26=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_27,add_empty_row[1:3]) #81 
hist_corr_marker_box_27=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_28,add_empty_row[1:6]) #78 
hist_corr_marker_box_28=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_29,add_empty_row[1:6]) #78 
hist_corr_marker_box_29=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_30) #84 
hist_corr_marker_box_30=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_31,add_empty_row[1:48]) #36 
hist_corr_marker_box_31=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_32,add_empty_row[1:27]) #57
hist_corr_marker_box_32=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_35,add_empty_row[1:6]) #78 
hist_corr_marker_box_35=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_37) #84 
hist_corr_marker_box_37=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_42,add_empty_row[1:3]) #81 
hist_corr_marker_box_42=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_44) #84 
hist_corr_marker_box_44=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_45,add_empty_row[1:6]) #78 
hist_corr_marker_box_45=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_47) #84 
hist_corr_marker_box_47=t(matrix(hist_corr_marker_box,3,28))
hist_corr_marker_box=c(hist_corr_ball_54,add_empty_row[1:6]) #78 
hist_corr_marker_box_54=t(matrix(hist_corr_marker_box,3,28))

hist_corr_marker_box_x=cbind(hist_corr_marker_box_1[,1],hist_corr_marker_box_2[,1],hist_corr_marker_box_5[,1],hist_corr_marker_box_7[,1],hist_corr_marker_box_8[,1],
hist_corr_marker_box_9[,1],hist_corr_marker_box_10[,1],hist_corr_marker_box_12[,1],hist_corr_marker_box_13[,1],hist_corr_marker_box_14[,1],hist_corr_marker_box_15[,1],
hist_corr_marker_box_16[,1],hist_corr_marker_box_17[,1],hist_corr_marker_box_18[,1],hist_corr_marker_box_19[,1],hist_corr_marker_box_20[,1],hist_corr_marker_box_24[,1],
hist_corr_marker_box_26[,1],hist_corr_marker_box_27[,1],hist_corr_marker_box_28[,1],hist_corr_marker_box_29[,1],hist_corr_marker_box_30[,1],hist_corr_marker_box_31[,1],
hist_corr_marker_box_32[,1],hist_corr_marker_box_35[,1],hist_corr_marker_box_37[,1],hist_corr_marker_box_42[,1],hist_corr_marker_box_44[,1],hist_corr_marker_box_45[,1],
hist_corr_marker_box_47[,1],hist_corr_marker_box_54[,1])

hist_corr_marker_box_y=cbind(hist_corr_marker_box_1[,2],hist_corr_marker_box_2[,2],hist_corr_marker_box_5[,2],hist_corr_marker_box_7[,2],hist_corr_marker_box_8[,2],
hist_corr_marker_box_9[,2],hist_corr_marker_box_10[,2],hist_corr_marker_box_12[,2],hist_corr_marker_box_13[,2],hist_corr_marker_box_14[,2],hist_corr_marker_box_15[,2],
hist_corr_marker_box_16[,2],hist_corr_marker_box_17[,2],hist_corr_marker_box_18[,2],hist_corr_marker_box_19[,2],hist_corr_marker_box_20[,2],hist_corr_marker_box_24[,2],
hist_corr_marker_box_26[,2],hist_corr_marker_box_27[,2],hist_corr_marker_box_28[,2],hist_corr_marker_box_29[,2],hist_corr_marker_box_30[,2],hist_corr_marker_box_31[,2],
hist_corr_marker_box_32[,2],hist_corr_marker_box_35[,2],hist_corr_marker_box_37[,2],hist_corr_marker_box_42[,2],hist_corr_marker_box_44[,2],hist_corr_marker_box_45[,2],
hist_corr_marker_box_47[,2],hist_corr_marker_box_54[,2])

hist_corr_marker_box_z=cbind(hist_corr_marker_box_1[,3],hist_corr_marker_box_2[,3],hist_corr_marker_box_5[,3],hist_corr_marker_box_7[,3],hist_corr_marker_box_8[,3],
hist_corr_marker_box_9[,3],hist_corr_marker_box_10[,3],hist_corr_marker_box_12[,3],hist_corr_marker_box_13[,3],hist_corr_marker_box_14[,3],hist_corr_marker_box_15[,3],
hist_corr_marker_box_16[,3],hist_corr_marker_box_17[,3],hist_corr_marker_box_18[,3],hist_corr_marker_box_19[,3],hist_corr_marker_box_20[,3],hist_corr_marker_box_24[,3],
hist_corr_marker_box_26[,3],hist_corr_marker_box_27[,3],hist_corr_marker_box_28[,3],hist_corr_marker_box_29[,3],hist_corr_marker_box_30[,3],hist_corr_marker_box_31[,3],
hist_corr_marker_box_32[,3],hist_corr_marker_box_35[,3],hist_corr_marker_box_37[,3],hist_corr_marker_box_42[,3],hist_corr_marker_box_44[,3],hist_corr_marker_box_45[,3],
hist_corr_marker_box_47[,3],hist_corr_marker_box_54[,3])


## function for hist y-axis rounding ##

mround<-function(x,base){base*round(x/base)}


## prepare var data to have 28 fractions, if not so fill it up with NA values ##

maxseq<-c(length(ct_var1),length(ct_var2),length(ct_var5),length(ct_var7),length(ct_var8),length(ct_var9),length(ct_var10),length(ct_var12),length(ct_var13),length(ct_var14),length(ct_var15),length(ct_var16),length(ct_var17),length(ct_var18),length(ct_var19),length(ct_var20),length(ct_var24),length(ct_var26),length(ct_var27),length(ct_var28),length(ct_var29),length(ct_var30),length(ct_var31),length(ct_var32),length(ct_var35),length(ct_var37),length(ct_var42),length(ct_var44),length(ct_var45),length(ct_var47),length(ct_var54))
add_empty_row=rep(NA,80) # empty values
ct_var1=c(ct_var1,add_empty_row[1]) # add NA to missing fractions to totalling up 28 fractions
ct_var7=c(ct_var7[1:7],add_empty_row[1],ct_var7[8:length(ct_var7)])#8
ct_var8=c(ct_var8[1:5],add_empty_row[1],ct_var8[6:24],add_empty_row[2],ct_var8[25:length(ct_var8)],add_empty_row[3])#2,26
ct_var9=c(add_empty_row[1:2],ct_var9[1:2],add_empty_row[3],ct_var9[3:7],add_empty_row[4:6],ct_var9[8:length(ct_var9)],add_empty_row[7])#6,26
ct_var10=c(ct_var10[1:3],add_empty_row[1],ct_var10[4:11],add_empty_row[2],ct_var10[11:length(ct_var10)],add_empty_row[3:4])#4,12,27,28
ct_var14=c(ct_var14[1:17],add_empty_row[1],ct_var14[18:length(ct_var14)],add_empty_row[1])
ct_var15=c(ct_var15[1:6],add_empty_row[1],ct_var15[7:length(ct_var15)],add_empty_row[1:2])
ct_var16=c(ct_var16[1:21],add_empty_row[1],ct_var16[22:length(ct_var16)])#22
ct_var18=c(ct_var18,add_empty_row[1])
ct_var19=c(add_empty_row[1],ct_var19[1:6],add_empty_row[2],ct_var19[7:24],add_empty_row[3],ct_var19[25:length(ct_var19)])#1,7,25
ct_var20=c(ct_var20,add_empty_row[1])
ct_var24=c(ct_var24[1:8],add_empty_row[1],ct_var24[9],add_empty_row[2],ct_var24[10:23],add_empty_row[3],ct_var24[24:length(ct_var24)])#9,11,25
ct_var26=c(ct_var26[1],add_empty_row[1],ct_var26[2:3],add_empty_row[2],ct_var26[4:length(ct_var26)])#2,5
ct_var27=c(ct_var27[1:3],add_empty_row[1],ct_var27[4:length(ct_var27)])#3,19
ct_var28=c(ct_var28[1:length(ct_var28)],add_empty_row[1:2])#28
ct_var29=c(ct_var29[1:17],add_empty_row[1],ct_var29[18:22],add_empty_row[2],ct_var29[23:length(ct_var29)])#18,24
ct_var31=c(ct_var31[1:14],add_empty_row[1],ct_var31[15:18],add_empty_row[2],ct_var31[19:length(ct_var31)])#15,20
ct_var32=c(ct_var32[1:4],add_empty_row[1:3],ct_var32[5],add_empty_row[4:6],ct_var32[4:6],add_empty_row[7],ct_var32[7:8],add_empty_row[8],ct_var32[9:length(ct_var32)])#5,6,7,9,10,11,15,18,19,21
ct_var35=c(ct_var35[1:6],add_empty_row[1],ct_var35[7:9],add_empty_row[2],ct_var35[10:length(ct_var35)])#7,10
ct_var42=c(ct_var42[1:3],add_empty_row[1],ct_var42[4:length(ct_var42)])
ct_var45=c(add_empty_row[1],ct_var45[1:15],add_empty_row[2],ct_var45[16:length(ct_var45)])#1,16
#ct_var53=c(ct_var53,add_empty_row[1:2])#27
ct_var54=c(ct_var54[1],add_empty_row[1],ct_var54[2:24],add_empty_row[2],ct_var54[25:length(ct_var54)])#2,25

## prepare initial and replanning data for boxplot plottting ##  

# balloon mean and std of distance variation xyz with Exactrac correction #

sumallhists_vector_a=c(hist_corr_ball_9a,hist_corr_ball_15a,hist_corr_ball_17a,hist_corr_ball_31a,hist_corr_ball_32a)
sumallhists_vector_b=c(hist_corr_ball_9b,hist_corr_ball_15b,hist_corr_ball_17b,hist_corr_ball_31b,hist_corr_ball_32b)

maxseq<-c(length(hist_corr_ball_9a),length(hist_corr_ball_15a),length(hist_corr_ball_17a),length(hist_corr_ball_31a),length(hist_corr_ball_32a),length(hist_corr_ball_9b),
length(hist_corr_ball_15b),length(hist_corr_ball_17b),length(hist_corr_ball_31b),length(hist_corr_ball_32b))# max 69
hist_corr_ball_9a=c(hist_corr_ball_9a,add_empty_row[1:21])#21
hist_corr_ball_15a=c(hist_corr_ball_15a,add_empty_row[1:51])#51
hist_corr_ball_17a=c(hist_corr_ball_17a,add_empty_row[1:51])#51
hist_corr_ball_31a=c(hist_corr_ball_31a,add_empty_row[1:24])#24
hist_corr_ball_32a=c(hist_corr_ball_32a,add_empty_row[1:48])#48
empty_row=c(add_empty_row[1:69])#69
hist_corr_ball_9b=c(hist_corr_ball_9b,add_empty_row[1:54])#51
hist_corr_ball_15b=c(hist_corr_ball_15b,add_empty_row[1:9])#9
hist_corr_ball_17b=c(hist_corr_ball_17b)#0
hist_corr_ball_31b=c(hist_corr_ball_31b,add_empty_row[1:33])#33
hist_corr_ball_32b=c(hist_corr_ball_32b,add_empty_row[1:33])#33
sumallhists_vector_total=c(hist_corr_ball_9a,hist_corr_ball_15a,hist_corr_ball_17a,hist_corr_ball_31a,hist_corr_ball_32a,empty_row,hist_corr_ball_9b,hist_corr_ball_15b,hist_corr_ball_17b,hist_corr_ball_31b,hist_corr_ball_32b)

col_matrix=(length(sumallhists_vector_a)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_corr_balloon_a=matrix(sumallhists_vector_a,row_matrix,col_matrix)
mean_sum_balx_a=mean(sumallhists_corr_balloon_a[c(1),]) # mean of x values
mean_sum_baly_a=mean(sumallhists_corr_balloon_a[c(2),]) # mean of y values
mean_sum_balz_a=mean(sumallhists_corr_balloon_a[c(3),]) # mean of z values
std_sum_balx_a=sd(sumallhists_corr_balloon_a[c(1),]) # std of x values
std_sum_baly_a=sd(sumallhists_corr_balloon_a[c(2),]) # std of y values
std_sum_balz_a=sd(sumallhists_corr_balloon_a[c(3),]) # std of z values
balmeanstdballoon_corr_a=cbind(mean_sum_balx_a,std_sum_balx_a,mean_sum_baly_a,std_sum_baly_a,mean_sum_balz_a,std_sum_balz_a)

col_matrix=(length(sumallhists_vector_b)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_corr_balloon_b=matrix(sumallhists_vector_b,row_matrix,col_matrix)
mean_sum_balx_b=mean(sumallhists_corr_balloon_b[c(1),]) # mean of x values
mean_sum_baly_b=mean(sumallhists_corr_balloon_b[c(2),]) # mean of y values
mean_sum_balz_b=mean(sumallhists_corr_balloon_b[c(3),]) # mean of z values
std_sum_balx_b=sd(sumallhists_corr_balloon_b[c(1),]) # std of x values
std_sum_baly_b=sd(sumallhists_corr_balloon_b[c(2),]) # std of y values
std_sum_balz_b=sd(sumallhists_corr_balloon_b[c(3),]) # std of z values
balmeanstdballoon_corr_b=cbind(mean_sum_balx_b,std_sum_balx_b,mean_sum_baly_b,std_sum_baly_b,mean_sum_balz_b,std_sum_balz_b)

col_matrix=(length(sumallhists_vector_total)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_corr_balloon_total=matrix(sumallhists_vector_total,row_matrix,col_matrix)

sumallhists_corr_balloon_total_x <- sumallhists_corr_balloon_total[c(1),]
col_matrix=11
row_matrix=23
sumallhists_corr_balloon_total_x_boxplot=matrix(sumallhists_corr_balloon_total_x,row_matrix,col_matrix)

sumallhists_corr_balloon_total_y <- sumallhists_corr_balloon_total[c(2),]
col_matrix=11
row_matrix=23
sumallhists_corr_balloon_total_y_boxplot=matrix(sumallhists_corr_balloon_total_y,row_matrix,col_matrix)

sumallhists_corr_balloon_total_z <- sumallhists_corr_balloon_total[c(3),]
col_matrix=11
row_matrix=23
sumallhists_corr_balloon_total_z_boxplot=matrix(sumallhists_corr_balloon_total_z,row_matrix,col_matrix)

# balloon initial plan _a ####

mean_lat=round(mean_sum_balx_a,2)
std_lat=round(std_sum_balx_a,2)

systematic_median_error_lat=sd(c(median(hist_corr_ball_9a[1:16]-mean_lat),
median(hist_corr_ball_15a[1:6]-mean_lat),
median(hist_corr_ball_17a[1:6]-mean_lat),
median(hist_corr_ball_31a[1:15]-mean_lat),
median(hist_corr_ball_32a[1:7]-mean_lat)))# systematischer Fehler - großes sigma

random_median_error_lat=sd(c((hist_corr_ball_9a[1:16]-mean_lat)-(median(hist_corr_ball_9a[1:16]-mean_lat)),
(hist_corr_ball_15a[1:6]-mean_lat)-(median(hist_corr_ball_15a[1:6]-mean_lat)),
(hist_corr_ball_17a[1:6]-mean_lat)-(median(hist_corr_ball_17a[1:6]-mean_lat)),
(hist_corr_ball_31a[1:15]-mean_lat)-(median(hist_corr_ball_31a[1:15]-mean_lat)),
(hist_corr_ball_32a[1:7]-mean_lat)-(median(hist_corr_ball_32a[1:7]-mean_lat))))# zufälliger Fehler- kleines sigma

print(paste("balloon initial plan a global mean lat",mean_lat))
print(paste("balloon initial plan a std of global mean lat",std_lat))
print(paste("balloon initial plan a systematic_median_error_lat",round(systematic_median_error_lat,2)))
print(paste("balloon initial plan a random_median_error_lat",round(random_median_error_lat,2)))

#

mean_vert=round(mean_sum_baly_a,2)
std_vert=round(std_sum_baly_a,2)

systematic_median_error_vert=sd(c(median(hist_corr_ball_9a[17:32]-mean_vert),
median(hist_corr_ball_15a[7:12]-mean_vert),
median(hist_corr_ball_17a[7:12]-mean_vert),
median(hist_corr_ball_31a[16:30]-mean_vert),
median(hist_corr_ball_32a[8:14]-mean_vert)))# systematischer Fehler - großes sigma

random_median_error_vert=sd(c((hist_corr_ball_9a[17:32]-mean_vert)-(median(hist_corr_ball_9a[17:32]-mean_vert)),
(hist_corr_ball_15a[7:12]-mean_vert)-(median(hist_corr_ball_15a[7:12]-mean_vert)),
(hist_corr_ball_17a[7:12]-mean_vert)-(median(hist_corr_ball_17a[7:12]-mean_vert)),
(hist_corr_ball_31a[16:30]-mean_vert)-(median(hist_corr_ball_31a[16:30]-mean_vert)),
(hist_corr_ball_32a[8:14]-mean_vert)-(median(hist_corr_ball_32a[8:14]-mean_vert))))# zufälliger Fehler- kleines sigma

print(paste("balloon initial plan a global mean vert",mean_vert))
print(paste("balloon initial plan a std of global mean vert",std_vert))
print(paste("balloon initial plan a systematic_median_error_vert",round(systematic_median_error_vert,2)))
print(paste("balloon initial plan a random_median_error_vert",round(random_median_error_vert,2)))

#

mean_long=round(mean_sum_balz_a,2)
std_long=round(std_sum_balz_a,2)

systematic_median_error_long=sd(c(median(hist_corr_ball_9a[33:48]-mean_long),
median(hist_corr_ball_15a[13:18]-mean_long),
median(hist_corr_ball_17a[13:18]-mean_long),
median(hist_corr_ball_31a[31:45]-mean_long),
median(hist_corr_ball_32a[15:21]-mean_long)))# systematischer Fehler - großes sigma

random_median_error_long=sd(c((hist_corr_ball_9a[33:48]-mean_long)-(median(hist_corr_ball_9a[33:48]-mean_long)),
(hist_corr_ball_15a[13:18]-mean_long)-(median(hist_corr_ball_15a[13:18]-mean_long)),
(hist_corr_ball_17a[13:18]-mean_long)-(median(hist_corr_ball_17a[13:18]-mean_long)),
(hist_corr_ball_31a[31:45]-mean_long)-(median(hist_corr_ball_31a[31:45]-mean_long)),
(hist_corr_ball_32a[15:21]-mean_long)-(median(hist_corr_ball_32a[15:21]-mean_long))))# zufälliger Fehler- kleines sigma

print(paste("balloon initial plan a global mean long",mean_long))
print(paste("balloon initial plan a std of global mean long",std_long))
print(paste("balloon initial plan a systematic_median_error_long",round(systematic_median_error_long,2)))
print(paste("balloon initial plan a random_median_error_long",round(random_median_error_long,2)))

# balloon replanning _b ####

mean_lat=round(mean_sum_balx_b,2)
std_lat=round(std_sum_balx_b,2)

systematic_median_error_lat=sd(c(median(hist_corr_ball_9b[1:5]-mean_lat),
median(hist_corr_ball_15b[1:20]-mean_lat),
median(hist_corr_ball_17b[1:23]-mean_lat),
median(hist_corr_ball_31b[1:12]-mean_lat),
median(hist_corr_ball_32b[1:12]-mean_lat)))# systematischer Fehler - großes sigma

random_median_error_lat=sd(c((hist_corr_ball_9b[1:5]-mean_lat)-(median(hist_corr_ball_9b[1:5]-mean_lat)),
(hist_corr_ball_15b[1:20]-mean_lat)-(median(hist_corr_ball_15b[1:20]-mean_lat)),
(hist_corr_ball_17b[1:23]-mean_lat)-(median(hist_corr_ball_17b[1:23]-mean_lat)),
(hist_corr_ball_31b[1:12]-mean_lat)-(median(hist_corr_ball_31b[1:12]-mean_lat)),
(hist_corr_ball_32b[1:12]-mean_lat)-(median(hist_corr_ball_32b[1:12]-mean_lat))))# zufälliger Fehler- kleines sigma

print(paste("balloon replanning b global mean lat",mean_lat))
print(paste("balloon replanning b std of global mean lat",std_lat))
print(paste("balloon replanning b systematic_median_error_lat",round(systematic_median_error_lat,2)))
print(paste("balloon replanning b random_median_error_lat",round(random_median_error_lat,2)))

#

mean_vert=round(mean_sum_baly_b,2)
std_vert=round(std_sum_baly_b,2)

systematic_median_error_vert=sd(c(median(hist_corr_ball_9b[6:10]-mean_vert),
median(hist_corr_ball_15b[21:40]-mean_vert),
median(hist_corr_ball_17b[24:46]-mean_vert),
median(hist_corr_ball_31b[13:24]-mean_vert),
median(hist_corr_ball_32b[13:24]-mean_vert)))# systematischer Fehler - großes sigma

random_median_error_vert=sd(c((hist_corr_ball_9b[6:10]-mean_vert)-(median(hist_corr_ball_9b[6:10]-mean_vert)),
(hist_corr_ball_15b[21:40]-mean_vert)-(median(hist_corr_ball_15b[21:40]-mean_vert)),
(hist_corr_ball_17b[24:46]-mean_vert)-(median(hist_corr_ball_17b[24:46]-mean_vert)),
(hist_corr_ball_31b[13:24]-mean_vert)-(median(hist_corr_ball_31b[13:24]-mean_vert)),
(hist_corr_ball_32b[13:24]-mean_vert)-(median(hist_corr_ball_32b[13:24]-mean_vert))))# zufälliger Fehler- kleines sigma

print(paste("balloon replanning b global mean vert",mean_vert))
print(paste("balloon replanning b std of global mean vert",std_vert))
print(paste("balloon replanning b systematic_median_error_vert",round(systematic_median_error_vert,2)))
print(paste("balloon replanning b random_median_error_vert",round(random_median_error_vert,2)))

#

mean_long=round(mean_sum_balz_b,2)
std_long=round(std_sum_balz_b,2)

systematic_median_error_long=sd(c(median(hist_corr_ball_9b[11:15]-mean_long),
median(hist_corr_ball_15b[41:60]-mean_long),
median(hist_corr_ball_17b[47:69]-mean_long),
median(hist_corr_ball_31b[25:36]-mean_long),
median(hist_corr_ball_32b[25:36]-mean_long)))# systematischer Fehler - großes sigma

random_median_error_long=sd(c((hist_corr_ball_9b[11:15]-mean_long)-(median(hist_corr_ball_9b[11:15]-mean_long)),
(hist_corr_ball_15b[41:60]-mean_long)-(median(hist_corr_ball_15b[41:60]-mean_long)),
(hist_corr_ball_17b[47:69]-mean_long)-(median(hist_corr_ball_17b[47:69]-mean_long)),
(hist_corr_ball_31b[25:36]-mean_long)-(median(hist_corr_ball_31b[25:36]-mean_long)),
(hist_corr_ball_32b[25:36]-mean_long)-(median(hist_corr_ball_32b[25:36]-mean_long))))# zufälliger Fehler- kleines sigma

print(paste("balloon replanning b global mean long",mean_long))
print(paste("balloon replanning b std of global mean long",std_long))
print(paste("balloon replanning b systematic_median_error_long",round(systematic_median_error_long,2)))
print(paste("balloon replanning b random_median_error_long",round(random_median_error_long,2)))


# marker mean and std of distance variation xyz with Exactrac correction ## 

sumallhists_vector_a=c(hist_corr_marker_9a,hist_corr_marker_15a,hist_corr_marker_17a,hist_corr_marker_31a,hist_corr_marker_32a)
sumallhists_vector_b=c(hist_corr_marker_9b,hist_corr_marker_15b,hist_corr_marker_17b,hist_corr_marker_31b,hist_corr_marker_32b)
maxseq<-c(length(hist_corr_marker_9a),length(hist_corr_marker_15a),length(hist_corr_marker_17a),length(hist_corr_marker_31a),length(hist_corr_marker_32a),length(hist_corr_marker_9b),
length(hist_corr_marker_15b),length(hist_corr_marker_17b),length(hist_corr_marker_31b),length(hist_corr_marker_32b))# max 69
hist_corr_marker_9a=c(hist_corr_marker_9a,add_empty_row[1:21])#21
hist_corr_marker_15a=c(hist_corr_marker_15a,add_empty_row[1:51])#51
hist_corr_marker_17a=c(hist_corr_marker_17a,add_empty_row[1:51])#51
hist_corr_marker_31a=c(hist_corr_marker_31a,add_empty_row[1:24])#24
hist_corr_marker_32a=c(hist_corr_marker_32a,add_empty_row[1:48])#48
hist_corr_marker_9b=c(hist_corr_marker_9b,add_empty_row[1:51])#48
hist_corr_marker_15b=c(hist_corr_marker_15b,add_empty_row[1:9])#9
hist_corr_marker_17b=c(hist_corr_marker_17b)#0
hist_corr_marker_31b=c(hist_corr_marker_31b,add_empty_row[1:33])#33
hist_corr_marker_32b=c(hist_corr_marker_32b,add_empty_row[1:30])#30
sumallhists_vector_total=c(hist_corr_marker_9a,hist_corr_marker_15a,hist_corr_marker_17a,hist_corr_marker_31a,hist_corr_marker_32a,empty_row,hist_corr_marker_9b,hist_corr_marker_15b,hist_corr_marker_17b,hist_corr_marker_31b,hist_corr_marker_32b)

col_matrix=(length(sumallhists_vector_a)/3)
row_matrix=nrow(hist_marker_1)
sumallhists_corr_marker_a=matrix(sumallhists_vector_a,row_matrix,col_matrix)
mean_sum_marker_x_a=mean(sumallhists_corr_marker_a[c(1),]) # mean of x values
mean_sum_marker_y_a=mean(sumallhists_corr_marker_a[c(2),]) # mean of y values
mean_sum_marker_z_a=mean(sumallhists_corr_marker_a[c(3),]) # mean of z values
std_sum_marker_x_a=sd(sumallhists_corr_marker_a[c(1),]) # std of x values
std_sum_marker_y_a=sd(sumallhists_corr_marker_a[c(2),]) # std of y values
std_sum_marker_z_a=sd(sumallhists_corr_marker_a[c(3),]) # std of z values
balmeanstdmarker_corr_a=cbind(mean_sum_marker_x_a,std_sum_marker_x_a,mean_sum_marker_y_a,std_sum_marker_y_a,mean_sum_marker_z_a,std_sum_marker_z_a)

col_matrix=(length(sumallhists_vector_b)/3)
row_matrix=nrow(hist_marker_1)
sumallhists_corr_marker_b=matrix(sumallhists_vector_b,row_matrix,col_matrix)
mean_sum_marker_x_b=mean(sumallhists_corr_marker_b[c(1),]) # mean of x values
mean_sum_marker_y_b=mean(sumallhists_corr_marker_b[c(2),]) # mean of y values
mean_sum_marker_z_b=mean(sumallhists_corr_marker_b[c(3),]) # mean of z values
std_sum_marker_x_b=sd(sumallhists_corr_marker_b[c(1),]) # std of x values
std_sum_marker_y_b=sd(sumallhists_corr_marker_b[c(2),]) # std of y values
std_sum_marker_z_b=sd(sumallhists_corr_marker_b[c(3),]) # std of z values
balmeanstdmarker_corr_b=cbind(mean_sum_marker_x_b,std_sum_marker_x_b,mean_sum_marker_y_b,std_sum_marker_y_b,mean_sum_marker_z_b,std_sum_marker_z_b)

col_matrix=(length(sumallhists_vector_total)/3)
row_matrix=nrow(hist_matrix_1)
sumallhists_corr_marker_total=matrix(sumallhists_vector_total,row_matrix,col_matrix)

sumallhists_corr_marker_total_x <- sumallhists_corr_marker_total[c(1),]
col_matrix=11
row_matrix=23
sumallhists_corr_marker_total_x_boxplot=matrix(sumallhists_corr_marker_total_x,row_matrix,col_matrix)

sumallhists_corr_marker_total_y <- sumallhists_corr_marker_total[c(2),]
col_matrix=11
row_matrix=23
sumallhists_corr_marker_total_y_boxplot=matrix(sumallhists_corr_marker_total_y,row_matrix,col_matrix)

sumallhists_corr_marker_total_z <- sumallhists_corr_marker_total[c(3),]
col_matrix=11
row_matrix=23
sumallhists_corr_marker_total_z_boxplot=matrix(sumallhists_corr_marker_total_z,row_matrix,col_matrix)

###############################
## prepare data for printing ##
###############################

minvec=min(maxseq<-c(length(ct_var1),length(ct_var2),length(ct_var5),length(ct_var7),length(ct_var8),length(ct_var9),length(ct_var10),length(ct_var12),length(ct_var13),length(ct_var14),length(ct_var15),length(ct_var16),length(ct_var17),length(ct_var18),length(ct_var19),length(ct_var20),length(ct_var24),length(ct_var26),length(ct_var27),length(ct_var28),length(ct_var29),length(ct_var30),length(ct_var31),length(ct_var32),length(ct_var35),length(ct_var37),length(ct_var42),length(ct_var44),length(ct_var45),length(ct_var47),length(ct_var54)))
x_series=(1:(minvec))
sum_ref_cbct=c(reference_cbct1,reference_cbct2,reference_cbct5,reference_cbct7,reference_cbct8,reference_cbct9a,reference_cbct9b,reference_cbct10,reference_cbct12,reference_cbct13,reference_cbct14,reference_cbct15a,reference_cbct15b,reference_cbct16,reference_cbct17a,reference_cbct17b,reference_cbct18,reference_cbct19,reference_cbct20,reference_cbct24,reference_cbct26,reference_cbct27,reference_cbct28,reference_cbct29,reference_cbct30,reference_cbct31a,reference_cbct31b,reference_cbct32a,reference_cbct32b,reference_cbct35,reference_cbct37,reference_cbct42,reference_cbct44,reference_cbct45,reference_cbct47,reference_cbct54)
sum_ref_cbct_mm=c(reference_cbct_mm1,reference_cbct_mm2,reference_cbct_mm5,reference_cbct_mm7,reference_cbct_mm8,reference_cbct_mm9a,reference_cbct_mm9b,reference_cbct_mm10,reference_cbct_mm12,reference_cbct_mm13,reference_cbct_mm14,reference_cbct_mm15a,reference_cbct_mm15b,reference_cbct_mm16,reference_cbct_mm17a,reference_cbct_mm17b,reference_cbct_mm18,reference_cbct_mm19,reference_cbct_mm20,reference_cbct_mm24,reference_cbct_mm26,reference_cbct_mm27,reference_cbct_mm28,reference_cbct_mm29,reference_cbct_mm30,reference_cbct_mm31a,reference_cbct_mm31b,reference_cbct_mm32a,reference_cbct_mm32b,reference_cbct_mm35,reference_cbct_mm37,reference_cbct_mm42,reference_cbct_mm44,reference_cbct_mm45,reference_cbct_mm47,reference_cbct_mm54)
sum_ref_cbct_paper=c(reference_cbct1,reference_cbct2,reference_cbct5,reference_cbct7,reference_cbct8,reference_cbct9a,reference_cbct10,reference_cbct12,reference_cbct13,reference_cbct14,reference_cbct15b,reference_cbct16,reference_cbct17b,reference_cbct18,reference_cbct19,reference_cbct20,reference_cbct24,reference_cbct26,reference_cbct27,reference_cbct28,reference_cbct29,reference_cbct30,reference_cbct31b,reference_cbct32b,reference_cbct35,reference_cbct37,reference_cbct42,reference_cbct44,reference_cbct45,reference_cbct47,reference_cbct54)
sum_ref_cbct_mm_paper=c(reference_cbct_mm1,reference_cbct_mm2,reference_cbct_mm5,reference_cbct_mm7,reference_cbct_mm8,reference_cbct_mm9a,reference_cbct_mm10,reference_cbct_mm12,reference_cbct_mm13,reference_cbct_mm14,reference_cbct_mm15b,reference_cbct_mm16,reference_cbct_mm17b,reference_cbct_mm18,reference_cbct_mm19,reference_cbct_mm20,reference_cbct_mm24,reference_cbct_mm26,reference_cbct_mm27,reference_cbct_mm28,reference_cbct_mm29,reference_cbct_mm30,reference_cbct_mm31b,reference_cbct_mm32b,reference_cbct_mm35,reference_cbct_mm37,reference_cbct_mm42,reference_cbct_mm44,reference_cbct_mm45,reference_cbct_mm47,reference_cbct_mm54)
sum_ref_cbct_marker=c(reference_marker1,reference_marker2,reference_cbct_mm5,reference_cbct_mm7,reference_cbct_mm8,reference_marker9a,reference_marker9b,reference_cbct_mm10,reference_marker12,reference_marker13,reference_marker14,reference_marker15a,reference_marker15b,reference_cbct_mm16,reference_marker17a,reference_marker17b,reference_marker18,reference_cbct_mm19,reference_marker20,reference_cbct_mm24,reference_marker26,reference_cbct_mm27,reference_cbct_mm28,reference_marker29,reference_marker30,reference_marker31a,reference_marker31b,reference_marker32a,reference_marker32b,reference_cbct_mm35,reference_cbct_mm37,reference_cbct_mm42,reference_cbct_mm44,reference_cbct_mm45,reference_cbct_mm47,reference_cbct_mm54)
sum_ref_cbct_marker_mm=c(reference_marker_mm1,reference_marker_mm2,reference_marker_mm5,reference_marker_mm7,reference_marker_mm8,reference_marker_mm9a,reference_marker_mm9b,reference_marker_mm10,reference_marker_mm12,reference_marker_mm13,reference_marker_mm14,reference_marker_mm15a,reference_marker_mm15b,reference_marker_mm16,reference_marker_mm17a,reference_marker_mm17b,reference_marker_mm18,reference_marker_mm19,reference_marker_mm20,reference_marker_mm24,reference_marker_mm26,reference_marker_mm27,reference_marker_mm28,reference_marker_mm29,reference_marker_mm30,reference_marker_mm31a,reference_marker_mm31b,reference_marker_mm32a,reference_marker_mm32b,reference_marker_mm35,reference_marker_mm37,reference_marker_mm42,reference_marker_mm44,reference_marker_mm45,reference_marker_mm47,reference_marker_mm54)
sum_dist_marker_balloon=rbind(ct_var1[1:minvec],ct_var2[1:minvec],ct_var5[1:minvec],ct_var7[1:minvec],ct_var8[1:minvec],ct_var9[1:minvec],ct_var10[1:minvec],ct_var12[1:minvec],ct_var13[1:minvec],ct_var14[1:minvec],ct_var15[1:minvec],ct_var16[1:minvec],ct_var17[1:minvec],ct_var18[1:minvec],ct_var19[1:minvec],ct_var20[1:minvec],ct_var24[1:minvec],ct_var26[1:minvec],ct_var27[1:minvec],ct_var28[1:minvec],ct_var29[1:minvec],ct_var30[1:minvec],ct_var31[1:minvec],ct_var32[1:minvec],ct_var35[1:minvec],ct_var37[1:minvec],ct_var42[1:minvec],ct_var44[1:minvec],ct_var45[1:minvec],ct_var47[1:minvec],ct_var54[1:minvec])
x_lim<-length(sum_ref_cbct)
x_series2=1:x_lim
x_lim_paper<-length(sum_ref_cbct_paper)
x_series2_paper=1:x_lim_paper
sum_var_distance= cbind(ct_var1[1:minvec],ct_var2[1:minvec],ct_var5[1:minvec],ct_var7[1:minvec],ct_var8[1:minvec],ct_var9[1:minvec],ct_var10[1:minvec],ct_var12[1:minvec],ct_var13[1:minvec],ct_var14[1:minvec],ct_var15[1:minvec],ct_var16[1:minvec],ct_var17[1:minvec],ct_var18[1:minvec],ct_var19[1:minvec],ct_var20[1:minvec],ct_var24[1:minvec],ct_var26[1:minvec],ct_var27[1:minvec],ct_var28[1:minvec],ct_var29[1:minvec],ct_var30[1:minvec],ct_var31[1:minvec],ct_var32[1:minvec],ct_var35[1:minvec],ct_var37[1:minvec],ct_var42[1:minvec],ct_var44[1:minvec],ct_var45[1:minvec],ct_var47[1:minvec],ct_var54[1:minvec])
labels=rep("",ncol(sum_var_distance)) # empty values
labels2=rep("",x_lim)
labels2_paper=rep("",x_lim_paper)
labels3=rep("",(length(x_series)))
labels_pat=c( 1,2,5,7,8,9,10,12,13,14,15,16,17,18,19,20,24,26,27,28,29,30,31,32,35,37,42,44,45,47,54)
labels_patb=c(1,2,3,4,5,6,7, 8, 9, 10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)
labels_pat2=c(1,2,5,7,8,paste(9,"a"),paste(9,"b"),10,12,13,14,paste(15,"a"),paste(15,"b"),16,paste(17,"a"),paste(17,"b"),18,19,20,24,26,27,28,29,30,paste(31,"a"),paste(31,"b"),paste(32,"a"),paste(32,"b"),35,37,42,44,45,47,54)
labels_pat3=c(1,2,3,4,5,paste(6,"a"),paste(6,"b"),7,8,9,10,paste(11,"a"),paste(11,"b"),12,paste(13,"a"),paste(13,"b"),14,15,16,17,18,19,20,21,22,paste(23,"a"),paste(23,"b"),paste(24,"a"),paste(24,"b"),25,26,27,28,29,30,31)
y_hist_abtasten=80
legendtext<-c(paste("left-right:               ",round((balmeanstdballoon[1]),2),"\u00B1",round((balmeanstdballoon[2]),2)),paste("anterior-posterior: ",round((balmeanstdballoon[3]),2),"\u00B1",round((balmeanstdballoon[4]),2)),paste("superior-inferior:   ",round((balmeanstdballoon[5]),2),"\u00B1",round((balmeanstdballoon[6]),2)))## patient view, therefore in x direction - left und + right
legendtext2<-c(paste("left-right:               ",round(balmeanstdmarker[1],2),"\u00B1",round(balmeanstdmarker[2],2)),paste("anterior-posterior: ",round(balmeanstdmarker[3],2),"\u00B1",round(balmeanstdmarker[4],2)),paste("superior-inferior:   ",round(balmeanstdmarker[5],2),"\u00B1",round(balmeanstdmarker[6],2)))
legendtext_corr<-c(paste("left-right:               ",round((balmeanstdballoon_corr[1]),2),"\u00B1",round((balmeanstdballoon_corr[2]),2)),paste("anterior-posterior: ",round((balmeanstdballoon_corr[3]),2),"\u00B1",round((balmeanstdballoon_corr[4]),2)),paste("superior-inferior:   ",round((balmeanstdballoon_corr[5]),2),"\u00B1",round((balmeanstdballoon_corr[6]),2)))## patient view, therefore in x direction - left und + right
legendtext_corr2<-c(paste("left-right:               ",round(balmeanstdmarker_corr[1],2),"\u00B1",round(balmeanstdmarker_corr[2],2)),paste("anterior-posterior: ",round(balmeanstdmarker_corr[3],2),"\u00B1",round(balmeanstdmarker_corr[4],2)),paste("superior-inferior:   ",round(balmeanstdmarker_corr[5],2),"\u00B1",round(balmeanstdmarker_corr[6],2)))
y_lim<-c(-15,15)
y_axis=seq(-15,+15,5)
empty_vec=rep("",11)



# get index of each second patient 1-31 ##

num_pat2=seq(1,length(labels_patb),2)
empty_vec=rep(NA,length(num_pat2))
empty_matrix=matrix(empty_vec,ncol=1,nrow=length(empty_vec))
intra_gab=cbind((t(num_pat2))[1,],empty_matrix) 
List=list()
for(i in 1:nrow(intra_gab)){
  a=intra_gab[i,]
  LM= a
  List[[length(List)+1]] = LM
}
num_pat_x <- as.numeric(unlist(List))# x axis scale
num_pat_x=num_pat_x[1:(length(num_pat_x)-1)]
empty_vec_x=rep("",length(num_pat_x))

## get std ##

remove <- c (NA)

List=list()
for(i in 1:ncol(sum_dist_marker_balloon)){
  a=sum_dist_marker_balloon[,i]
  b=a [! a %in% remove]
  LM=sd(b)
  List[[length(List)+1]] = LM
}
sd_dist_mb <- as.numeric(unlist(List))

## p and t - value tests ##

# p<0.05 considered significant correlation between x and y. p>0.05 the opposite: kk Wang 2010
# p<0.001 high correlation :jones 2013
# t:  t kann sowohl negativ als auch positiv sein ? negativ bedeutet, dass der Mittelwert x kleiner als Mittelwert y unseres Versuchs war; positiv entsprechend anders herum- http://scienceblogs.de/andererseits/2010/08/17/statistik-fur-anfanger-der-ttest/
# p<0.01 high correlation : bassim paper 1% unterschied
# for inter-fractional set-up variability versus treatment days ##

value_x=sd_dist_mb
value_y=seq(1,length(sd_dist_mb),1)
stat_rtdays=t.test(value_x,value_y)# names(ttest)- http://statistics.berkeley.edu/computing/r-t-tests - welch two sample t-test
ttest_rtdays=stat_rtdays$statistic
p_rtdays=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001

# Inter-fractional marker motion: inital vs replanning

# x- direction
value_x=sumallhists_corr_marker_a[c(1),]  
value_y=sumallhists_corr_marker_b[c(1),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_marker_x=stat_rtdays$statistic
p_irplan_marker_x=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001

# y- direction
value_x=sumallhists_corr_marker_a[c(2),]  
value_y=sumallhists_corr_marker_b[c(2),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_marker_y=stat_rtdays$statistic
p_irplan_marker_y=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001 =0.79

# z- direction
value_x=sumallhists_corr_marker_a[c(3),] 
value_y=sumallhists_corr_marker_b[c(3),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_marker_z=stat_rtdays$statistic
p_irplan_marker_z=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001 =0.71

# Inter-fractional balloon motion: inital vs replanning

# x- direction
value_x=sumallhists_corr_balloon_a[c(1),]  
value_y=sumallhists_corr_balloon_b[c(1),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_balloon_x=stat_rtdays$statistic
p_irplan_balloon_x=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001

# y- direction
value_x=sumallhists_corr_balloon_a[c(2),]  
value_y=sumallhists_corr_balloon_b[c(2),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_balloon_y=stat_rtdays$statistic
p_irplan_balloon_y=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001 =0.79

# z- direction
value_x=sumallhists_corr_balloon_a[c(3),]  
value_y=sumallhists_corr_balloon_b[c(3),]
stat_rtdays=t.test(value_x,value_y)
ttest_irplan_balloon_z=stat_rtdays$statistic
p_irplan_balloon_z=ifelse((stat_rtdays$p.value)<=0.05,0.05,round(stat_rtdays$p.value,2))# p_rtdays<0.001 -> result equals p<0.001 otherwise p>0.001 =0.71



#

legendtext4<-c(paste("initial plan: ",round(mean_sum_balx_a,2),"\u00B1",round(std_sum_balx_a,2)),paste("replanning: ",round(mean_sum_balx_b,2),"\u00B1",round(std_sum_balx_b,2)),paste("p","\u003D",p_irplan_balloon_x))
legendtext5<-c(paste("initial plan: ",round(mean_sum_baly_a,2),"\u00B1",round(std_sum_baly_a,2)),paste("replanning: ",round(mean_sum_baly_b,2),"\u00B1",round(std_sum_baly_b,2)),paste("p","\u003D",p_irplan_balloon_y))
legendtext6<-c(paste("initial plan: ",round(mean_sum_balz_a,2),"\u00B1",round(std_sum_balz_a,2)),paste("replanning: ",round(mean_sum_balz_b,2),"\u00B1",round(std_sum_balz_b,2)),paste("p","\u003D",p_irplan_balloon_z))
y_hist_abtasten2=20

legendtext7<-c(paste("initial plan: ",round(mean_sum_marker_x_a,2),"\u00B1",round(std_sum_marker_x_a,2)),paste("replanning: ",round(mean_sum_marker_x_b,2),"\u00B1",round(std_sum_marker_x_b,2)),paste("p","\u003C",p_irplan_marker_x))
legendtext8<-c(paste("initial plan: ",round(mean_sum_marker_y_a,2),"\u00B1",round(std_sum_marker_y_a,2)),paste("replanning: ",round(mean_sum_marker_y_b,2),"\u00B1",round(std_sum_marker_y_b,2)),paste("p","\u003D",p_irplan_marker_y))
legendtext9<-c(paste("initial plan: ",round(mean_sum_marker_z_a,2),"\u00B1",round(std_sum_marker_z_a,2)),paste("replanning: ",round(mean_sum_marker_z_b,2),"\u00B1",round(std_sum_marker_z_b,2)),paste("p","\u003D",p_irplan_marker_z))

legendtext4_paper<-c(paste("initial plan"),paste("replanning"))
legendtext4_paper2<-c(paste("p","\u003C",p_irplan_balloon_x))
legendtext5_paper<-c(paste("p","\u003D",p_irplan_balloon_y))
legendtext6_paper<-c(paste("p","\u003D",p_irplan_balloon_z))

legendtext7_paper<-c(paste("initial plan"),paste("replanning"))
legendtext7_paper2<-c(paste("p","\u003C",p_irplan_marker_x))
legendtext8_paper<-c(paste("p","\u003D",p_irplan_marker_y))
legendtext9_paper<-c(paste("p","\u003D",p_irplan_marker_z))

#

###########
## print ##
###########


## boxplot: variation of distances in mm of ct and cbct - ct as reference ##

pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_distance_var_boxplot.pdf",width= 9, height= 5)
boxplot(sum_var_distance,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional set-up variability", ylim=c(-15,15))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "CT")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=5, las=2,labels= "5")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-20, las=2,labels= "-20")
axis(1, at=1:(ncol(sum_var_distance)), las=2,labels=labels)
text(1:(ncol(sum_var_distance)),-18, srt=45, pos=1, xpd=TRUE, labels=labels_pat,cex= 1)
mtext("Relative distances [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)

boxplot(sum_var_distance,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional set-up variability", ylim=c(-15,15))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "CT")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=5, las=2,labels= "5")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-20, las=2,labels= "-20")
axis(1, at=1:(ncol(sum_var_distance)), las=2,labels=labels)
text(1:(ncol(sum_var_distance)),-18, srt=45, pos=1, xpd=TRUE, labels=labels_patb,cex= 1)
mtext("Relative distances [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)

## plot of lines variation relative to fractions ##


pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_distance_var_lines.pdf",width= 9, height= 5)
plot(x_series,ct_calc_abs1[1:length(x_series)],xlab=NA, ylab=NA,yaxt = "n", main="Inter-fractional set-up variability relative to fractionation",ylim = c(0,+20),type="l")
lines(x_series,ct_calc_abs2[1:length(x_series)],pch=2)# type="p", col="red",
lines(x_series,ct_calc_abs12[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs13[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs14[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs17[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs18[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs20[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs26[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs29[1:length(x_series)],pch=2)# 
lines(x_series,ct_calc_abs30[1:length(x_series)],pch=2)# 

abline(h=0, col = "black", lty=2);
axis(2, at=0, las=2,labels= "CT")
axis(2, at=5, las=2,labels= "5")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=20, las=2,labels= "20")
mtext("Relative shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of treatment days", side = 1, line = 2, cex = 0.9, font = 1)

#

fit  <- lm((ct_calc_abs1[1:length(x_series)])~x_series)
xx <- seq(1,length(x_series), length=length(x_series))
fit2  <- lm((ct_calc_abs2[1:length(x_series)])~x_series)
xx2 <- seq(1,length(x_series), length=length(x_series))
fit3  <- lm((ct_calc_abs12[1:length(x_series)])~x_series)
xx3 <- seq(1,length(x_series), length=length(x_series))
fit4  <- lm((ct_calc_abs13[1:length(x_series)])~x_series)
xx4 <- seq(1,length(x_series), length=length(x_series))
fit5  <- lm((ct_calc_abs14[1:length(x_series)])~x_series)
xx5 <- seq(1,length(x_series), length=length(x_series))
fit6  <- lm((ct_calc_abs17[1:length(x_series)])~x_series)
xx6 <- seq(1,length(x_series), length=length(x_series))
fit7  <- lm((ct_calc_abs18[1:length(x_series)])~x_series)
xx7 <- seq(1,length(x_series), length=length(x_series))
fit8  <- lm((ct_calc_abs20[1:length(x_series)])~x_series)
xx8 <- seq(1,length(x_series), length=length(x_series))
fit9  <- lm((ct_calc_abs26[1:length(x_series)])~x_series)
xx9 <- seq(1,length(x_series), length=length(x_series))
fit10  <- lm((ct_calc_abs29[1:length(x_series)])~x_series)
xx10 <- seq(1,length(x_series), length=length(x_series))
fit11  <- lm((ct_calc_abs30[1:length(x_series)])~x_series)
xx11 <- seq(1,length(x_series), length=length(x_series))

plot(xx,predict(fit, data.frame(x_series=xx)),xlab=NA, ylab=NA,yaxt = "n", main="Inter-fractional set-up variability relative to fractionation",ylim = c(0,+20),type="l")
lines(xx2, predict(fit2, data.frame(x_series=xx)))
lines(xx3, predict(fit3, data.frame(x_series=xx)))
lines(xx4, predict(fit4, data.frame(x_series=xx)))
lines(xx5, predict(fit5, data.frame(x_series=xx)))
lines(xx6, predict(fit6, data.frame(x_series=xx)))
lines(xx7, predict(fit7, data.frame(x_series=xx)))
lines(xx8, predict(fit8, data.frame(x_series=xx)))
lines(xx9, predict(fit9, data.frame(x_series=xx)))
lines(xx10, predict(fit10, data.frame(x_series=xx)))
lines(xx11, predict(fit11, data.frame(x_series=xx)))

abline(h=0, col = "black", lty=2);
axis(2, at=0, las=2,labels= "CT")
axis(2, at=5, las=2,labels= "5")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=20, las=2,labels= "20")
mtext("Absolute shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# treatment days", side = 1, line = 2, cex = 0.9, font = 1)

#
mat <- matrix(c(1,2), 2)
layout(mat, c(1,1),c(1,1))
par(mar=c(1,4.1,4.1,2.1)) # tiefe -y, -x, +y, +x
boxplot(sum_dist_marker_balloon,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional set-up variability", ylim=c(-15,15))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "CT")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=5, las=2,labels= "5")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-20, las=2,labels= "-20")
axis(1, at=1:(length(x_series)), las=2,labels=labels3)
legend("topright", legend="a)", cex = 0.8,bg="white")
#text(1:(length(x_series)),-23, srt=45, pos=1, xpd=TRUE, labels=x_series,cex= 1)
mtext("Relative shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
#mtext("# of treatment days", side = 1, line = 2, cex = 0.9, font = 1)

#

par(mar=c(5.1,4.1,1,2.1)) # tiefe -y, -x, +y, +x
plot(sd_dist_mb, xlab= NA,ylab=NA,axes=F,xaxt="n",ylim=c(0,10),type="p", col="black",pch=3)
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "0")
axis(2, at=2, las=2,labels= "2")
axis(2, at=4, las=2,labels= "4")
axis(2, at=6, las=2,labels= "6")
axis(2, at=8, las=2,labels= "8")
axis(2, at=10, las=2,labels= "10")
axis(1, at=1:(length(x_series)), las=2,labels=labels3)
text((1:(length(x_series))-0.1),-1.2, srt=45, pos=1, xpd=TRUE, labels=x_series,cex= 1)
mtext("Standard deviation [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of treatment days", side = 1, line = 2, cex = 0.9, font = 1)

fit  <- lm((sd_dist_mb[1:length(x_series)])~x_series)
xx <- seq(1,length(x_series), length=length(x_series))
lines(xx, predict(fit, data.frame(x_series=xx)))

# r square of fit ##
# ##################
r_square=summary(lm((sd_dist_mb[1:length(x_series)])~x_series))$r.squared #R-squared = Explained variation / Total variation. R-squared is always between 0 and 100%: 0% indicates that the model explains none of the variability of the response data around its mean.100% indicates that the model explains all the variability of the response data around its mean. In general, the higher the R-squared, the better the model fits your data.
# sigma of slope ##
# #################
sigma= summary(lm((sd_dist_mb[1:length(x_series)])~x_series))$sigma #std
# slope of fit ##
# ###############
coefficients= summary(lm((sd_dist_mb[1:length(x_series)])~x_series))$ coefficients
m=coefficients[2,1]
legendtext3<-c(paste("raw data"),paste("predicted data:","r","\u00B2","=",round(r_square,3),", slope=",round(m,3),", p","\u003C",p_rtdays))
legend("topleft", legend=legendtext3,pch=c(3,NA),lty=c(NA,1),col=c("black","black"),cex=0.7)
legend("topright", legend="b)", cex = 0.8,bg="white")
#


## plot Balloon reference CBCT of all patients ##


pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_reference_cbct.pdf",width= 9, height= 5)
par(mar=c(5,5,2,5))
plot(x_series2,sum_ref_cbct,xlab=NA, ylab=NA,yaxt = "n", xaxt="n", xlim=c(1,max(x_series2)),main="Reference CBCT of all patients",col="black",pch=1)

abline(h=0, col = "black", lty=2)
abline(h=2, col = "black", lty=3)
axis(2, at=0, las=2,labels= "CT")
#axis(2, at=1, las=2,labels= "1")
axis(2, at=2, las=2,labels= "2")
#axis(2, at=3, las=2,labels= "3")
axis(2, at=5, las=2,labels= "5")
#axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=25, las=2,labels= "25")
axis(1, at=1:(x_lim), las=1,labels=labels2)
text((1:(x_lim)-.3),-2.5, srt=90, pos=1, xpd=TRUE, labels=labels_pat2,cex= 1)
mtext("Absolute distances [%]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
legend(1,15, c("Data related to [%]","Data related to [mm]"),pch=c(1,20), col =c("black","black"))
par(new = T)
plot(x_series2,sum_ref_cbct_mm,pch=20, axes=F,xlab=NA, ylab=NA,ylim=c(0,5))
axis(side = 4,las=2)
mtext(side = 4, line = 3, "Absolute distances [mm]")

#

par(mar=c(5,5,2,5))
plot(x_series2,sum_ref_cbct,xlab=NA, ylab=NA,yaxt = "n", xaxt="n", xlim=c(1,max(x_series2)),main="Reference CBCT of all patients",col="black",pch=1)

abline(h=0, col = "black", lty=2)
abline(h=2, col = "black", lty=3)
axis(2, at=0, las=2,labels= "CT")
#axis(2, at=1, las=2,labels= "1")
axis(2, at=2, las=2,labels= "2")
#axis(2, at=3, las=2,labels= "3")
axis(2, at=5, las=2,labels= "5")
#axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=25, las=2,labels= "25")
axis(1, at=1:(x_lim), las=1,labels=labels2)
text((1:(x_lim)-.3),-2.5, srt=90, pos=1, xpd=TRUE, labels=labels_pat3,cex= 1)
mtext("Absolute distances [%]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
legend(1,15, c("Data related to [%]","Data related to [mm]"),pch=c(1,20), col =c("black","black"))
par(new = T)
plot(x_series2,sum_ref_cbct_mm,pch=20, axes=F,xlab=NA, ylab=NA,ylim=c(0,5))
axis(side = 4,las=2)
mtext(side = 4, line = 3, "Absolute distances [mm]")

# paper print out ##

par(mar=c(5,5,2,5))
plot(x_series2_paper,sum_ref_cbct_paper,xlab=NA, ylab=NA,yaxt = "n", xaxt="n", xlim=c(1,max(x_series2_paper)),ylim=c(0,3),main="Reference CBCT of all patients",col="black",pch=1)

abline(h=0, col = "black", lty=2)
abline(h=1, col = "black", lty=3)
axis(2, at=0, las=2,labels= "CT")
axis(2, at=1, las=2,labels= "1")
axis(2, at=2, las=2,labels= "2")
axis(2, at=3, las=2,labels= "3")
axis(2, at=4, las=2,labels= "4")
axis(2, at=5, las=2,labels= "5")
#axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=25, las=2,labels= "25")
axis(1, at=1:(x_lim_paper), las=1,labels=labels2_paper)
text((1:(x_lim_paper)-.3),-0.2, srt=45, pos=1, xpd=TRUE, labels=labels_patb,cex= 1)
mtext("Absolute distances [%]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
legend(1,3, c("Data related to [%]","Data related to [mm]"),pch=c(1,19), col =c("black","black"))
par(new = T)
plot(x_series2_paper,sum_ref_cbct_mm_paper,pch=19, axes=F,xlab=NA, ylab=NA,yaxt = "n",ylim=c(0,3))
axis(4, at=0, las=2,labels= "CT")
axis(4, at=1, las=2,labels= "1")
axis(4, at=2, las=2,labels= "2")
axis(4, at=3, las=2,labels= "3")
axis(4, at=4, las=2,labels= "4")
axis(4, at=5, las=2,labels= "5")
mtext(side = 4, line = 3, "Absolute distances [mm]")

quit()
# ## plot Marker reference CBCT of all patients ##
# 
# 
# par(mar=c(5,5,2,5))
# plot(x_series2,sum_ref_cbct_marker,xlab=NA, ylab=NA,yaxt = "n", xaxt="n", xlim=c(1,max(x_series2)),main="Marker reference CBCT of all patients",col="black",pch=1)
# 
# abline(h=0, col = "black", lty=2)
# abline(h=2, col = "black", lty=2)
# axis(2, at=0, las=2,labels= "CT")
# axis(2, at=1, las=2,labels= "1")
# axis(2, at=2, las=2,labels= "2")
# axis(2, at=3, las=2,labels= "3")
# axis(2, at=4, las=2,labels= "4")
# axis(2, at=5, las=2,labels= "5")
# axis(2, at=6, las=2,labels= "6")
# axis(2, at=7, las=2,labels= "7")
# axis(1, at=1:(x_lim), las=1,labels=labels2)
# text(1:(x_lim),-0.3, srt=45, pos=1, xpd=TRUE, labels=labels_pat2,cex= 1)
# mtext("Absolute distances [%]", side = 2, line=3, cex = 0.9, font = 1)
# mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
# legend(1,5, c("Data related to [%]","Data related to [mm]"),pch=c(1,20), col =c("black","black"))
# par(new = T)
# plot(x_series2,sum_ref_cbct_mm,pch=20, axes=F,xlab=NA, ylab=NA,ylim=c(0,5))
# axis(side = 4,las=2)
# mtext(side = 4, line = 3, "Absolute distances [mm]")


## plot of histogram x-y-z balloon motion of all patients ## 
# CBCT as reference

#
pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon_hist.pdf",width= 9, height= 5)

matrix_hist<-sumallhists_balloon
x <- sumallhists_balloon[c(1),]
y <- sumallhists_balloon[c(2),]
z <- sumallhists_balloon[c(3),]

diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks) # "FD"
x_balloon=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))

#

diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_balloon=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_balloon=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))


#

max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))

plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="Inter-fractional balloon motion variability based on CBCT w/o Exactrac correction",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)

legend(-round((max_x_fits),0),round((max_y_fits),0), legend=legendtext,lty=c(2,1,6), col =c("black","black","black"),cex = 0.8,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.9, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)

## plot of histogram x-y-z marker motion of all patients ## 
# CBCT as reference

#
pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker_hist.pdf",width= 9, height= 5)

matrix_hist<-sumallhists_marker
x <- sumallhists_marker[c(1),]
y <- sumallhists_marker[c(2),]
z <- sumallhists_marker[c(3),]

diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
xfit<-seq(min(x),max(x),length=y_hist_abtasten)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
xfit2<-seq(min(y),max(y),length=y_hist_abtasten)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
xfit3<-seq(min(z),max(z),length=y_hist_abtasten)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#

max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))

plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="Inter-fractional marker motion variability based on CBCT w/o Exactrac correction",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)

legend(-round((max_x_fits),0),round((max_y_fits),0), legend=legendtext2,lty=c(2,1,6), col =c("black","black","black"),cex = 0.8,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.9, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)


## plot of histogram x-y-z balloon motion of all patients including Exactrac correction ## 
# CBCT as reference #

#
pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon_hist_exactrac_corr.pdf",width= 9, height= 5)

matrix_hist<-sumallhists_corr_balloon
x <- sumallhists_corr_balloon[c(1),]
y <- sumallhists_corr_balloon[c(2),]
z <- sumallhists_corr_balloon[c(3),]
diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
x_corr_balloon=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_balloon=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_balloon=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#
max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))
plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="Inter-fractional balloon motion variability based on CBCT with Exactrac correction",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)
legend(-round((max_x_fits),0),round((max_y_fits),0), legend=legendtext_corr,lty=c(2,1,6), col =c("black","black","black"),cex = 0.8,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.9, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)

##

mat <- matrix(c(1,3,2,4), 2,2)
layout(mat, c(1,1),c(1,1))
par(mar=c(2,4.1,4.1,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_ball_box_x,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional balloon motion variability based on CBCT with Exactrac correction", ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="a)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)
text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Lateral shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(2,4.1,4.1,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_ball_box_y,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6), ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="b)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)
text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Vertical shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(5.1,4.1,2,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_ball_box_z,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6), ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="c)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)

text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Longitudinal shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(5.1,4.1,2,2.1)) # tiefe -y, -x, +y, +x
max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))
plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)
legend("topright", legend="d)", cex = 0.8,bg="white")
legend("topleft", legend=legendtext_corr,lty=c(2,1,6), col =c("black","black","black"),cex = 0.55,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.55, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)




## plot of histogram x-y-z marker motion of all patients including Exactrac correction ## 
# CBCT as reference

#
pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker_hist_exactrac_corr.pdf",width= 9, height= 5)


matrix_hist<-sumallhists_corr_marker
x <- sumallhists_corr_marker[c(1),]
y <- sumallhists_corr_marker[c(2),]
z <- sumallhists_corr_marker[c(3),]

diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
x_corr_marker=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_marker=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_marker=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#
max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))
plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="Inter-fractional marker motion variability based on CBCT with Exactrac correction",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)

legend(-round((max_x_fits),0),round((max_y_fits),0), legend=legendtext_corr2,lty=c(2,1,6), col =c("black","black","black"),cex = 0.8,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.9, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)

##

mat <- matrix(c(1,3,2,4), 2,2)
layout(mat, c(1,1),c(1,1))
par(mar=c(2,4.1,4.1,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_marker_box_x,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional marker motion variability based on CBCT with Exactrac correction", ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="a)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)
text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Lateral shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(2,4.1,4.1,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_marker_box_y,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6), ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="b)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)
text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Vertical shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(5.1,4.1,2,2.1)) # tiefe -y, -x, +y, +x
boxplot(hist_corr_marker_box_z,xlab= NA,ylab=NA,xaxt="n",axes= F,pars=list(boxwex=.8,staplewex=.6), ylim=c(-13,13))
box()
abline(h=0, col = "black", lty=2)
axis(2, at=0, las=2,labels= "")
axis(2, at=-10, las=2,labels= "-10")
axis(2, at=10, las=2,labels= "10")
axis(2, at=15, las=2,labels= "15")
axis(2, at=30, las=2,labels= "30")
axis(2, at=40, las=2,labels= "40")
axis(2, at=5, las=2,labels= "5")
axis(2, at=-5, las=2,labels= "-5")
axis(2, at=-15, las=2,labels= "-15")
axis(2, at=-30, las=2,labels= "-30")
axis(2, at=-40, las=2,labels= "-40")
axis(2, at=-50, las=2,labels= "-50")
legend("topright", legend="c)", cex = 0.8,bg="white")
mtext("ref. CBCT", side = 2, line = 0.5, las=2, at=0,cex = 0.5, font = 1)
axis(1, at=1:length(empty_vec_x), las=2,labels=empty_vec_x)
text(1:length(num_pat_x),-15, srt=0, pos=1, xpd=TRUE, labels=num_pat_x,cex= 1)
mtext("Longitudinal shifts [mm]", side = 2, line=3, cex = 0.8, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.8, font = 1)
#
par(mar=c(5.1,4.1,2,2.1)) # tiefe -y, -x, +y, +x
max_y_fits=max(yfit,yfit2,yfit3)
max_x_fits=15#max(xfit,xfit2,xfit3)
labels_y=seq(0,max_y_fits,(mround((max_y_fits/10),10)))
plot(hx, ylab=NA, xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(-(round(max_x_fits,1)),+(round(max_x_fits,1))),ylim=c(0,+(round(max_y_fits,1))))
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
lines(xfit2, yfit2,type="l", lty=1,col=rgb(0,0,0,1))
lines(xfit3, yfit3,type="l", lty=6,col=rgb(0,0,0,1))

box()
axis(1, at=-5, las=1,labels= "-5")
axis(1, at=-10, las=1,labels= "-10")
axis(1, at=-15, las=1,labels= "-15")
axis(1, at=-20, las=1,labels= "-20")
axis(1, at=-25, las=1,labels= "-25")
axis(1, at=0, las=1,labels= "")
axis(1, at=5, las=1,labels= "5")
axis(1, at=10, las=1,labels= "10")
axis(1, at=15, las=1,labels= "15")
axis(1, at=20, las=1,labels= "20")
axis(1, at=25, las=1,labels= "25")
axis(1, at=30, las=1,labels= "30")
axis(1, at=-30, las=1,labels= "-30")
axis(2,at=labels_y,las=1,labels=labels_y)
legend("topright", legend="d)", cex = 0.8,bg="white")
legend("topleft", legend=legendtext_corr2,lty=c(2,1,6), col =c("black","black","black"),cex = 0.55,bg="white")
mtext("Frequency", side = 2, line=3, cex = 0.9, font = 1)
mtext("Relative shifts [mm]", side = 1, line = 3, cex = 0.9, font = 1)
mtext("reference CBCT", side = 1, line = 0.5, at=0,cex = 0.55, font = 1)
abline(v=0, col = "black", lty=2,lwd=.5)

## Balloon boxplot  + horizontal histogram patients: inital plan vs replanning #

pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon_initial_vs_replanning_corr.pdf",width= 9, height= 5)
#  histo curves

matrix_hist<-cbind(sumallhists_corr_balloon_a,sumallhists_corr_balloon_b)
x <- sumallhists_corr_balloon_a[c(1),]
y <- sumallhists_corr_balloon_a[c(2),]
z <- sumallhists_corr_balloon_a[c(3),]

diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
x_corr_marker=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten2)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_marker=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten2)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_marker=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten2)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#

num_counts<-c(yfit,yfit2,yfit3)
max_counts=max(num_counts)

List=list()
for(i in 1:(length(num_counts))){
  a=num_counts[i]
  b=a [! a %in% remove]
  LM= b*100/max_counts
  List[[length(List)+1]] = LM
}
counts_prozent <- as.numeric(unlist(List))
x_length=length(yfit)
y_length=length(yfit2)
z_length=length(yfit3)
yfit=round(counts_prozent[1:x_length],0)
yfit2=round(counts_prozent[x_length+1:y_length],0)
yfit3=round(counts_prozent[x_length+y_length+1:z_length],0)

#
yfit_a=yfit
yfit2_a=yfit2
yfit3_a=yfit3
xfit_a=xfit
xfit2_a=xfit2
xfit3_a=xfit3

#

x <- sumallhists_corr_balloon_b[c(1),]
y <- sumallhists_corr_balloon_b[c(2),]
z <- sumallhists_corr_balloon_b[c(3),]

diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
x_corr_marker=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten2)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_marker=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten2)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_marker=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten2)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#

num_counts<-c(yfit,yfit2,yfit3)
max_counts=max(num_counts)

List=list()
for(i in 1:(length(num_counts))){
  a=num_counts[i]
  b=a [! a %in% remove]
  LM= b*100/max_counts
  List[[length(List)+1]] = LM
}
counts_prozent <- as.numeric(unlist(List))
x_length=length(yfit)
y_length=length(yfit2)
z_length=length(yfit3)
yfit=round(counts_prozent[1:x_length],0)
yfit2=round(counts_prozent[x_length+1:y_length],0)
yfit3=round(counts_prozent[x_length+y_length+1:z_length],0)


#

yfit_b=yfit
yfit2_b=yfit2
yfit3_b=yfit3
xfit_b=xfit
xfit2_b=xfit2
xfit3_b=xfit3

# first plot x direction ##

mat <- matrix(c(1,2), 1)
layout(mat, c(3,1),c(1,1))
par(mar=c(5.1,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_x_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.35,staplewex=.6),main="Inter-fractional positioning: initial plan vs replanning inclunding Exactrac correction",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
mtext("ACR Phantom SNR Tests", side = 1, line = -25, cex = 1, font = 1)
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend(1.2,-10, legend=legendtext4,pch=c(17,20),col=(c("azure3","azure4")),cex = 0.8,bg="white")
mtext("Lateral shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(5.1,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=0,col="azure3")
lines(yfit_b, xfit_b,  type="o",pch=20,lty=0,col="azure4")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# second plot y direction ##

mat <- matrix(c(1,2), 1)
layout(mat, c(3,1),c(1,1))
par(mar=c(5.1,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_y_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.35,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
mtext("ACR Phantom SNR Tests", side = 1, line = -25, cex = 1, font = 1)
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend(1.2,-10, legend=legendtext5,pch=c(17,20),col=(c("azure3","azure4")),cex = 0.8,bg="white")
mtext("Vertical shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(5.1,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=0,col="azure3")
lines(yfit2_b, xfit2_b,  type="o",pch=20,lty=0,col="azure4")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# second plot y direction ##

mat <- matrix(c(1,2), 1)
layout(mat, c(3,1),c(1,1))
par(mar=c(5.1,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_z_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.35,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
mtext("ACR Phantom SNR Tests", side = 1, line = -25, cex = 1, font = 1)
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend(1.2,-10, legend=legendtext6,pch=c(17,20),col=(c("azure3","azure4")),cex = 0.8,bg="white")
mtext("Longitudinal shifts [mm]", side = 2, line=3, cex = 0.9, font = 1)
mtext("# of patients", side = 1, line = 2, cex = 0.9, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(5.1,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=0,col="azure3")
lines(yfit3_b, xfit3_b,  type="o",pch=20,lty=0,col="azure4")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

#

# third all directions in one plot ##

# x ##

mat <- matrix(c(1,3,5,2,4,6), 3,2)
layout(mat, c(3,1),c(1,1))
par(mar=c(0,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_x_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional balloon motion: Initial plan vs replanning",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext4,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Lateral shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(0,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit_b, xfit_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="a)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# y

par(mar=c(2,4.1,2,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_y_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext5,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Vertical shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(2,0,2,2)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit2_b, xfit2_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="b)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# z

par(mar=c(4.25,4.1,0,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_z_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17.5, srt=0, pos=1, xpd=TRUE, labels=c(6,11,13,23,24,"",6,11,13,23,24))
legend("topleft", legend=legendtext6,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Longitudinal shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)
mtext("# of patients", side = 1, line = 2, cex = 0.7, font = 1)
# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(4.25,0,0,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit3_b, xfit3_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="c)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# third all directions in one plot balloon -- for paper print out ##

#1

# x ##

mat <- matrix(c(1,3,5,2,4,6), 3,2)
layout(mat, c(3,1),c(1,1))
par(mar=c(0,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_x_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional balloon motion: Initial plan vs replanning",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
#legend("topleft", legend=legendtext4_paper2,pch=c(2),col=(c("black")),cex = 1,bg="white")
legend(x="topleft", legend=legendtext4_paper,pch=c(17,20),col=(c("red","blue")),cex = 1.2,bg="white",ncol=2)
mtext("LR [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(0,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=1,col="red")
lines(yfit_b, xfit_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="a)", cex = 1.2,bg="white")

empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# y

par(mar=c(2,4.1,2,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_y_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
#legend("topleft", legend=legendtext5_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("AP [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(2,0,2,2)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=1,col="red")
lines(yfit2_b, xfit2_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="b)", cex = 1.2,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# z

par(mar=c(4.25,4.1,0,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_z_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
text(1:11,-17.5, srt=0, pos=1, xpd=TRUE, labels=c(6,11,13,23,24,"",6,11,13,23,24),cex=1.2)
#legend("topleft", legend=legendtext6_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("SI [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)
mtext("number of patients", side = 1, line = 2, cex = 1, font = 1)
# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(4.25,0,0,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=1,col="red")
lines(yfit3_b, xfit3_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="c)", cex = 1.2,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

#2

# x ##

mat <- matrix(c(1,3,5,2,4,6), 3,2)
layout(mat, c(3,1),c(1,1))
par(mar=c(0,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_x_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional balloon motion: Initial plan vs replanning",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
#legend("topleft", legend=legendtext4_paper2,pch=c(2),col=(c("black")),cex = 1,bg="white")
legend(x="topleft", legend=legendtext4_paper,pch=c(17,16),col=(c("azure3","azure4")),cex = 1.2,bg="white",ncol=2)
mtext("LR [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(0,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit_b, xfit_b,  type="o",pch=16,lty=1,col="azure4")
legend("topright", legend="a)", cex = 1.2,bg="white")

empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# y

par(mar=c(2,4.1,2,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_y_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
#legend("topleft", legend=legendtext5_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("AP [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(2,0,2,2)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit2_b, xfit2_b,  type="o",pch=16,lty=1,col="azure4")
legend("topright", legend="b)", cex = 1.2,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# z

par(mar=c(4.25,4.1,0,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_balloon_total_z_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis,cex.axis=1.2)
text(1:11,-17.5, srt=0, pos=1, xpd=TRUE, labels=c(6,11,13,23,24,"",6,11,13,23,24),cex=1.2)
#legend("topleft", legend=legendtext6_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("SI [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)
mtext("number of patients", side = 1, line = 2, cex = 1, font = 1)
# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(4.25,0,0,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit3_b, xfit3_b,  type="o",pch=16,lty=1,col="azure4")
legend("topright", legend="c)", cex = 1.2,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

## Marker boxplot  + horizontal histogram patients: inital plan vs replanning #

pdf("/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker_initial_vs_replanning_corr.pdf",width= 9, height= 5)
#  histo curves

matrix_hist<-cbind(sumallhists_corr_marker_a,sumallhists_corr_marker_b)
x <- sumallhists_corr_marker_a[c(1),]
y <- sumallhists_corr_marker_a[c(2),]
z <- sumallhists_corr_marker_a[c(3),]

diff=round(diff((c((min(matrix_hist)),(max(matrix_hist))))),0)
num_bins=round(sqrt((ncol(matrix_hist))),0)# x,y,z have same number of values
diff2=round(diff((c((min(x)),(max(x))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hx<-hist(x, breaks=breaks)
x_corr_marker=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten2)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_marker=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten2)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_marker=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten2)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#

num_counts<-c(yfit,yfit2,yfit3)
max_counts=max(num_counts)

List=list()
for(i in 1:(length(num_counts))){
  a=num_counts[i]
  b=a [! a %in% remove]
  LM= b*100/max_counts
  List[[length(List)+1]] = LM
}
counts_prozent <- as.numeric(unlist(List))
x_length=length(yfit)
y_length=length(yfit2)
z_length=length(yfit3)
yfit=round(counts_prozent[1:x_length],0)
yfit2=round(counts_prozent[x_length+1:y_length],0)
yfit3=round(counts_prozent[x_length+y_length+1:z_length],0)

#
yfit_a=yfit
yfit2_a=yfit2
yfit3_a=yfit3
xfit_a=xfit
xfit2_a=xfit2
xfit3_a=xfit3

#


x <- sumallhists_corr_marker_b[c(1),]
y <- sumallhists_corr_marker_b[c(2),]
z <- sumallhists_corr_marker_b[c(3),]

hx<-hist(x, breaks=breaks)
x_corr_marker=hx
xfit<-seq(min(x),max(x),length=y_hist_abtasten2)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(hx$mids[1:2])*length(x)
lines(xfit, yfit,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(y)),(max(y))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hy<-hist(y, breaks=breaks)
y_corr_marker=hy
xfit2<-seq(min(y),max(y),length=y_hist_abtasten2)
yfit2<-dnorm(xfit2,mean=mean(y),sd=sd(y))
yfit2 <- yfit2*diff(hy$mids[1:2])*length(y)
lines(xfit2, yfit2,type="l", lty=2,col=rgb(0,0,0,1))
#
diff2=round(diff((c((min(z)),(max(z))))),0)
div=round((diff2/diff),2)
breaks=round(div*num_bins,0)
hz<-hist(z, breaks=breaks)
z_corr_marker=hz
xfit3<-seq(min(z),max(z),length=y_hist_abtasten2)
yfit3<-dnorm(xfit3,mean=mean(z),sd=sd(z))
yfit3 <- yfit3*diff(hz$mids[1:2])*length(z)
lines(xfit3, yfit3,type="l", lty=2,col=rgb(0,0,0,1))
#

num_counts<-c(yfit,yfit2,yfit3)
max_counts=max(num_counts)

List=list()
for(i in 1:(length(num_counts))){
  a=num_counts[i]
  b=a [! a %in% remove]
  LM= b*100/max_counts
  List[[length(List)+1]] = LM
}
counts_prozent <- as.numeric(unlist(List))
x_length=length(yfit)
y_length=length(yfit2)
z_length=length(yfit3)
yfit=round(counts_prozent[1:x_length],0)
yfit2=round(counts_prozent[x_length+1:y_length],0)
yfit3=round(counts_prozent[x_length+y_length+1:z_length],0)

#
yfit_b=yfit
yfit2_b=yfit2
yfit3_b=yfit3
xfit_b=xfit
xfit2_b=xfit2
xfit3_b=xfit3

# third all directions in one plot ##

# x ##

mat <- matrix(c(1,3,5,2,4,6), 3,2)
layout(mat, c(3,1),c(1,1))
par(mar=c(0,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_x_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional marker motion: Initial plan vs replanning",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext7,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Lateral shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(0,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit_b, xfit_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="a)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# y

par(mar=c(2,4.1,2,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_y_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext8,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Vertical shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(2,0,2,2)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit2_b, xfit2_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="b)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# z

par(mar=c(4.25,4.1,0,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_z_boxplot,notch=FALSE, col=(c("azure3","azure3","azure3","azure3","azure3","","azure4","azure4","azure4","azure4","azure4")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17.5, srt=0, pos=1, xpd=TRUE, labels=c(6,11,13,23,24,"",6,11,13,23,24))
legend("topleft", legend=legendtext9,pch=c(17,20,2),col=(c("azure3","azure4","black")),cex = 0.7,bg="white")
mtext("Longitudinal shifts [mm]", side = 2, line=3, cex = 0.7, font = 1)
abline(h = 0, col = "black", lty=2)
mtext("# of patients", side = 1, line = 2, cex = 0.7, font = 1)
# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(4.25,0,0,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=1,col="azure3")
lines(yfit3_b, xfit3_b,  type="o",pch=20,lty=1,col="azure4")
legend("topright", legend="c)", cex = 0.8,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# third all directions in one plot marker -- for paper printing ##

# x ##

mat <- matrix(c(1,3,5,2,4,6), 3,2)
layout(mat, c(3,1),c(1,1))
par(mar=c(0,4.1,4.1,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_x_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),main="Inter-fractional marker motion: Initial plan vs replanning",ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext7_paper2,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("LR [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting x direction ##

max_y_fits=max(yfit_a,yfit_b)
par(mar=c(0,0,4.1,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit_a, xfit_a,  type="o",pch=17,lty=1,col="red")
lines(yfit_b, xfit_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="a)", cex = 1,bg="white")
legend("bottomright", legend=legendtext7_paper,pch=c(17,20),col=(c("red","blue")),cex = 1,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# y

par(mar=c(2,4.1,2,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_y_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
#text(1:11,-17, srt=0, pos=1, xpd=TRUE, labels=c(1,2,3,4,5,"",1,2,3,4,5))
legend("topleft", legend=legendtext8_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("AP [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)

# histo plotting y direction ##

max_y_fits=max(yfit2_a,yfit2_b)
par(mar=c(2,0,2,2)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit2_a, xfit2_a,  type="o",pch=17,lty=1,col="red")
lines(yfit2_b, xfit2_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="b)", cex = 1,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)

# z

par(mar=c(4.25,4.1,0,0)) # tiefe -y, -x, +y, +x

boxplot(sumallhists_corr_marker_total_z_boxplot,notch=FALSE, col=(c("red","red","red","red","red","","blue","blue","blue","blue","blue")),ylab=NA,xlab=NA,axes= F,pars=list(boxwex=.8,staplewex=.6),ylim=y_lim)#ylab=NA,xlab=NA,axes= F
box()
abline(v = 6, col = "black", lty=1);
axis(1, at=1:length(empty_vec),labels=empty_vec)
axis(2, at=y_axis,las=2,labels=y_axis)
text(1:11,-17.5, srt=0, pos=1, xpd=TRUE, labels=c(6,11,13,23,24,"",6,11,13,23,24))
legend("topleft", legend=legendtext9_paper,pch=c(2),col=(c("black")),cex = 1,bg="white")
mtext("SI [mm]", side = 2, line=3, cex = 1, font = 1)
abline(h = 0, col = "black", lty=2)
mtext("number of patients", side = 1, line = 2, cex = 1, font = 1)
# histo plotting z direction ##

max_y_fits=max(yfit3_a,yfit3_b)
par(mar=c(4.25,0,0,2.1)) # tiefe -y, -x, +y, +x
plot(hx, ylab=NA,xlab=NA,col=rgb(0,1,1,0),border=NA,yaxt="n",xaxt = "n",main="",xlim=c(0,+(max_y_fits+3)),ylim=y_lim)
box()
lines(yfit3_a, xfit3_a,  type="o",pch=17,lty=1,col="red")
lines(yfit3_b, xfit3_b,  type="o",pch=20,lty=1,col="blue")
legend("topright", legend="c)", cex = 1,bg="white")
empty_vec3=rep("",length(y_axis))
axis(2, at=y_axis, las=1,labels=empty_vec3)
abline(h = 0, col = "black", lty=2)


##########
## save ##
##########

write.table((balmeanstdballoon_corr), file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon_mean_std_corr.dat", append=FALSE, row.names= FALSE,  sep="\t",dec=".")

write.table((balmeanstdmarker_corr), file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker_mean_std_corr.dat", append=FALSE, row.names= FALSE,  sep="\t",dec=".")

corr_marker_x=cbind(x_corr_marker$mids,x_corr_marker$counts)
corr_marker_y=cbind(y_corr_marker$mids,y_corr_marker$counts)
corr_marker_z=cbind(z_corr_marker$mids,z_corr_marker$counts)

corr_balloon_x=cbind(x_corr_balloon$mids,x_corr_balloon$counts)
corr_balloon_y=cbind(y_corr_balloon$mids,y_corr_balloon$counts)
corr_balloon_z=cbind(z_corr_balloon$mids,z_corr_balloon$counts)

non_corr_balloon_x=cbind(x_balloon$mids,x_balloon$counts) 
non_corr_balloon_y=cbind(y_balloon$mids,y_balloon$counts)
non_corr_balloon_z=cbind(z_balloon$mids,z_balloon$counts)

write.table(corr_balloon_x, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_balloon_corr_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(corr_balloon_y, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_balloon_corr_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(corr_balloon_z, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_balloon_corr_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(corr_marker_x, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_marker_corr_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(corr_marker_y, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_marker_corr_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(corr_marker_z, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_marker_corr_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(sumallhists_corr_marker, file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_hist_marker_allpat.dat", append=FALSE, row.names= FALSE, col.names= TRUE, sep="\t",dec=".")

write.table(hist_corr_ball_1[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon1_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_1[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon1_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_1[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon1_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_1[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker1_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_1[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker1_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_1[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker1_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_14[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon14_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_14[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon14_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_14[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon14_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_14[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker14_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_14[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker14_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_14[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker14_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_12[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon12_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_12[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon12_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_12[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon12_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_12[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker12_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_12[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker12_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_12[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker12_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_44[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon44_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_44[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon44_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_44[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon44_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_44[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker44_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_44[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker44_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_44[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker44_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_2[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon2_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_2[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon2_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_2[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon2_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_2[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker2_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_2[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker2_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_2[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker2_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_5[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon5_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_5[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon5_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_5[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon5_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_5[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker5_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_5[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker5_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_5[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker5_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_7[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon7_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_7[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon7_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_7[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon7_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_7[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker7_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_7[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker7_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_7[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker7_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_8[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon8_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_8[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon8_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_8[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon8_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_8[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker8_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_8[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker8_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_8[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker8_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_10[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon10_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_10[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon10_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_10[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon10_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_10[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker10_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_10[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker10_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_10[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker10_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_28[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon28_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_28[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon28_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_28[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon28_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_28[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker28_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_28[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker28_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_28[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker28_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_ball_45[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon45_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_45[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon45_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_ball_45[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_balloon45_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")

write.table(hist_corr_marker_45[c(1),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker45_x.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_45[c(2),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker45_y.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")
write.table(hist_corr_marker_45[c(3),], file = "/home/boeckefx/Documents/Prostate_SOP/Data/vero_cbct_analysis/ifpp_marker45_z.dat", append=FALSE, row.names= FALSE, col.names= FALSE, sep="\t",dec=".")



print("ENDE")
quit()
